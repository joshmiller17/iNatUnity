{
  "api/Global.Demo.html": {
    "href": "api/Global.Demo.html",
    "title": "Class Demo | iNat+Unity",
    "keywords": "Class Demo Inheritance Object Demo Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Demo : MonoBehaviour Fields apiTokenInputObj Declaration public GameObject apiTokenInputObj Field Value Type Description GameObject AttributionObj Declaration public GameObject AttributionObj Field Value Type Description GameObject CityDropdownObj Declaration public GameObject CityDropdownObj Field Value Type Description GameObject ErrorMessageObj Declaration public GameObject ErrorMessageObj Field Value Type Description GameObject INatImage Declaration public GameObject INatImage Field Value Type Description GameObject INatManagerObj Declaration public GameObject INatManagerObj Field Value Type Description GameObject InfoDetailsObj Declaration public GameObject InfoDetailsObj Field Value Type Description GameObject LoadingTextObj Declaration public GameObject LoadingTextObj Field Value Type Description GameObject LoggedInAsObj Declaration public GameObject LoggedInAsObj Field Value Type Description GameObject LoginButtonObj Declaration public GameObject LoginButtonObj Field Value Type Description GameObject ObservationCountObj Declaration public GameObject ObservationCountObj Field Value Type Description GameObject PostLoginObj Declaration public GameObject PostLoginObj Field Value Type Description GameObject QualityGradeDropdownObj Declaration public GameObject QualityGradeDropdownObj Field Value Type Description GameObject SearchButton Declaration public GameObject SearchButton Field Value Type Description GameObject TaxonDropdownObj Declaration public GameObject TaxonDropdownObj Field Value Type Description GameObject VoteButtonObjs Declaration public GameObject VoteButtonObjs Field Value Type Description GameObject VoteButtonOneObj Declaration public GameObject VoteButtonOneObj Field Value Type Description GameObject VoteButtonTwoObj Declaration public GameObject VoteButtonTwoObj Field Value Type Description GameObject YearDropdownObj Declaration public GameObject YearDropdownObj Field Value Type Description GameObject Methods CheckApiToken() Declaration public void CheckApiToken() CitySelectDropdownCallback() Declaration public void CitySelectDropdownCallback() ClickLoginButton() Declaration public void ClickLoginButton() CreateIdentificationCallback(Identification) Declaration public void CreateIdentificationCallback(Identification ident) Parameters Type Name Description Identification ident DoSearch() Declaration public void DoSearch() HandleError(Error) Declaration public void HandleError(Error e) Parameters Type Name Description Error e MoveCarouselLeft() Declaration public void MoveCarouselLeft() MoveCarouselRight() Declaration public void MoveCarouselRight() QualityGradeSelectDropdownCallback() Declaration public void QualityGradeSelectDropdownCallback() RemoveLoading() Declaration public void RemoveLoading() RemoveObservation() Declaration public void RemoveObservation() SetUser(User) Declaration public void SetUser(User me) Parameters Type Name Description User me SetUserError(Error) Declaration public void SetUserError(Error e) Parameters Type Name Description Error e TaxonSelectDropdownCallback() Declaration public void TaxonSelectDropdownCallback() ToggleCaptive() Declaration public void ToggleCaptive() TogglePublicDomain() Declaration public void TogglePublicDomain() ToggleSpeciesSpecific() Declaration public void ToggleSpeciesSpecific() ToggleThreatened() Declaration public void ToggleThreatened() TryShowVotingButtons() Declaration public void TryShowVotingButtons() VoteOptionOne() Declaration public void VoteOptionOne() VoteOptionTwo() Declaration public void VoteOptionTwo() YearSelectDropdownCallback() Declaration public void YearSelectDropdownCallback()"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | iNat+Unity",
    "keywords": "Namespace Global Classes Demo"
  },
  "api/JoshAaronMiller.INaturalist.Annotation.html": {
    "href": "api/JoshAaronMiller.INaturalist.Annotation.html",
    "title": "Class Annotation | iNat+Unity",
    "keywords": "Class Annotation Inheritance Object JsonObject < Annotation > Annotation Inherited Members JsonObject<Annotation>.CreateFromJson(String) JsonObject<Annotation>.ToJson(Annotation) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Annotation : JsonObject<Annotation> Fields controlled_attribute_id Declaration public int controlled_attribute_id Field Value Type Description Int32 controlled_value_id Declaration public int controlled_value_id Field Value Type Description Int32 resource_id Declaration public int resource_id Field Value Type Description Int32 resource_type Declaration public string resource_type Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.BoundingBoxGeoJson.html": {
    "href": "api/JoshAaronMiller.INaturalist.BoundingBoxGeoJson.html",
    "title": "Class BoundingBoxGeoJson | iNat+Unity",
    "keywords": "Class BoundingBoxGeoJson Inheritance Object JsonObject < BoundingBoxGeoJson > BoundingBoxGeoJson Inherited Members JsonObject<BoundingBoxGeoJson>.CreateFromJson(String) JsonObject<BoundingBoxGeoJson>.ToJson(BoundingBoxGeoJson) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class BoundingBoxGeoJson : JsonObject<BoundingBoxGeoJson> Fields coordinates Declaration public List<List<int>> coordinates Field Value Type Description List < List < Int32 >> type Declaration public string type Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.ControlledTerm.html": {
    "href": "api/JoshAaronMiller.INaturalist.ControlledTerm.html",
    "title": "Class ControlledTerm | iNat+Unity",
    "keywords": "Class ControlledTerm Inheritance Object JsonObject < ControlledTerm > ControlledTerm Inherited Members JsonObject<ControlledTerm>.CreateFromJson(String) JsonObject<ControlledTerm>.ToJson(ControlledTerm) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class ControlledTerm : JsonObject<ControlledTerm> Fields id Declaration public int id Field Value Type Description Int32 is_value Declaration public bool is_value Field Value Type Description Boolean multivalued Declaration public bool multivalued Field Value Type Description Boolean ontology_uri Declaration public string ontology_uri Field Value Type Description String uuid Declaration public string uuid Field Value Type Description String values Declaration public List<ControlledTermValue> values Field Value Type Description List < ControlledTermValue >"
  },
  "api/JoshAaronMiller.INaturalist.ControlledTermValue.html": {
    "href": "api/JoshAaronMiller.INaturalist.ControlledTermValue.html",
    "title": "Class ControlledTermValue | iNat+Unity",
    "keywords": "Class ControlledTermValue Inheritance Object JsonObject < ControlledTermValue > ControlledTermValue Inherited Members JsonObject<ControlledTermValue>.CreateFromJson(String) JsonObject<ControlledTermValue>.ToJson(ControlledTermValue) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class ControlledTermValue : JsonObject<ControlledTermValue> Fields blocking Declaration public bool blocking Field Value Type Description Boolean id Declaration public int id Field Value Type Description Int32 label Declaration public string label Field Value Type Description String ontology_uri Declaration public string ontology_uri Field Value Type Description String taxon_ids Declaration public List<int> taxon_ids Field Value Type Description List < Int32 > uri Declaration public string uri Field Value Type Description String uuid Declaration public string uuid Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.Count.html": {
    "href": "api/JoshAaronMiller.INaturalist.Count.html",
    "title": "Class Count | iNat+Unity",
    "keywords": "Class Count Inheritance Object JsonObject < Count > Count Inherited Members JsonObject<Count>.CreateFromJson(String) JsonObject<Count>.ToJson(Count) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Count : JsonObject<Count> Fields count Declaration public int count Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.Dimensions.html": {
    "href": "api/JoshAaronMiller.INaturalist.Dimensions.html",
    "title": "Class Dimensions | iNat+Unity",
    "keywords": "Class Dimensions Inheritance Object JsonObject < Dimensions > Dimensions Inherited Members JsonObject<Dimensions>.CreateFromJson(String) JsonObject<Dimensions>.ToJson(Dimensions) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Dimensions : JsonObject<Dimensions> Fields height Declaration public int height Field Value Type Description Int32 width Declaration public int width Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.Enums.html": {
    "href": "api/JoshAaronMiller.INaturalist.Enums.html",
    "title": "Class Enums | iNat+Unity",
    "keywords": "Class Enums Inheritance Object Enums Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public static class Enums Fields OrderByToString Declaration public static Dictionary<OrderBy, string> OrderByToString Field Value Type Description Dictionary < OrderBy , String > QualityToString Declaration public static Dictionary<QualityGrade, string> QualityToString Field Value Type Description Dictionary < QualityGrade , String >"
  },
  "api/JoshAaronMiller.INaturalist.Error.html": {
    "href": "api/JoshAaronMiller.INaturalist.Error.html",
    "title": "Class Error | iNat+Unity",
    "keywords": "Class Error Inheritance Object JsonObject < Error > Error Inherited Members JsonObject<Error>.CreateFromJson(String) JsonObject<Error>.ToJson(Error) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Error : JsonObject<Error> Fields code Declaration public int code Field Value Type Description Int32 error Declaration public string error Field Value Type Description String message Declaration public string message Field Value Type Description String status Declaration public int status Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.Flag.html": {
    "href": "api/JoshAaronMiller.INaturalist.Flag.html",
    "title": "Class Flag | iNat+Unity",
    "keywords": "Class Flag Inheritance Object JsonObject < Flag > Flag Inherited Members JsonObject<Flag>.CreateFromJson(String) JsonObject<Flag>.ToJson(Flag) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Flag : JsonObject<Flag> Fields flag Declaration public string flag Field Value Type Description String flaggable_id Declaration public int flaggable_id Field Value Type Description Int32 flaggable_type Declaration public string flaggable_type Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.FlagCounts.html": {
    "href": "api/JoshAaronMiller.INaturalist.FlagCounts.html",
    "title": "Class FlagCounts | iNat+Unity",
    "keywords": "Class FlagCounts Inheritance Object JsonObject < FlagCounts > FlagCounts Inherited Members JsonObject<FlagCounts>.CreateFromJson(String) JsonObject<FlagCounts>.ToJson(FlagCounts) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class FlagCounts : JsonObject<FlagCounts> Fields resolved Declaration public int resolved Field Value Type Description Int32 unresolved Declaration public int unresolved Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.GeoJson.html": {
    "href": "api/JoshAaronMiller.INaturalist.GeoJson.html",
    "title": "Class GeoJson | iNat+Unity",
    "keywords": "Class GeoJson Inheritance Object JsonObject < GeoJson > GeoJson Inherited Members JsonObject<GeoJson>.CreateFromJson(String) JsonObject<GeoJson>.ToJson(GeoJson) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class GeoJson : JsonObject<GeoJson> Fields coordinates Declaration public string coordinates Field Value Type Description String type Declaration public string type Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.GeometryGeoJson.html": {
    "href": "api/JoshAaronMiller.INaturalist.GeometryGeoJson.html",
    "title": "Class GeometryGeoJson | iNat+Unity",
    "keywords": "Class GeometryGeoJson Inheritance Object JsonObject < GeometryGeoJson > GeometryGeoJson Inherited Members JsonObject<GeometryGeoJson>.CreateFromJson(String) JsonObject<GeometryGeoJson>.ToJson(GeometryGeoJson) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class GeometryGeoJson : JsonObject<GeometryGeoJson> Fields coordinates Declaration public List<List<List<int>>> coordinates Field Value Type Description List < List < List < Int32 >>> type Declaration public string type Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.html": {
    "href": "api/JoshAaronMiller.INaturalist.html",
    "title": "Namespace JoshAaronMiller.INaturalist | iNat+Unity",
    "keywords": "Namespace JoshAaronMiller.INaturalist Classes Annotation BoundingBoxGeoJson ControlledTerm ControlledTermValue Count Dimensions Enums Error Flag FlagCounts GeoJson GeometryGeoJson Identification IdentificationCategoryCount IdentificationSearch An IdentificationSearch is a set of parameters for searching iNaturalist Identifications. Usage: myINatManager.SearchIdentifications(myIdentificationSearch) IdentificationSubmission INatManager The INatManager handles direct requests to the iNaturalist API. JsonObject<T> MessageSearch A MessageSearch is a set of parameters for searching an iNaturalist user's private messages. Usage: myINatManager.GetUserMessages(myMessageSearch) Observation ObservationPhoto ObservationSearch An ObservationSearch is a set of parameters for searching iNaturalist Observations. Usage: myINatManager.SearchObservations(myObservationSearch) ObservationSubmission Outlink PhotoFile PhotoJson Place PlacesByCuration Results<T> SearchObject A search object has a set of bool and string parameters for conducting a query using the INatManager. Sound SpeciesCount Taxon TaxonSearch A TaxonSearch is a set of parameters for searching iNaturalist Taxa. Usage: myINatManager.SearchTaxa(myTaxonSearch) TaxonSummary TimeDetails User UserMessage Utilities Utilities.DefaultDictionary<Key, Value> A simple implementation of Python's defaultdict, which creates a default value if the key does not exist. Adapted from https://stackoverflow.com/questions/15622622/analogue-of-pythons-defaultdict Vote WrappedFlag WrappedIdentificationSubmission WrappedObservationSubmission Enums IdentificationSearch.IdentificationCategory INatManager.PlaceAdminLevel MessageSearch.Box Observation.ImageSize ObservationSearch.Geoprivacy ObservationSearch.IconicTaxon ObservationSearch.IdentificationAgreement ObservationSearch.IucnConservationStatus ObservationSearch.License ObservationSearch.SearchProperty OrderBy QualityGrade SearchObject.BooleanParameter SearchObject.StringParameter SortOrder TaxonRank TaxonRankLevel"
  },
  "api/JoshAaronMiller.INaturalist.Identification.html": {
    "href": "api/JoshAaronMiller.INaturalist.Identification.html",
    "title": "Class Identification | iNat+Unity",
    "keywords": "Class Identification Inheritance Object JsonObject < Identification > Identification Inherited Members JsonObject<Identification>.CreateFromJson(String) JsonObject<Identification>.ToJson(Identification) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Identification : JsonObject<Identification> Fields category Declaration public string category Field Value Type Description String created_at Declaration public string created_at Field Value Type Description String created_at_details Declaration public TimeDetails created_at_details Field Value Type Description TimeDetails current Declaration public bool current Field Value Type Description Boolean hidden Declaration public bool hidden Field Value Type Description Boolean id Declaration public int id Field Value Type Description Int32 own_observation Declaration public bool own_observation Field Value Type Description Boolean previous_observation_taxon_id Declaration public int previous_observation_taxon_id Field Value Type Description Int32 spam Declaration public bool spam Field Value Type Description Boolean taxon Declaration public Taxon taxon Field Value Type Description Taxon taxon_id Declaration public int taxon_id Field Value Type Description Int32 user Declaration public User user Field Value Type Description User uuid Declaration public string uuid Field Value Type Description String vision Declaration public bool vision Field Value Type Description Boolean"
  },
  "api/JoshAaronMiller.INaturalist.IdentificationCategoryCount.html": {
    "href": "api/JoshAaronMiller.INaturalist.IdentificationCategoryCount.html",
    "title": "Class IdentificationCategoryCount | iNat+Unity",
    "keywords": "Class IdentificationCategoryCount Inheritance Object JsonObject < IdentificationCategoryCount > IdentificationCategoryCount Inherited Members JsonObject<IdentificationCategoryCount>.CreateFromJson(String) JsonObject<IdentificationCategoryCount>.ToJson(IdentificationCategoryCount) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class IdentificationCategoryCount : JsonObject<IdentificationCategoryCount> Fields category Declaration public string category Field Value Type Description String count Declaration public int count Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.IdentificationSearch.html": {
    "href": "api/JoshAaronMiller.INaturalist.IdentificationSearch.html",
    "title": "Class IdentificationSearch | iNat+Unity",
    "keywords": "Class IdentificationSearch An IdentificationSearch is a set of parameters for searching iNaturalist Identifications. Usage: myINatManager.SearchIdentifications(myIdentificationSearch) Inheritance Object SearchObject IdentificationSearch Inherited Members SearchObject.boolParams SearchObject.stringParams SearchObject.SetBooleanParameter(SearchObject.BooleanParameter, Boolean) SearchObject.RemoveBooleanParameter(SearchObject.BooleanParameter) SearchObject.SetStringParameter(SearchObject.StringParameter, String) SearchObject.RemoveStringParameter(SearchObject.StringParameter) SearchObject.ToUrlParameters() Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public class IdentificationSearch : SearchObject Methods ExcludeObservationTaxonIds(List<Int32>) Limit the search to exclude identifications of observations with taxa IDs and their descendents. Declaration public void ExcludeObservationTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Observation taxa IDs to exclude ExcludeTaxonIds(List<Int32>) Limit the search to exclude these taxa IDs and their descendents. Declaration public void ExcludeTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Taxa IDs to exclude IncludeCategories(List<String>) Limit the search to identifications with these category labels. Declaration public void IncludeCategories(List<string> categories) Parameters Type Name Description List < String > categories The identification categories to include in the search. IncludeIconicTaxonIds(List<Int32>) Limit the search to identifications with these iconic taxa. Declaration public void IncludeIconicTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Iconic taxa IDs to include IncludeIdentificationsByUserId(List<Int32>) Limit the search to identifications made by users of these IDs. Declaration public void IncludeIdentificationsByUserId(List<int> userIds) Parameters Type Name Description List < Int32 > userIds The list of user IDs; limit the search to their identifications. IncludeIdentificationsByUserLogin(List<Int32>) Limit the search to identifications made by users with these login names. Declaration public void IncludeIdentificationsByUserLogin(List<int> userLogins) Parameters Type Name Description List < Int32 > userLogins The list of usernames; limit the search to their identifications. IncludeIds(List<Int32>) Require the search to include these IDs. Declaration public void IncludeIds(List<int> ids) Parameters Type Name Description List < Int32 > ids IDs to include IncludeObservationIconicTaxonIds(List<Int32>) Limit the search to identifications of observations with these iconic taxa. Declaration public void IncludeObservationIconicTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Observation iconic taxa IDs to include IncludeObservationTaxonIds(List<Int32>) Limit the search to observations with these taxa IDs and their descendents. Declaration public void IncludeObservationTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Observation taxa IDs to include IncludeObservationTaxonRanks(List<TaxonRank>) Limit the search to identifications of observations that have a taxon of these ranks. Declaration public void IncludeObservationTaxonRanks(List<TaxonRank> ranks) Parameters Type Name Description List < TaxonRank > ranks The list of observation taxon ranks to include in the search. IncludePlaceIds(List<Int32>) Require the observations to be within these place IDs. Declaration public void IncludePlaceIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Place IDs to require IncludeTaxonIds(List<Int32>) Limit the search to these taxa IDs and their descendents. Declaration public void IncludeTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Taxa IDs to include IncludeTaxonRanks(List<TaxonRank>) Limit the search to identifications of taxa of these ranks. Declaration public void IncludeTaxonRanks(List<TaxonRank> ranks) Parameters Type Name Description List < TaxonRank > ranks The list of taxon ranks to include in the search. SetCreatedOnDateLimits(String, String) Limit the search to identifications created within a timeframe. Both start and end dates are optional. Declaration public void SetCreatedOnDateLimits(string start = \"\", string end = \"\") Parameters Type Name Description String start The start date, formatted as YYYY-MM-DD. Limit identifications created on or after this date. String end The end date, formatted as YYYY-MM-DD. Limit identifications created on or before this date. SetIdentificationnIdLimits(Int32, Int32) Limit the search to identifications with IDs within this range. Both min and max are optional. Declaration public void SetIdentificationnIdLimits(int min = -1, int max = -1) Parameters Type Name Description Int32 min Include this ID and higher. Int32 max Include this ID and lower. SetObservationCreatedOnDateLimits(String, String) Limit the search to identifications of observations created within a timeframe. Both start and end dates are optional. Declaration public void SetObservationCreatedOnDateLimits(string start = \"\", string end = \"\") Parameters Type Name Description String start The start date, formatted as YYYY-MM-DD. Limit identifications to observations created on or after this date. String end The end date, formatted as YYYY-MM-DD. Limit identifications to observations created on or before this date. SetObservationTaxonRankLimits(TaxonRank, TaxonRank) Limit the search to identifications of observations with taxa between these limits. Declaration public void SetObservationTaxonRankLimits(TaxonRank lowest = TaxonRank.None, TaxonRank highest = TaxonRank.None) Parameters Type Name Description TaxonRank lowest The lowest observation taxon rank to include in the search (include this and higher). TaxonRank highest The highest observation taxon rank to include in the search (include this and lower). SetObservedOnDateLimits(String, String) Limit the search to observations observed within a timeframe. Both start and end dates are optional. Declaration public void SetObservedOnDateLimits(string start = \"\", string end = \"\") Parameters Type Name Description String start The start date, formatted as YYYY-MM-DD. Limit observations to on or after this date. String end The end date, formatted as YYYY-MM-DD. Limit observations to on or before this date. SetOrder(OrderBy, SortOrder) Set how the results are ordered. Defaults to created at date, descending. Declaration public void SetOrder(OrderBy orderBy, SortOrder sortOrder) Parameters Type Name Description OrderBy orderBy The parameter to sort the order by. SortOrder sortOrder Whether to sort ascending or descending. SetPagination(Int32, Int32) Set the number of search results per page and which page to receive. For example, SetPagination(50,2) would return results 51-100. Declaration public void SetPagination(int resultsPerPage = 30, int page = 1) Parameters Type Name Description Int32 resultsPerPage How many results to return per page (default 30). Int32 page Which page of results to return (default 1). SetQualityGrade(QualityGrade) Limit the search to observations of this quality grade. Declaration public void SetQualityGrade(QualityGrade quality) Parameters Type Name Description QualityGrade quality The quality grade to search for. SetTaxonRankLimits(TaxonRank, TaxonRank) Limit the search to taxa between these limits. Declaration public void SetTaxonRankLimits(TaxonRank lowest = TaxonRank.None, TaxonRank highest = TaxonRank.None) Parameters Type Name Description TaxonRank lowest The lowest taxon rank to include in the search (include this and higher). TaxonRank highest The highest taxon rank to include in the search (include this and lower)."
  },
  "api/JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.html": {
    "href": "api/JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.html",
    "title": "Enum IdentificationSearch.IdentificationCategory | iNat+Unity",
    "keywords": "Enum IdentificationSearch.IdentificationCategory Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum IdentificationCategory Fields Name Description Any Improving Leading Maverick Supporting"
  },
  "api/JoshAaronMiller.INaturalist.IdentificationSubmission.html": {
    "href": "api/JoshAaronMiller.INaturalist.IdentificationSubmission.html",
    "title": "Class IdentificationSubmission | iNat+Unity",
    "keywords": "Class IdentificationSubmission Inheritance Object JsonObject < IdentificationSubmission > IdentificationSubmission Inherited Members JsonObject<IdentificationSubmission>.CreateFromJson(String) JsonObject<IdentificationSubmission>.ToJson(IdentificationSubmission) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class IdentificationSubmission : JsonObject<IdentificationSubmission> Fields body Declaration public string body Field Value Type Description String current Declaration public bool current Field Value Type Description Boolean observation_id Declaration public int observation_id Field Value Type Description Int32 taxon_id Declaration public int taxon_id Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.INatManager.html": {
    "href": "api/JoshAaronMiller.INaturalist.INatManager.html",
    "title": "Class INatManager | iNat+Unity",
    "keywords": "Class INatManager The INatManager handles direct requests to the iNaturalist API. Inheritance Object INatManager Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public class INatManager : MonoBehaviour Fields ApiTokenUrl Declaration public static readonly string ApiTokenUrl Field Value Type Description String BaseUrl Declaration public static readonly string BaseUrl Field Value Type Description String Methods CreateFlag(WrappedFlag, Action<Identification>, Action<Error>) Submit a Flag. Declaration public void CreateFlag(WrappedFlag flag, Action<Identification> callback, Action<Error> errorCallback) Parameters Type Name Description WrappedFlag flag The parameters of the flag. Action < Identification > callback A function to callback when the request is done which takes as input the Flag created. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. CreateIdentification(IdentificationSubmission, Action<Identification>, Action<Error>) Submit an Identification. Declaration public void CreateIdentification(IdentificationSubmission identSub, Action<Identification> callback, Action<Error> errorCallback) Parameters Type Name Description IdentificationSubmission identSub The parameters of the Identification. Requires at minimum observation ID and taxon ID. Action < Identification > callback A function to callback when the request is done which takes as input the Identification created. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. CreateObservation(ObservationSubmission, Action<Observation>, Action<Error>) Create an Observation. Declaration public void CreateObservation(ObservationSubmission observation, Action<Observation> callback, Action<Error> errorCallback) Parameters Type Name Description ObservationSubmission observation An ObservationSubmission object containing the information for the observation. Action < Observation > callback A function to callback when the request is done which takes as input the Observation object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. CreateObservationPhoto(Int32, String, PhotoFile, Action<ObservationPhoto>, Action<Error>) Create an Observation Photo. Declaration public void CreateObservationPhoto(int obsId, string obsUuid, PhotoFile photo, Action<ObservationPhoto> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID to add the photo to String obsUuid The UUID of the observation. PhotoFile photo The Photo to upload. Action < ObservationPhoto > callback A function to callback when the request is done which takes as input the Observation Photo object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. CreatePhoto(PhotoFile, Action<PhotoJson>, Action<Error>) Create a Photo. Declaration public void CreatePhoto(PhotoFile photo, Action<PhotoJson> callback, Action<Error> errorCallback) Parameters Type Name Description PhotoFile photo The Photo to upload. Action < PhotoJson > callback A function to callback when the request is done which takes as input the Photo object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. CreateUserMessage(UserMessage, Action<UserMessage>, Action<Error>) Send a private message. Declaration public void CreateUserMessage(UserMessage newMessage, Action<UserMessage> callback, Action<Error> errorCallback) Parameters Type Name Description UserMessage newMessage The message to be sent. Action < UserMessage > callback A function to callback when the request is done which takes as input the new Message created. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. DeleteFlag(Int32, Action, Action<Error>) Delete a Flag. Declaration public void DeleteFlag(int flagId, Action callback, Action<Error> errorCallback) Parameters Type Name Description Int32 flagId The ID of the flag. Action callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. DeleteIdentification(Int32, Action<String>, Action<Error>) Delete an Identification. Declaration public void DeleteIdentification(int identId, Action<string> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 identId The ID of the Identification. Action < String > callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. DeleteObservation(Int32, Action, Action<Error>) Delete an Observation. Declaration public void DeleteObservation(int obsId, Action callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The ID of the Observation. Action callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. DeleteObservationPhoto(Int32, Action, Action<Error>) Delete an observation photo. Declaration public void DeleteObservationPhoto(int obsPhotoId, Action callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsPhotoId The observation photo to delete. Action callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. DeleteUserMessageThread(Int32, Action, Action<Error>) Delete all messages in a message thread. Declaration public void DeleteUserMessageThread(int threadId, Action callback, Action<Error> errorCallback) Parameters Type Name Description Int32 threadId The thread to delete. Action callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. FaveObservation(Int32, Action<Observation>, Action<Error>) \"Fave\" an Observation. Declaration public void FaveObservation(int obsId, Action<Observation> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID. Action < Observation > callback A function to callback when the request is done which takes as input the Observation object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetApiToken() Declaration public void GetApiToken() GetCountUnreadMessages(Action<Count>, Action<Error>) Returns a Count of unread messages in the authenticated user's inbox. Declaration public void GetCountUnreadMessages(Action<Count> callback, Action<Error> errorCallback) Parameters Type Name Description Action < Count > callback A function to callback when the request is done which takes as input the Count of unread messages. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetIdentification(Int32, Action<Identification>, Action<Error>) Given an ID, returns corresponding Identifications Declaration public void GetIdentification(int identId, Action<Identification> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 identId The identification ID to fetch Action < Identification > callback A function to callback when the request is done which takes as input the Identification object found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetIdentificationCategories(IdentificationSearch, Action<Results<IdentificationCategoryCount>>, Action<Error>) Given an IdentificationSearch object, returns the counts of how many identifications matching the search have a particular category. Declaration public void GetIdentificationCategories(IdentificationSearch identSearch, Action<Results<IdentificationCategoryCount>> callback, Action<Error> errorCallback) Parameters Type Name Description IdentificationSearch identSearch An IdentificationSearch object holding the parameters of the search. Action < Results < IdentificationCategoryCount >> callback A function to callback when the request is done which takes as input the Results list of IdentificationCategoryCount objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetIdentifications(List<Int32>, Action<Results<Identification>>, Action<Error>) Given an array of IDs, returns corresponding Identifications Declaration public void GetIdentifications(List<int> identIds, Action<Results<Identification>> callback, Action<Error> errorCallback) Parameters Type Name Description List < Int32 > identIds The list of identification IDs to fetch Action < Results < Identification >> callback A function to callback when the request is done which takes as input the Results list of Identification objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetIdentificationSpeciesCounts(IdentificationSearch, Action<Results<SpeciesCount>>, Action<Error>) Given an IdentificationSearch object, returns the counts of how many identifications matching the search have a particular leaf taxon. Declaration public void GetIdentificationSpeciesCounts(IdentificationSearch identSearch, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback) Parameters Type Name Description IdentificationSearch identSearch An IdentificationSearch object holding the parameters of the search. Action < Results < SpeciesCount >> callback A function to callback when the request is done which takes as input the Results list of SpeciesCount objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetObservation(Int32, Action<Observation>, Action<Error>) Given an ID, returns corresponding observations Declaration public void GetObservation(int id, Action<Observation> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 id The observation ID to fetch Action < Observation > callback A function to callback when the request is done which takes as input the Observation object found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetObservations(List<Int32>, Action<Results<Observation>>, Action<Error>) Given an array of IDs, returns corresponding observations Declaration public void GetObservations(List<int> ids, Action<Results<Observation>> callback, Action<Error> errorCallback) Parameters Type Name Description List < Int32 > ids The list of observation IDs to fetch Action < Results < Observation >> callback A function to callback when the request is done which takes as input the Results list of Observation objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetObservationSpeciesCounts(ObservationSearch, Action<Results<SpeciesCount>>, Action<Error>) Given an ObservationSearch object, returns the counts of how many observations matching the search have a particular leaf taxon. Declaration public void GetObservationSpeciesCounts(ObservationSearch observationSearch, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback) Parameters Type Name Description ObservationSearch observationSearch An ObservationSearch object holding the parameters of the search. Action < Results < SpeciesCount >> callback A function to callback when the request is done which takes as input the Results list of SpeciesCount objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetObservationTaxonSummary(Int32, Action<TaxonSummary>, Action<Error>) Given an observation ID, fetch the TaxonSummary of that Observation. Declaration public void GetObservationTaxonSummary(int obsId, Action<TaxonSummary> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The observation ID to fetch Action < TaxonSummary > callback A function to callback when the request is done which takes as input the TaxonSummary object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. Remarks Probably most useful for getting a Wikipedia summary of the taxon, see TaxonSummary object. GetPlaceDetails(List<Int32>, Action<Results<Place>>, Action<Error>, INatManager.PlaceAdminLevel) Given a list of IDs, return the corresponding Places. Declaration public void GetPlaceDetails(List<int> placeIds, Action<Results<Place>> callback, Action<Error> errorCallback, INatManager.PlaceAdminLevel adminLevel = INatManager.PlaceAdminLevel.None) Parameters Type Name Description List < Int32 > placeIds The IDs of the Places. Action < Results < Place >> callback A function to callback when the request is done which takes as input the Results list of Places fetched. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. INatManager.PlaceAdminLevel adminLevel Optionally, the admin level of the place to search. GetPlaceDetails(Int32, Action<Place>, Action<Error>, INatManager.PlaceAdminLevel) Given an ID, return the corresponding Place. Declaration public void GetPlaceDetails(int placeId, Action<Place> callback, Action<Error> errorCallback, INatManager.PlaceAdminLevel adminLevel = INatManager.PlaceAdminLevel.None) Parameters Type Name Description Int32 placeId The ID of the Place. Action < Place > callback A function to callback when the request is done which takes as input the Place fetched. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. INatManager.PlaceAdminLevel adminLevel Optionally, the admin level of the place to search. GetPlacesAutocomplete(String, Action<Results<Place>>, Action<Error>, Boolean) Given a string query, find all places with names starting with the query. Declaration public void GetPlacesAutocomplete(string query, Action<Results<Place>> callback, Action<Error> errorCallback, bool orderByArea = false) Parameters Type Name Description String query The search term. Action < Results < Place >> callback A function to callback when the request is done which takes as input the Results list of Places fetched. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. Boolean orderByArea If true, sort the results by area (default false). GetPlacesNearby(Double, Double, Double, Double, Action<PlacesByCuration>, Action<Error>, String, Int32) Given a bounding box and optional name query, return nearby places separated by curation status. Declaration public void GetPlacesNearby(double nelat, double nelng, double swlat, double swlng, Action<PlacesByCuration> callback, Action<Error> errorCallback, string name = \"\", int perPage = 30) Parameters Type Name Description Double nelat The northeast latitude corner of the bounding box. Double nelng The northeast longitude corner of the bounding box. Double swlat The southwest latitude corner of the bounding box. Double swlng The southwest longitude corner of the bounding box. Action < PlacesByCuration > callback A function to callback when the request is done which takes as input the list of PlacesByCuration fetched. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. String name The optional search term for the name. Int32 perPage Number of results per page (default 30, max 200). GetSimilarSpecies(Int32, Action<Results<SpeciesCount>>, Action<Error>) Given a Taxon ID, return similar taxa and counts of co-occurrence. Declaration public void GetSimilarSpecies(int taxonId, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 taxonId The ID of the taxon to find similar taxa to. Action < Results < SpeciesCount >> callback A function to callback when the request is done which takes as input the Results list of SpeciesCount objects representing the results. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. Remarks The definition of \"similar taxa\" is operationalized by finding all observations of this taxon or identified as this taxon, then taking the identifications of those observations and counting frequencies of identifications of other taxa. In short, this returns a list mapping taxa to how many times they co-occurred with the searched taxon. GetSimilarSpecies(Int32, ObservationSearch, Action<Results<SpeciesCount>>, Action<Error>) Given a Taxon ID, return similar taxa and counts of co-occurrence. Declaration public void GetSimilarSpecies(int taxonId, ObservationSearch obsSearch, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 taxonId The ID of the taxon to find similar taxa to. ObservationSearch obsSearch Additional parameters to refine the search, limiting what observations can be included. Action < Results < SpeciesCount >> callback A function to callback when the request is done which takes as input the Results list of SpeciesCount objects representing the results. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. Remarks The definition of \"similar taxa\" is operationalized by finding all observations of this taxon or identified as this taxon, then taking the identifications of those observations and counting frequencies of identifications of other taxa. In short, this returns a list mapping taxa to how many times they co-occurred with the searched taxon. GetTaxonDetails(List<Int32>, Action<Results<Taxon>>, Action<Error>) Given an array of IDs, returns corresponding Taxa Declaration public void GetTaxonDetails(List<int> taxaIds, Action<Results<Taxon>> callback, Action<Error> errorCallback) Parameters Type Name Description List < Int32 > taxaIds The list of taxa IDs to fetch Action < Results < Taxon >> callback A function to callback when the request is done which takes as input the Results list of Taxon objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetTaxonDetails(Int32, Action<Taxon>, Action<Error>) Given an ID, returns corresponding Taxon Declaration public void GetTaxonDetails(int taxonId, Action<Taxon> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 taxonId The Taxon ID to fetch Action < Taxon > callback A function to callback when the request is done which takes as input the Taxon object found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetTermsForTaxon(Int32, Action<Results<ControlledTerm>>, Action<Error>) Fetch a list of all attribute controlled terms relevant to a taxon as a List of ControlledTerms. Declaration public void GetTermsForTaxon(int taxonId, Action<Results<ControlledTerm>> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 taxonId The ID of the Taxon. Action < Results < ControlledTerm >> callback A function to callback when the request is done which takes as input the Results list of Controlled Terms created. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetTermsIndex(Action<Results<ControlledTerm>>, Action<Error>) Fetch a list of all attribute controlled terms as a List of ControlledTerms. Declaration public void GetTermsIndex(Action<Results<ControlledTerm>> callback, Action<Error> errorCallback) Parameters Type Name Description Action < Results < ControlledTerm >> callback A function to callback when the request is done which takes as input the Results list of Controlled Terms created. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetUserMe(Action<User>, Action<Error>) Fetch the User details for the authenticated user. Declaration public void GetUserMe(Action<User> callback, Action<Error> errorCallback) Parameters Type Name Description Action < User > callback A function to callback when the request is done which takes as input the User object. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. GetUserMessageThread(Int32, Action<Results<UserMessage>>, Action<Error>) Retrieves all messages in the specified thread and marks them all as read. Declaration public void GetUserMessageThread(int threadId, Action<Results<UserMessage>> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 threadId The thread to fetch. Action < Results < UserMessage >> callback A function to callback when the request is done which takes as input the thread fetched as a Results list of UserMessages. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. ReviewObservation(Int32, Action<Observation>, Action<Error>) Mark an observation as reviewed by the authenticated user. Declaration public void ReviewObservation(int obsId, Action<Observation> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID. Action < Observation > callback A function to callback when the request is done which takes as input the Observation object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. SearchIdentifications(IdentificationSearch, Action<Results<Identification>>, Action<Error>) Given an IdentificationSearch object, returns a list of matching Identifications Declaration public void SearchIdentifications(IdentificationSearch identSearch, Action<Results<Identification>> callback, Action<Error> errorCallback) Parameters Type Name Description IdentificationSearch identSearch An IdentificationSearch object holding the parameters of the search Action < Results < Identification >> callback A function to callback when the request is done which takes as input the Results list of Identification objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. SearchObservations(ObservationSearch, Action<Results<Observation>>, Action<Error>) Given an ObservationSearch object, returns a list of matching observations Declaration public void SearchObservations(ObservationSearch obsSearch, Action<Results<Observation>> callback, Action<Error> errorCallback) Parameters Type Name Description ObservationSearch obsSearch An ObservationSearch object holding the parameters of the search Action < Results < Observation >> callback A function to callback when the request is done which takes as input the Results list of Observation objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. SearchTaxa(TaxonSearch, Action<Results<Taxon>>, Action<Error>) Given a TaxonSearch object, returns a list of matching taxa Declaration public void SearchTaxa(TaxonSearch taxonSearch, Action<Results<Taxon>> callback, Action<Error> errorCallback) Parameters Type Name Description TaxonSearch taxonSearch An TaxonSearch object holding the parameters of the search Action < Results < Taxon >> callback A function to callback when the request is done which takes as input the Results list of Taxon objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. SearchUserMessages(MessageSearch, Action<Results<UserMessage>>, Action<Error>) Given a MessageSearch object, returns a list of matching user messages Declaration public void SearchUserMessages(MessageSearch messageSearch, Action<Results<UserMessage>> callback, Action<Error> errorCallback) Parameters Type Name Description MessageSearch messageSearch A MessageSearch object holding the parameters of the search Action < Results < UserMessage >> callback A function to callback when the request is done which takes as input the Results list of Message objects found. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. Remarks This function does not mark these messages as read. See GetUserMessageThread. SetApiToken(String) Declaration public void SetApiToken(string token) Parameters Type Name Description String token UnfaveObservation(Int32, Action, Action<Error>) \"Unfave\" an Observation, or delete Fave mark. Declaration public void UnfaveObservation(int obsId, Action callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID. Action callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. UnreviewObservation(Int32, Action, Action<Error>) Mark an observation as unreviewed by the authenticated user. Declaration public void UnreviewObservation(int obsId, Action callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID. Action callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. UnvoteObservation(Int32, Vote, Action, Action<Error>) Delete a Vote from an Observation. Declaration public void UnvoteObservation(int obsId, Vote vote, Action callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID. Vote vote The Vote to delete. Action callback A function to callback when the request is done. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. UpdateFlag(Int32, WrappedFlag, Action<Identification>, Action<Error>) Update a Flag. Declaration public void UpdateFlag(int flagId, WrappedFlag flag, Action<Identification> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 flagId The ID of the flag. WrappedFlag flag The parameters of the flag. Action < Identification > callback A function to callback when the request is done which takes as input the Flag updated. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. UpdateIdentification(Int32, IdentificationSubmission, Action<Identification>, Action<Error>) Update an Identification Declaration public void UpdateIdentification(int identId, IdentificationSubmission identSub, Action<Identification> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 identId The identification ID to update IdentificationSubmission identSub The updated information for the identification. Action < Identification > callback A function to callback when the request is done which takes as input the Identification object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. UpdateObservation(Int32, ObservationSubmission, Action<Observation>, Action<Error>) Update an Observation. Declaration public void UpdateObservation(int obsId, ObservationSubmission observation, Action<Observation> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID to update ObservationSubmission observation An ObservationSubmission object containing the updated information for the observation. Action < Observation > callback A function to callback when the request is done which takes as input the Observation object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. UpdateObservationPhoto(Int32, Int32, PhotoFile, Action<ObservationPhoto>, Action<Error>) Update an Observation Photo. Declaration public void UpdateObservationPhoto(int obsPhotoId, int position, PhotoFile photo, Action<ObservationPhoto> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsPhotoId The Observation Photo ID to update Int32 position The position in which the photo is displayed for the observation. PhotoFile photo The Photo to upload. Action < ObservationPhoto > callback A function to callback when the request is done which takes as input the Observation Photo object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message. VoteObservation(Int32, Vote, Action<Observation>, Action<Error>) Vote on an Observation; see Vote object for usage. Declaration public void VoteObservation(int obsId, Vote vote, Action<Observation> callback, Action<Error> errorCallback) Parameters Type Name Description Int32 obsId The Observation ID. Vote vote The Vote to submit. Action < Observation > callback A function to callback when the request is done which takes as input the Observation object returned. Action < Error > errorCallback A function to callback when iNaturalist returns an error message."
  },
  "api/JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.html": {
    "href": "api/JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.html",
    "title": "Enum INatManager.PlaceAdminLevel | iNat+Unity",
    "keywords": "Enum INatManager.PlaceAdminLevel Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum PlaceAdminLevel Fields Name Description Continent Country County None Park State Town"
  },
  "api/JoshAaronMiller.INaturalist.JsonObject-1.html": {
    "href": "api/JoshAaronMiller.INaturalist.JsonObject-1.html",
    "title": "Class JsonObject<T> | iNat+Unity",
    "keywords": "Class JsonObject<T> Inheritance Object JsonObject<T> Annotation BoundingBoxGeoJson ControlledTerm ControlledTermValue Count Dimensions Error Flag FlagCounts GeoJson GeometryGeoJson Identification IdentificationCategoryCount IdentificationSubmission Observation ObservationPhoto ObservationSubmission Outlink PhotoJson Place PlacesByCuration Results<T> Sound SpeciesCount Taxon TaxonSummary TimeDetails User UserMessage Vote WrappedFlag WrappedIdentificationSubmission WrappedObservationSubmission Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public abstract class JsonObject<T> Type Parameters Name Description T Methods CreateFromJson(String) Declaration public static T CreateFromJson(string jsonString) Parameters Type Name Description String jsonString Returns Type Description T ToJson(T) Declaration public static string ToJson(T obj) Parameters Type Name Description T obj Returns Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.MessageSearch.Box.html": {
    "href": "api/JoshAaronMiller.INaturalist.MessageSearch.Box.html",
    "title": "Enum MessageSearch.Box | iNat+Unity",
    "keywords": "Enum MessageSearch.Box Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum Box Fields Name Description Any Inbox Sent"
  },
  "api/JoshAaronMiller.INaturalist.MessageSearch.html": {
    "href": "api/JoshAaronMiller.INaturalist.MessageSearch.html",
    "title": "Class MessageSearch | iNat+Unity",
    "keywords": "Class MessageSearch A MessageSearch is a set of parameters for searching an iNaturalist user's private messages. Usage: myINatManager.GetUserMessages(myMessageSearch) Inheritance Object SearchObject MessageSearch Inherited Members SearchObject.boolParams SearchObject.stringParams SearchObject.SetBooleanParameter(SearchObject.BooleanParameter, Boolean) SearchObject.RemoveBooleanParameter(SearchObject.BooleanParameter) SearchObject.SetStringParameter(SearchObject.StringParameter, String) SearchObject.RemoveStringParameter(SearchObject.StringParameter) SearchObject.ToUrlParameters() Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public class MessageSearch : SearchObject Methods SetBox(MessageSearch.Box) Set which box to search, defaults to inbox. Declaration public void SetBox(MessageSearch.Box box) Parameters Type Name Description MessageSearch.Box box The box of messages to search. SetCorrespondent(String) Limit the search to only messages with a correspondent of this user ID or username. Declaration public void SetCorrespondent(string user) Parameters Type Name Description String user The user ID or username to limit the search to. SetPage(Int32) Set the pagination page number. Declaration public void SetPage(int page) Parameters Type Name Description Int32 page The page of results to fetch. SetQuery(String) Set an optional query string to search for in the subject and body of messages. Declaration public void SetQuery(string q) Parameters Type Name Description String q The query string; search will return only messages that match this query in subject or body. ShowOnlyLatestMessagePerThread(Boolean) If this setting is toggled on (default off), group the results by thread ID, only show the latest message per thread, and include a thread_messages_count which shows the total number of messages in that thread. Declaration public void ShowOnlyLatestMessagePerThread(bool on = false) Parameters Type Name Description Boolean on Whether to only show the latest message per thread. Remarks Note that this setting can only be used if query ( q ) is not set and thread_messages_count always reports the count from any box instead of the box specified."
  },
  "api/JoshAaronMiller.INaturalist.Observation.html": {
    "href": "api/JoshAaronMiller.INaturalist.Observation.html",
    "title": "Class Observation | iNat+Unity",
    "keywords": "Class Observation Inheritance Object JsonObject < Observation > Observation Inherited Members JsonObject<Observation>.CreateFromJson(String) JsonObject<Observation>.ToJson(Observation) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Observation : JsonObject<Observation> Fields annotations Declaration public List<Annotation> annotations Field Value Type Description List < Annotation > cached_votes_total Declaration public int cached_votes_total Field Value Type Description Int32 captive Declaration public bool captive Field Value Type Description Boolean comments_count Declaration public int comments_count Field Value Type Description Int32 community_taxon_id Declaration public int community_taxon_id Field Value Type Description Int32 created_at Declaration public string created_at Field Value Type Description String created_at_details Declaration public TimeDetails created_at_details Field Value Type Description TimeDetails created_time_zone Declaration public string created_time_zone Field Value Type Description String description Declaration public string description Field Value Type Description String faves_count Declaration public int faves_count Field Value Type Description Int32 geojson Declaration public GeoJson geojson Field Value Type Description GeoJson geoprivacy Declaration public string geoprivacy Field Value Type Description String id Declaration public int id Field Value Type Description Int32 ident_taxon_ids Declaration public List<int> ident_taxon_ids Field Value Type Description List < Int32 > identifications Declaration public List<Identification> identifications Field Value Type Description List < Identification > identifications_count Declaration public int identifications_count Field Value Type Description Int32 identifications_most_agree Declaration public bool identifications_most_agree Field Value Type Description Boolean identifications_most_disagree Declaration public bool identifications_most_disagree Field Value Type Description Boolean identifications_some_agree Declaration public bool identifications_some_agree Field Value Type Description Boolean license_code Declaration public string license_code Field Value Type Description String locatioan Declaration public string locatioan Field Value Type Description String map_scale Declaration public int map_scale Field Value Type Description Int32 mappable Declaration public bool mappable Field Value Type Description Boolean num_identification_agreements Declaration public int num_identification_agreements Field Value Type Description Int32 num_identification_disagreements Declaration public int num_identification_disagreements Field Value Type Description Int32 oauth_application_id Declaration public int oauth_application_id Field Value Type Description Int32 obscured Declaration public bool obscured Field Value Type Description Boolean observed_on Declaration public string observed_on Field Value Type Description String observed_on_details Declaration public TimeDetails observed_on_details Field Value Type Description TimeDetails observed_on_string Declaration public string observed_on_string Field Value Type Description String observed_time_zone Declaration public string observed_time_zone Field Value Type Description String outlinks Declaration public List<Outlink> outlinks Field Value Type Description List < Outlink > owners_identification_from_vision Declaration public bool owners_identification_from_vision Field Value Type Description Boolean photos Declaration public List<PhotoJson> photos Field Value Type Description List < PhotoJson > place_guess Declaration public string place_guess Field Value Type Description String place_ids Declaration public List<int> place_ids Field Value Type Description List < Int32 > positional_accuracy Declaration public bool positional_accuracy Field Value Type Description Boolean project_ids Declaration public List<int> project_ids Field Value Type Description List < Int32 > project_ids_with_curator_id Declaration public List<int> project_ids_with_curator_id Field Value Type Description List < Int32 > project_ids_without_curator_id Declaration public List<int> project_ids_without_curator_id Field Value Type Description List < Int32 > quality_grade Declaration public string quality_grade Field Value Type Description String reviewed_by Declaration public List<int> reviewed_by Field Value Type Description List < Int32 > site_id Declaration public int site_id Field Value Type Description Int32 sounds Declaration public List<Sound> sounds Field Value Type Description List < Sound > species_guess Declaration public string species_guess Field Value Type Description String tags Declaration public List<string> tags Field Value Type Description List < String > taxon Declaration public Taxon taxon Field Value Type Description Taxon taxon_geoprivacy Declaration public string taxon_geoprivacy Field Value Type Description String time_observed_at Declaration public string time_observed_at Field Value Type Description String time_zone_offset Declaration public string time_zone_offset Field Value Type Description String updated_at Declaration public string updated_at Field Value Type Description String uri Declaration public string uri Field Value Type Description String user Declaration public User user Field Value Type Description User uuid Declaration public string uuid Field Value Type Description String Methods CountIdentifications() Returns an aggregation of the identifications for this observation. Declaration public Dictionary<Taxon, int> CountIdentifications() Returns Type Description Dictionary < Taxon , Int32 > A Dictionary mapping taxon identifications to a count of the number of users who guessed that taxon. DownloadPhotos(String, Observation.ImageSize) Download all photos of this size from this observation to the folder path specified within the application's persistent data path. Declaration public void DownloadPhotos(string path, Observation.ImageSize size) Parameters Type Name Description String path The folder to download photos to, relative to the Application.persistentDataPath. Observation.ImageSize size The size of the image to download. GetAgreementRate() Declaration public ObservationSearch.IdentificationAgreement GetAgreementRate() Returns Type Description ObservationSearch.IdentificationAgreement GetPhotoUrls(Observation.ImageSize) Return all URLs of given size from this observation. Declaration public List<string> GetPhotoUrls(Observation.ImageSize size) Parameters Type Name Description Observation.ImageSize size Returns Type Description List < String > List of URL strings."
  },
  "api/JoshAaronMiller.INaturalist.Observation.ImageSize.html": {
    "href": "api/JoshAaronMiller.INaturalist.Observation.ImageSize.html",
    "title": "Enum Observation.ImageSize | iNat+Unity",
    "keywords": "Enum Observation.ImageSize Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum ImageSize Fields Name Description Any Large Medium Small Square"
  },
  "api/JoshAaronMiller.INaturalist.ObservationPhoto.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationPhoto.html",
    "title": "Class ObservationPhoto | iNat+Unity",
    "keywords": "Class ObservationPhoto Inheritance Object JsonObject < ObservationPhoto > ObservationPhoto Inherited Members JsonObject<ObservationPhoto>.CreateFromJson(String) JsonObject<ObservationPhoto>.ToJson(ObservationPhoto) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class ObservationPhoto : JsonObject<ObservationPhoto> Fields created_at Declaration public TimeDetails created_at Field Value Type Description TimeDetails created_at_utc Declaration public TimeDetails created_at_utc Field Value Type Description TimeDetails id Declaration public int id Field Value Type Description Int32 observation_id Declaration public int observation_id Field Value Type Description Int32 old_uuid Declaration public string old_uuid Field Value Type Description String photo Declaration public PhotoJson photo Field Value Type Description PhotoJson photo_id Declaration public int photo_id Field Value Type Description Int32 position Declaration public int position Field Value Type Description Int32 updated_at Declaration public TimeDetails updated_at Field Value Type Description TimeDetails updated_at_utc Declaration public TimeDetails updated_at_utc Field Value Type Description TimeDetails uuid Declaration public string uuid Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.html",
    "title": "Enum ObservationSearch.Geoprivacy | iNat+Unity",
    "keywords": "Enum ObservationSearch.Geoprivacy Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum Geoprivacy Fields Name Description None Obscured ObscuredPrivate Open Private"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSearch.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSearch.html",
    "title": "Class ObservationSearch | iNat+Unity",
    "keywords": "Class ObservationSearch An ObservationSearch is a set of parameters for searching iNaturalist Observations. Usage: myINatManager.SearchObservations(myObservationSearch) Inheritance Object SearchObject ObservationSearch Inherited Members SearchObject.boolParams SearchObject.stringParams SearchObject.SetBooleanParameter(SearchObject.BooleanParameter, Boolean) SearchObject.RemoveBooleanParameter(SearchObject.BooleanParameter) SearchObject.SetStringParameter(SearchObject.StringParameter, String) SearchObject.RemoveStringParameter(SearchObject.StringParameter) SearchObject.ToUrlParameters() Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public class ObservationSearch : SearchObject Fields GeoprivacyToString Declaration public static Dictionary<ObservationSearch.Geoprivacy, string> GeoprivacyToString Field Value Type Description Dictionary < ObservationSearch.Geoprivacy , String > IdentAgreementToString Declaration public static Dictionary<ObservationSearch.IdentificationAgreement, string> IdentAgreementToString Field Value Type Description Dictionary < ObservationSearch.IdentificationAgreement , String > LicenseToString Declaration public static Dictionary<ObservationSearch.License, string> LicenseToString Field Value Type Description Dictionary < ObservationSearch.License , String > Methods ApplyProjectRulesFor(Int32) Limit the search to the project restrictions of the given project ID. Declaration public void ApplyProjectRulesFor(int projectId) Parameters Type Name Description Int32 projectId The project ID to base this restriction on. ExcludeIds(List<Int32>) Require the search to exclude these IDs. Declaration public void ExcludeIds(List<int> ids) Parameters Type Name Description List < Int32 > ids IDs to exclude ExcludeProjectId(Int32) Require the observations to be not in this project ID. Declaration public void ExcludeProjectId(int id) Parameters Type Name Description Int32 id Project ID to exclude ExcludeProjectRulesFor(Int32) Limit the search to observations that don't match the rules of the given project ID. Declaration public void ExcludeProjectRulesFor(int projectId) Parameters Type Name Description Int32 projectId The project ID to base this restriction on. ExcludeTaxonIds(List<Int32>) Limit the search to exclude these taxa IDs and their descendents. Declaration public void ExcludeTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Taxa IDs to exclude IncludeDays(List<Int32>) Limit the search to observations on these days of the month. Declaration public void IncludeDays(List<int> days) Parameters Type Name Description List < Int32 > days Days to match. IncludeIds(List<Int32>) Require the search to include these IDs. Declaration public void IncludeIds(List<int> ids) Parameters Type Name Description List < Int32 > ids IDs to include IncludeIUCNConservationStatuses(List<ObservationSearch.IucnConservationStatus>) Limit the search to taxa with these IUCN conservation statuses. If PlaceId is also set, only consider statuses specific to those places. Declaration public void IncludeIUCNConservationStatuses(List<ObservationSearch.IucnConservationStatus> statuses) Parameters Type Name Description List < ObservationSearch.IucnConservationStatus > statuses IncludeMonths(List<Int32>) Limit the search to observations on these months. Declaration public void IncludeMonths(List<int> months) Parameters Type Name Description List < Int32 > months Months to match. IncludePlaceIds(List<Int32>) Require the observations to be within these place IDs. Declaration public void IncludePlaceIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Place IDs to require IncludeProjectIds(List<Int32>) Require the observations to be included in these project IDs. Declaration public void IncludeProjectIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Project IDs to search IncludeTaxonGeoprivacy(List<ObservationSearch.Geoprivacy>) Filter observations by the most conservative geoprivacy applied by a conservation status associated with one of the taxa proposed in the current identifications. Declaration public void IncludeTaxonGeoprivacy(List<ObservationSearch.Geoprivacy> geos) Parameters Type Name Description List < ObservationSearch.Geoprivacy > geos The geoprivacy settings. IncludeTaxonIds(List<Int32>) Limit the search to these taxa IDs and their descendents. Declaration public void IncludeTaxonIds(List<int> ids) Parameters Type Name Description List < Int32 > ids Taxa IDs to include IncludeTaxonNames(List<String>) Limit the search to these scientific or common taxa names. Declaration public void IncludeTaxonNames(List<string> names) Parameters Type Name Description List < String > names Taxa names to match IncludeTermIds() Declaration public void IncludeTermIds() IncludeTermValueIds() Declaration public void IncludeTermValueIds() IncludeUserIds() Declaration public void IncludeUserIds() IncludeUserLogins() Declaration public void IncludeUserLogins() IncludeYears(List<Int32>) Limit the search to observations on these years. Declaration public void IncludeYears(List<int> years) Parameters Type Name Description List < Int32 > years Years to match. SearchOnProperties(ObservationSearch.SearchProperty, String) Search observation properties matching the query. Declaration public void SearchOnProperties(ObservationSearch.SearchProperty property, string query) Parameters Type Name Description ObservationSearch.SearchProperty property The search property to apply the query to. String query The search query. SetAccuracyMaximum(Int32, Boolean) Limit the search to observations with a positional accuracy below this value. Declaration public void SetAccuracyMaximum(int max, bool canBeUnknown = false) Parameters Type Name Description Int32 max The positional accuracy in meters. Boolean canBeUnknown Whether the positional accuracy can be unknown. SetAccuracyMinimum(Int32) Limit the search to observations with a positional accuracy above this value. Declaration public void SetAccuracyMinimum(int min) Parameters Type Name Description Int32 min The positional accuracy in meters. SetBoundingBox(Double, Double, Double, Double) Limit the search within a bounding box specified by northeast and southwest corners given in latitude and longitude. Declaration public void SetBoundingBox(double nelat, double nelng, double swlat, double swlng) Parameters Type Name Description Double nelat The northeast latitude. Double nelng The northeast longitude. Double swlat The southwest latitude. Double swlng The southwest longitude. SetBoundingCircle(Double, Double, Double) Limit the search to a circle of [radius] kilometers around the specified latitude and longitude. Declaration public void SetBoundingCircle(double lat, double lng, double radius) Parameters Type Name Description Double lat The latitude of the search's center. Double lng The longitude of the search's center. Double radius The radius of search in kilometers. SetCacheControl(Int32) Set the Cache-Control HTTP header with this value as max-age, in seconds.This means subsequent identical requests will be cached on iNaturalist servers, and commonly within web browsers Declaration public void SetCacheControl(int timeToLive) Parameters Type Name Description Int32 timeToLive The max-age of the request, in seconds. SetConservationStatusAuthority(String) Limit the search to taxa with a conservation status from this authority. If PlaceId is also set, only consider statuses specific to those places. Declaration public void SetConservationStatusAuthority(string auth) Parameters Type Name Description String auth The conservation status authority. SetConservationStatusCode(String) Limit the search to taxa of this conservation status code. If PlaceId is also set, only consider statuses specific to those places. Declaration public void SetConservationStatusCode(string code) Parameters Type Name Description String code The conservation status code. SetCreatedOnDateTimeLimits(String, String) Limit the search to observations created within a timeframe. Both start and end dates are optional. Declaration public void SetCreatedOnDateTimeLimits(string start = \"\", string end = \"\") Parameters Type Name Description String start The start datetime, formatted as ISO-8601 datetime format: YYYY-MM-DDTHH:MMSS.mmmZ. Limit observations to created on or after this date. String end The end datetime, formatted as ISO-8601 datetime format: YYYY-MM-DDTHH:MMSS.mmmZ. Limit observations to created on or before this date. SetGeoprivacy(List<ObservationSearch.Geoprivacy>) Limit the search to observations with these geoprivacy settings. Declaration public void SetGeoprivacy(List<ObservationSearch.Geoprivacy> geos) Parameters Type Name Description List < ObservationSearch.Geoprivacy > geos SetIconicTaxa(List<ObservationSearch.IconicTaxon>) Limit the search to observations with these iconic taxa. Declaration public void SetIconicTaxa(List<ObservationSearch.IconicTaxon> iconicTaxa) Parameters Type Name Description List < ObservationSearch.IconicTaxon > iconicTaxa The iconic taxa to include. SetIdentificationAgreement(ObservationSearch.IdentificationAgreement) Declaration public void SetIdentificationAgreement(ObservationSearch.IdentificationAgreement agreement) Parameters Type Name Description ObservationSearch.IdentificationAgreement agreement SetIdentifiedByUserId(Int32) Limit the search to observations with identifications by the user with this ID. Declaration public void SetIdentifiedByUserId(int userId) Parameters Type Name Description Int32 userId The user's ID to restrict the search to. SetLicense(ObservationSearch.License) Require the observations returned to have this license. Declaration public void SetLicense(ObservationSearch.License license) Parameters Type Name Description ObservationSearch.License license Required license SetListId() Declaration public void SetListId() SetLocalePreference() Declaration public void SetLocalePreference() SetObservationIdLimits(Int32, Int32) Limit the search to observations with IDs within this range. Both min and max are optional. Declaration public void SetObservationIdLimits(int min = -1, int max = -1) Parameters Type Name Description Int32 min Include this ID and higher. Int32 max Include this ID and lower. SetObservedOnDateLimits(String, String) Limit the search to observations observed within a timeframe. Both start and end dates are optional. Declaration public void SetObservedOnDateLimits(string start = \"\", string end = \"\") Parameters Type Name Description String start The start date, formatted as YYYY-MM-DD. Limit observations to on or after this date. String end The end date, formatted as YYYY-MM-DD. Limit observations to on or before this date. SetOfvDataType() Declaration public void SetOfvDataType() SetOrder(OrderBy, SortOrder) Set how the results are ordered. Defaults to created at date, descending. Declaration public void SetOrder(OrderBy orderBy, SortOrder sortOrder) Parameters Type Name Description OrderBy orderBy The parameter to sort the order by. SortOrder sortOrder Whether to sort ascending or descending. SetPagination(Int32, Int32) Set the number of search results per page and which page to receive. For example, SetPagination(50,2) would return results 51-100. Declaration public void SetPagination(int resultsPerPage = 30, int page = 1) Parameters Type Name Description Int32 resultsPerPage How many results to return per page (default 30). Int32 page Which page of results to return (default 1). SetPhotoLicense(ObservationSearch.License) Require the observations to have at least one photo with this license. Declaration public void SetPhotoLicense(ObservationSearch.License license) Parameters Type Name Description ObservationSearch.License license Required license SetPreferredPlaceId() Declaration public void SetPreferredPlaceId() SetQualityGrade(QualityGrade) Limit the search to observations of this quality grade. Declaration public void SetQualityGrade(QualityGrade quality) Parameters Type Name Description QualityGrade quality The quality grade to search for. SetReviewedByUser(Int32, Boolean) Limit the search to observations that [have / have not] been reviewed by a given user. Declaration public void SetReviewedByUser(int userId, bool hasReviewed) Parameters Type Name Description Int32 userId The user ID to consider their review. Boolean hasReviewed If true, only include observations they have reviewed. If false, only include observations they have not reviewed. SetSiteId() Declaration public void SetSiteId() SetSoundLicense(ObservationSearch.License) Require the observations to have at least one sound with this license. Declaration public void SetSoundLicense(ObservationSearch.License license) Parameters Type Name Description ObservationSearch.License license Required license SetTaxonRank(TaxonRank) Require the observations returned to have this taxon rank. Declaration public void SetTaxonRank(TaxonRank rank) Parameters Type Name Description TaxonRank rank Required taxonomic rank. SetTaxonRankLimits(TaxonRank, TaxonRank) Limit the search to taxa between these limits. Declaration public void SetTaxonRankLimits(TaxonRank lowest = TaxonRank.None, TaxonRank highest = TaxonRank.None) Parameters Type Name Description TaxonRank lowest The lowest taxon rank to include in the search (include this and higher). TaxonRank highest The highest taxon rank to include in the search (include this and lower). SetUnobservedByUserId(Int32) Limit the search to taxa that this user has not previously observed. Declaration public void SetUnobservedByUserId(int userId) Parameters Type Name Description Int32 userId The user ID to base this restriction on. SetUpdatedSince() Declaration public void SetUpdatedSince()"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.html",
    "title": "Enum ObservationSearch.IconicTaxon | iNat+Unity",
    "keywords": "Enum ObservationSearch.IconicTaxon Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum IconicTaxon Fields Name Description Actinopterygii Amphibia Animalia Arachnida Aves Chromista Fungi Insecta Mammalia Mollusca None Plantae Protozoa Reptilia Unknown"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.html",
    "title": "Enum ObservationSearch.IdentificationAgreement | iNat+Unity",
    "keywords": "Enum ObservationSearch.IdentificationAgreement Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum IdentificationAgreement Fields Name Description MostAgree MostDisagree None SomeAgree"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.html",
    "title": "Enum ObservationSearch.IucnConservationStatus | iNat+Unity",
    "keywords": "Enum ObservationSearch.IucnConservationStatus Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum IucnConservationStatus Fields Name Description Cr En Ew Ex Lc None Nt Vu"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSearch.License.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSearch.License.html",
    "title": "Enum ObservationSearch.License | iNat+Unity",
    "keywords": "Enum ObservationSearch.License Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum License Fields Name Description Cc0 CcAttr CcAttrNoDerivs CcAttrNonCommercial CcAttrNonCommercialNoDerivs CcAttrNonCommercialShareAlike CcShareAlike None"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.html",
    "title": "Enum ObservationSearch.SearchProperty | iNat+Unity",
    "keywords": "Enum ObservationSearch.SearchProperty Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum SearchProperty Fields Name Description All Description Names Place Tags"
  },
  "api/JoshAaronMiller.INaturalist.ObservationSubmission.html": {
    "href": "api/JoshAaronMiller.INaturalist.ObservationSubmission.html",
    "title": "Class ObservationSubmission | iNat+Unity",
    "keywords": "Class ObservationSubmission Inheritance Object JsonObject < ObservationSubmission > ObservationSubmission Inherited Members JsonObject<ObservationSubmission>.CreateFromJson(String) JsonObject<ObservationSubmission>.ToJson(ObservationSubmission) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class ObservationSubmission : JsonObject<ObservationSubmission> Fields description Declaration public string description Field Value Type Description String species_guess Declaration public string species_guess Field Value Type Description String taxon_id Declaration public int taxon_id Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.OrderBy.html": {
    "href": "api/JoshAaronMiller.INaturalist.OrderBy.html",
    "title": "Enum OrderBy | iNat+Unity",
    "keywords": "Enum OrderBy Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum OrderBy Fields Name Description CreatedAt Id ObservedOn SpeciesGuess Votes"
  },
  "api/JoshAaronMiller.INaturalist.Outlink.html": {
    "href": "api/JoshAaronMiller.INaturalist.Outlink.html",
    "title": "Class Outlink | iNat+Unity",
    "keywords": "Class Outlink Inheritance Object JsonObject < Outlink > Outlink Inherited Members JsonObject<Outlink>.CreateFromJson(String) JsonObject<Outlink>.ToJson(Outlink) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Outlink : JsonObject<Outlink> Fields source Declaration public string source Field Value Type Description String url Declaration public string url Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.PhotoFile.html": {
    "href": "api/JoshAaronMiller.INaturalist.PhotoFile.html",
    "title": "Class PhotoFile | iNat+Unity",
    "keywords": "Class PhotoFile Inheritance Object PhotoFile Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public class PhotoFile Fields fileName Declaration public string fileName Field Value Type Description String filePath Declaration public string filePath Field Value Type Description String fileType Declaration public string fileType Field Value Type Description String Methods ToBytes() Declaration public byte[] ToBytes() Returns Type Description Byte []"
  },
  "api/JoshAaronMiller.INaturalist.PhotoJson.html": {
    "href": "api/JoshAaronMiller.INaturalist.PhotoJson.html",
    "title": "Class PhotoJson | iNat+Unity",
    "keywords": "Class PhotoJson Inheritance Object JsonObject < PhotoJson > PhotoJson Inherited Members JsonObject<PhotoJson>.CreateFromJson(String) JsonObject<PhotoJson>.ToJson(PhotoJson) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class PhotoJson : JsonObject<PhotoJson> Fields attribution Declaration public string attribution Field Value Type Description String id Declaration public int id Field Value Type Description Int32 license_code Declaration public string license_code Field Value Type Description String medium_url Declaration public string medium_url Field Value Type Description String original_dimensions Declaration public Dimensions original_dimensions Field Value Type Description Dimensions square_url Declaration public string square_url Field Value Type Description String url Declaration public string url Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.Place.html": {
    "href": "api/JoshAaronMiller.INaturalist.Place.html",
    "title": "Class Place | iNat+Unity",
    "keywords": "Class Place Inheritance Object JsonObject < Place > Place Inherited Members JsonObject<Place>.CreateFromJson(String) JsonObject<Place>.ToJson(Place) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Place : JsonObject<Place> Fields admin_level Declaration public int admin_level Field Value Type Description Int32 ancestor_place_ids Declaration public List<int> ancestor_place_ids Field Value Type Description List < Int32 > bbox_area Declaration public float bbox_area Field Value Type Description Single bounding_box_geojson Declaration public BoundingBoxGeoJson bounding_box_geojson Field Value Type Description BoundingBoxGeoJson display_name Declaration public string display_name Field Value Type Description String geometry_geojson Declaration public GeometryGeoJson geometry_geojson Field Value Type Description GeometryGeoJson id Declaration public int id Field Value Type Description Int32 location Declaration public string location Field Value Type Description String name Declaration public string name Field Value Type Description String place_type Declaration public int place_type Field Value Type Description Int32 slug Declaration public string slug Field Value Type Description String uuid Declaration public string uuid Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.PlacesByCuration.html": {
    "href": "api/JoshAaronMiller.INaturalist.PlacesByCuration.html",
    "title": "Class PlacesByCuration | iNat+Unity",
    "keywords": "Class PlacesByCuration Inheritance Object JsonObject < PlacesByCuration > PlacesByCuration Inherited Members JsonObject<PlacesByCuration>.CreateFromJson(String) JsonObject<PlacesByCuration>.ToJson(PlacesByCuration) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class PlacesByCuration : JsonObject<PlacesByCuration> Fields community Declaration public List<Place> community Field Value Type Description List < Place > standard Declaration public List<Place> standard Field Value Type Description List < Place >"
  },
  "api/JoshAaronMiller.INaturalist.QualityGrade.html": {
    "href": "api/JoshAaronMiller.INaturalist.QualityGrade.html",
    "title": "Enum QualityGrade | iNat+Unity",
    "keywords": "Enum QualityGrade Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum QualityGrade Fields Name Description Casual NeedsId None Research"
  },
  "api/JoshAaronMiller.INaturalist.Results-1.html": {
    "href": "api/JoshAaronMiller.INaturalist.Results-1.html",
    "title": "Class Results<T> | iNat+Unity",
    "keywords": "Class Results<T> Inheritance Object JsonObject < Results <T>> Results<T> Inherited Members JsonObject<Results<T>>.CreateFromJson(String) JsonObject<Results<T>>.ToJson(Results<T>) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Results<T> : JsonObject<Results<T>> Type Parameters Name Description T Fields page Declaration public int page Field Value Type Description Int32 per_page Declaration public int per_page Field Value Type Description Int32 results Declaration public List<T> results Field Value Type Description List <T> total_results Declaration public int total_results Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.html": {
    "href": "api/JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.html",
    "title": "Enum SearchObject.BooleanParameter | iNat+Unity",
    "keywords": "Enum SearchObject.BooleanParameter Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum BooleanParameter Fields Name Description HasPhotos HasPositionalAccuracy HasProjectId HasSounds IncludeAllTaxonNames IsActive IsCaptive IsCurrent IsEndemic IsFromTaxonChange IsGeoreferenced IsIdentificationTaxonActive IsIdentified IsLicensed IsMappable IsNative IsObservationTaxonActive IsObservationTaxonActiveForIdentification IsObserversIdentification IsOutOfRange IsPhotoLicensed IsPopular IsThreatened IsVerifiable MatchesObservationTaxon ReturnIdOnly WasIntroduced"
  },
  "api/JoshAaronMiller.INaturalist.SearchObject.html": {
    "href": "api/JoshAaronMiller.INaturalist.SearchObject.html",
    "title": "Class SearchObject | iNat+Unity",
    "keywords": "Class SearchObject A search object has a set of bool and string parameters for conducting a query using the INatManager. Inheritance Object SearchObject IdentificationSearch MessageSearch ObservationSearch TaxonSearch Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public abstract class SearchObject Fields boolParams Declaration protected Dictionary<string, bool> boolParams Field Value Type Description Dictionary < String , Boolean > stringParams Declaration protected Dictionary<string, string> stringParams Field Value Type Description Dictionary < String , String > Methods RemoveBooleanParameter(SearchObject.BooleanParameter) Remove a parameter from the search. Declaration public void RemoveBooleanParameter(SearchObject.BooleanParameter key) Parameters Type Name Description SearchObject.BooleanParameter key The key to remove. RemoveStringParameter(SearchObject.StringParameter) Remove a parameter from the search. Declaration public void RemoveStringParameter(SearchObject.StringParameter key) Parameters Type Name Description SearchObject.StringParameter key The key to remove. SetBooleanParameter(SearchObject.BooleanParameter, Boolean) Add a parameter from the search. Declaration public void SetBooleanParameter(SearchObject.BooleanParameter key, bool value) Parameters Type Name Description SearchObject.BooleanParameter key The key to add. Boolean value The value to add. SetStringParameter(SearchObject.StringParameter, String) Add a parameter from the search. Declaration public void SetStringParameter(SearchObject.StringParameter key, string value) Parameters Type Name Description SearchObject.StringParameter key The key to add. String value The value to add. ToUrlParameters() Returns this search object as a string of URL parameters. Declaration public string ToUrlParameters() Returns Type Description String A string of URL parameters"
  },
  "api/JoshAaronMiller.INaturalist.SearchObject.StringParameter.html": {
    "href": "api/JoshAaronMiller.INaturalist.SearchObject.StringParameter.html",
    "title": "Enum SearchObject.StringParameter | iNat+Unity",
    "keywords": "Enum SearchObject.StringParameter Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum StringParameter Fields Name Description AccMax AccMaxOrUnknown AccMin ApplyProjectRules Box Category ConservationStatus ConservationStatusAuthority CreatedEndDate CreatedOn CreatedStartDate Day EndDate ExcludeId ExcludeObservationTaxonId ExcludeProjectId ExcludeProjectRules ExcludeTaxonId Geoprivacy HighestRank IconicTaxa IconicTaxonId IdentificationAgreement IdentificationObservedEndDate IdentificationObservedStartDate IdentifiedByUserId IdMax IdMin IncludeId IncludeObservationTaxonId IncludePlaceId IncludeProjectId IncludeTaxonId IucnConservationStatus Latitude License Longitude LowestRank Month NortheastLatitudeBound NortheastLongitudeBound ObservationCreatedEndDate ObservationCreatedStartDate ObservationHighestRank ObservationIconicTaxonId ObservationLowestRank ObservationTaxonRank ObservedOn OrderBy Page PerPage PhotoLicense QualityGrade Query Radius Reviewed ReviewerId SearchOnProperty SortOrder SoundLicense SouthwestLatitudeBound SouthwestLongitudeBound StartDate TaxonGeoprivacy TaxonName TaxonRank TimeToLive UnobservedByUser UserId UserLogin Year"
  },
  "api/JoshAaronMiller.INaturalist.SortOrder.html": {
    "href": "api/JoshAaronMiller.INaturalist.SortOrder.html",
    "title": "Enum SortOrder | iNat+Unity",
    "keywords": "Enum SortOrder Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum SortOrder Fields Name Description Asc Desc"
  },
  "api/JoshAaronMiller.INaturalist.Sound.html": {
    "href": "api/JoshAaronMiller.INaturalist.Sound.html",
    "title": "Class Sound | iNat+Unity",
    "keywords": "Class Sound Inheritance Object JsonObject < Sound > Sound Inherited Members JsonObject<Sound>.CreateFromJson(String) JsonObject<Sound>.ToJson(Sound) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Sound : JsonObject<Sound> Fields attribution Declaration public string attribution Field Value Type Description String file_content_type Declaration public string file_content_type Field Value Type Description String file_url Declaration public string file_url Field Value Type Description String flags Declaration public List<Flag> flags Field Value Type Description List < Flag > id Declaration public int id Field Value Type Description Int32 license_code Declaration public string license_code Field Value Type Description String native_sound_id Declaration public int native_sound_id Field Value Type Description Int32 play_local Declaration public bool play_local Field Value Type Description Boolean secret_token Declaration public string secret_token Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.SpeciesCount.html": {
    "href": "api/JoshAaronMiller.INaturalist.SpeciesCount.html",
    "title": "Class SpeciesCount | iNat+Unity",
    "keywords": "Class SpeciesCount Inheritance Object JsonObject < SpeciesCount > SpeciesCount Inherited Members JsonObject<SpeciesCount>.CreateFromJson(String) JsonObject<SpeciesCount>.ToJson(SpeciesCount) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class SpeciesCount : JsonObject<SpeciesCount> Fields count Declaration public int count Field Value Type Description Int32 taxon Declaration public Taxon taxon Field Value Type Description Taxon"
  },
  "api/JoshAaronMiller.INaturalist.Taxon.html": {
    "href": "api/JoshAaronMiller.INaturalist.Taxon.html",
    "title": "Class Taxon | iNat+Unity",
    "keywords": "Class Taxon Inheritance Object JsonObject < Taxon > Taxon Inherited Members JsonObject<Taxon>.CreateFromJson(String) JsonObject<Taxon>.ToJson(Taxon) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Taxon : JsonObject<Taxon> Fields ancestor_ids Declaration public List<int> ancestor_ids Field Value Type Description List < Int32 > ancestry Declaration public string ancestry Field Value Type Description String atlas_id Declaration public int atlas_id Field Value Type Description Int32 complete_species_count Declaration public int complete_species_count Field Value Type Description Int32 created_at Declaration public string created_at Field Value Type Description String default_photo Declaration public PhotoJson default_photo Field Value Type Description PhotoJson endemic Declaration public bool endemic Field Value Type Description Boolean extinct Declaration public bool extinct Field Value Type Description Boolean flag_counts Declaration public FlagCounts flag_counts Field Value Type Description FlagCounts iconic_taxon_id Declaration public int iconic_taxon_id Field Value Type Description Int32 iconic_taxon_name Declaration public string iconic_taxon_name Field Value Type Description String id Declaration public int id Field Value Type Description Int32 introduced Declaration public bool introduced Field Value Type Description Boolean is_active Declaration public bool is_active Field Value Type Description Boolean min_species_ancestry Declaration public string min_species_ancestry Field Value Type Description String min_species_taxon_id Declaration public int min_species_taxon_id Field Value Type Description Int32 name Declaration public string name Field Value Type Description String native Declaration public bool native Field Value Type Description Boolean observations_count Declaration public int observations_count Field Value Type Description Int32 parent_id Declaration public int parent_id Field Value Type Description Int32 photos_locked Declaration public bool photos_locked Field Value Type Description Boolean preferred_common_name Declaration public string preferred_common_name Field Value Type Description String rank Declaration public string rank Field Value Type Description String rank_level Declaration public int rank_level Field Value Type Description Int32 taxon_changes_count Declaration public int taxon_changes_count Field Value Type Description Int32 taxon_schemes_count Declaration public int taxon_schemes_count Field Value Type Description Int32 threatened Declaration public bool threatened Field Value Type Description Boolean universal_search_rank Declaration public int universal_search_rank Field Value Type Description Int32 wikipedia_summary Declaration public string wikipedia_summary Field Value Type Description String wikipedia_url Declaration public string wikipedia_url Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.TaxonRank.html": {
    "href": "api/JoshAaronMiller.INaturalist.TaxonRank.html",
    "title": "Enum TaxonRank | iNat+Unity",
    "keywords": "Enum TaxonRank Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum TaxonRank Fields Name Description Class Epifamily Family Form Genus GenusHybrid Hybrid Infraorder Kingdom None Order Phylum Species Subclass Subfamily Suborder Subphylum Subspecies Subtribe Superclass Superfamily Superorder Supertribe Tribe Variety"
  },
  "api/JoshAaronMiller.INaturalist.TaxonRankLevel.html": {
    "href": "api/JoshAaronMiller.INaturalist.TaxonRankLevel.html",
    "title": "Enum TaxonRankLevel | iNat+Unity",
    "keywords": "Enum TaxonRankLevel Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public enum TaxonRankLevel Fields Name Description Class Family Genus Kingdom None Order Phylum Species Subspecies"
  },
  "api/JoshAaronMiller.INaturalist.TaxonSearch.html": {
    "href": "api/JoshAaronMiller.INaturalist.TaxonSearch.html",
    "title": "Class TaxonSearch | iNat+Unity",
    "keywords": "Class TaxonSearch A TaxonSearch is a set of parameters for searching iNaturalist Taxa. Usage: myINatManager.SearchTaxa(myTaxonSearch) Inheritance Object SearchObject TaxonSearch Inherited Members SearchObject.boolParams SearchObject.stringParams SearchObject.SetBooleanParameter(SearchObject.BooleanParameter, Boolean) SearchObject.RemoveBooleanParameter(SearchObject.BooleanParameter) SearchObject.SetStringParameter(SearchObject.StringParameter, String) SearchObject.RemoveStringParameter(SearchObject.StringParameter) SearchObject.ToUrlParameters() Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public class TaxonSearch : SearchObject Methods IncludeIds(List<Int32>) Require the search to include these IDs. Declaration public void IncludeIds(List<int> ids) Parameters Type Name Description List < Int32 > ids IDs to include IncludeTaxonRanks(List<TaxonRank>) Limit the search to taxa of these ranks. Declaration public void IncludeTaxonRanks(List<TaxonRank> ranks) Parameters Type Name Description List < TaxonRank > ranks The list of taxon ranks to include in the search. SetLocalePreference(String) Set the locale preference for taxon common names. Declaration public void SetLocalePreference(string locale) Parameters Type Name Description String locale The locale preference. Remarks I'm not really sure what a valid input looks like. SetNameBeginsWith(String) Limit the search to taxa that begin with this substring Declaration public void SetNameBeginsWith(string query) Parameters Type Name Description String query The start of the taxa names SetPagination(Int32, Int32) Set the number of search results per page and which page to receive. For example, SetPagination(50,2) would return results 51-100. Declaration public void SetPagination(int resultsPerPage = 30, int page = 1) Parameters Type Name Description Int32 resultsPerPage How many results to return per page (default 30). Int32 page Which page of results to return (default 1). SetParentId(Int32) Limit the search to children of this taxon ID. Declaration public void SetParentId(int parentId) Parameters Type Name Description Int32 parentId The parent taxon's ID SetPreferredPlaceId(Int32) Set a place preference for regional taxon common names. Declaration public void SetPreferredPlaceId(int placeId) Parameters Type Name Description Int32 placeId The place ID of the preference. Remarks I think this means that taxon common names will be based on the place specified. SetTaxonIdLimits(Int32, Int32) Limit the search to taxa with IDs within this range. Both min and max are optional. Declaration public void SetTaxonIdLimits(int min = -1, int max = -1) Parameters Type Name Description Int32 min Include this ID and higher. Int32 max Include this ID and lower. SetTaxonRankLevel(TaxonRankLevel) Limit the search to taxa of this rank level. Declaration public void SetTaxonRankLevel(TaxonRankLevel rankLevel) Parameters Type Name Description TaxonRankLevel rankLevel The rank level to limit the search to."
  },
  "api/JoshAaronMiller.INaturalist.TaxonSummary.html": {
    "href": "api/JoshAaronMiller.INaturalist.TaxonSummary.html",
    "title": "Class TaxonSummary | iNat+Unity",
    "keywords": "Class TaxonSummary Inheritance Object JsonObject < TaxonSummary > TaxonSummary Inherited Members JsonObject<TaxonSummary>.CreateFromJson(String) JsonObject<TaxonSummary>.ToJson(TaxonSummary) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class TaxonSummary : JsonObject<TaxonSummary> Fields wikipedia_summary Declaration public string wikipedia_summary Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.TimeDetails.html": {
    "href": "api/JoshAaronMiller.INaturalist.TimeDetails.html",
    "title": "Class TimeDetails | iNat+Unity",
    "keywords": "Class TimeDetails Inheritance Object JsonObject < TimeDetails > TimeDetails Inherited Members JsonObject<TimeDetails>.CreateFromJson(String) JsonObject<TimeDetails>.ToJson(TimeDetails) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class TimeDetails : JsonObject<TimeDetails> Fields date Declaration public string date Field Value Type Description String day Declaration public int day Field Value Type Description Int32 hour Declaration public int hour Field Value Type Description Int32 month Declaration public int month Field Value Type Description Int32 week Declaration public int week Field Value Type Description Int32 year Declaration public int year Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.User.html": {
    "href": "api/JoshAaronMiller.INaturalist.User.html",
    "title": "Class User | iNat+Unity",
    "keywords": "Class User Inheritance Object JsonObject < User > User Inherited Members JsonObject<User>.CreateFromJson(String) JsonObject<User>.ToJson(User) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class User : JsonObject<User> Fields activity_count Declaration public int activity_count Field Value Type Description Int32 created_at Declaration public string created_at Field Value Type Description String icon Declaration public string icon Field Value Type Description String icon_url Declaration public string icon_url Field Value Type Description String id Declaration public int id Field Value Type Description Int32 identifications_count Declaration public int identifications_count Field Value Type Description Int32 journal_posts_count Declaration public int journal_posts_count Field Value Type Description Int32 login Declaration public string login Field Value Type Description String login_autocomplete Declaration public string login_autocomplete Field Value Type Description String login_exact Declaration public string login_exact Field Value Type Description String name Declaration public string name Field Value Type Description String name_autocomplete Declaration public string name_autocomplete Field Value Type Description String observations_count Declaration public int observations_count Field Value Type Description Int32 orcid Declaration public string orcid Field Value Type Description String roles Declaration public List<string> roles Field Value Type Description List < String > site_id Declaration public int site_id Field Value Type Description Int32 spam Declaration public bool spam Field Value Type Description Boolean species_count Declaration public int species_count Field Value Type Description Int32 suspended Declaration public bool suspended Field Value Type Description Boolean universal_search_rank Declaration public int universal_search_rank Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.UserMessage.html": {
    "href": "api/JoshAaronMiller.INaturalist.UserMessage.html",
    "title": "Class UserMessage | iNat+Unity",
    "keywords": "Class UserMessage Inheritance Object JsonObject < UserMessage > UserMessage Inherited Members JsonObject<UserMessage>.CreateFromJson(String) JsonObject<UserMessage>.ToJson(UserMessage) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class UserMessage : JsonObject<UserMessage> Fields body Declaration public string body Field Value Type Description String created_at Declaration public TimeDetails created_at Field Value Type Description TimeDetails flaggable_message_id Declaration public int flaggable_message_id Field Value Type Description Int32 from_user Declaration public User from_user Field Value Type Description User id Declaration public int id Field Value Type Description Int32 read_at Declaration public TimeDetails read_at Field Value Type Description TimeDetails subject Declaration public string subject Field Value Type Description String thread_flags Declaration public List<Flag> thread_flags Field Value Type Description List < Flag > thread_id Declaration public int thread_id Field Value Type Description Int32 thread_messages_count Declaration public int thread_messages_count Field Value Type Description Int32 to_user Declaration public User to_user Field Value Type Description User updated_at Declaration public TimeDetails updated_at Field Value Type Description TimeDetails user_id Declaration public int user_id Field Value Type Description Int32"
  },
  "api/JoshAaronMiller.INaturalist.Utilities.DefaultDictionary-2.html": {
    "href": "api/JoshAaronMiller.INaturalist.Utilities.DefaultDictionary-2.html",
    "title": "Class Utilities.DefaultDictionary<Key, Value> | iNat+Unity",
    "keywords": "Class Utilities.DefaultDictionary<Key, Value> A simple implementation of Python's defaultdict, which creates a default value if the key does not exist. Adapted from https://stackoverflow.com/questions/15622622/analogue-of-pythons-defaultdict Inheritance Object Dictionary <Key, Value> Utilities.DefaultDictionary<Key, Value> Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public class DefaultDictionary<Key, Value> : Dictionary<Key, Value>, IDictionary<Key, Value>, ICollection<KeyValuePair<Key, Value>>, IDictionary, ICollection, IReadOnlyDictionary<Key, Value>, IReadOnlyCollection<KeyValuePair<Key, Value>>, IEnumerable<KeyValuePair<Key, Value>>, IEnumerable, ISerializable, IDeserializationCallback where Value : new() Type Parameters Name Description Key Value Properties Item[Key] Declaration public Value this[Key key] { get; set; } Parameters Type Name Description Key key Property Value Type Description Value"
  },
  "api/JoshAaronMiller.INaturalist.Utilities.html": {
    "href": "api/JoshAaronMiller.INaturalist.Utilities.html",
    "title": "Class Utilities | iNat+Unity",
    "keywords": "Class Utilities Inheritance Object Utilities Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax public static class Utilities Methods LoadImageFromPath(String, GameObject, Action) Loads an image from a local file or URL into the texture of a GameObject's RawImage component. Creates a RawImage component if none exists. Declaration public static IEnumerator LoadImageFromPath(string fullPath, GameObject loadTo, Action callback = null) Parameters Type Name Description String fullPath The full local path or URL. GameObject loadTo The GameObject to load the image into. Action callback Optionally, a void function to call once the image is loaded successfully. Returns Type Description IEnumerator"
  },
  "api/JoshAaronMiller.INaturalist.Vote.html": {
    "href": "api/JoshAaronMiller.INaturalist.Vote.html",
    "title": "Class Vote | iNat+Unity",
    "keywords": "Class Vote Inheritance Object JsonObject < Vote > Vote Inherited Members JsonObject<Vote>.CreateFromJson(String) JsonObject<Vote>.ToJson(Vote) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class Vote : JsonObject<Vote> Fields scope Declaration public string scope Field Value Type Description String vote Declaration public string vote Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.WrappedFlag.html": {
    "href": "api/JoshAaronMiller.INaturalist.WrappedFlag.html",
    "title": "Class WrappedFlag | iNat+Unity",
    "keywords": "Class WrappedFlag Inheritance Object JsonObject < WrappedFlag > WrappedFlag Inherited Members JsonObject<WrappedFlag>.CreateFromJson(String) JsonObject<WrappedFlag>.ToJson(WrappedFlag) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class WrappedFlag : JsonObject<WrappedFlag> Fields flag Declaration public Flag flag Field Value Type Description Flag flag_explanation Declaration public string flag_explanation Field Value Type Description String"
  },
  "api/JoshAaronMiller.INaturalist.WrappedIdentificationSubmission.html": {
    "href": "api/JoshAaronMiller.INaturalist.WrappedIdentificationSubmission.html",
    "title": "Class WrappedIdentificationSubmission | iNat+Unity",
    "keywords": "Class WrappedIdentificationSubmission Inheritance Object JsonObject < WrappedIdentificationSubmission > WrappedIdentificationSubmission Inherited Members JsonObject<WrappedIdentificationSubmission>.CreateFromJson(String) JsonObject<WrappedIdentificationSubmission>.ToJson(WrappedIdentificationSubmission) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class WrappedIdentificationSubmission : JsonObject<WrappedIdentificationSubmission> Fields identification Declaration public IdentificationSubmission identification Field Value Type Description IdentificationSubmission"
  },
  "api/JoshAaronMiller.INaturalist.WrappedObservationSubmission.html": {
    "href": "api/JoshAaronMiller.INaturalist.WrappedObservationSubmission.html",
    "title": "Class WrappedObservationSubmission | iNat+Unity",
    "keywords": "Class WrappedObservationSubmission Inheritance Object JsonObject < WrappedObservationSubmission > WrappedObservationSubmission Inherited Members JsonObject<WrappedObservationSubmission>.CreateFromJson(String) JsonObject<WrappedObservationSubmission>.ToJson(WrappedObservationSubmission) Namespace : JoshAaronMiller.INaturalist Assembly : cs.temp.dll.dll Syntax [Serializable] public class WrappedObservationSubmission : JsonObject<WrappedObservationSubmission> Fields observation Declaration public ObservationSubmission observation Field Value Type Description ObservationSubmission"
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "iNaturalist + Unity | iNat+Unity",
    "keywords": "iNaturalist + Unity iNaturalist + Unity is a third-party tool created by Josh Aaron Miller to provide integration between Unity projects and the iNaturalist API. Disclaimers This repository is not endorsed by iNaturalist, the California Academy of Sciences, or National Geographic. This repository is not sponsored by or affiliated with Unity Technologies or its affiliates. “Unity” is a trademark or registered trademark of Unity Technologies or its affiliates in the U.S. and elsewhere. Getting Started Add this repository to your Unity project by downloading the code and moving it into your project or by adding it directly from the Unity Asset Store (coming soon!) For any scripts that want to interact with iNaturalist, import this code by adding using JoshAaronMiller.INaturalist; at the top of the file. Add an INatManager component to any GameObject, e.g.: INatManager myINatManager = gameObject.AddComponent<INatManager>(); or by adding the component in the Unity editor. Use the INatManager to make calls to the API following the documentation, see the examples below. General Usage Notes All calls to the INatManager require two parameters: a function to callback when the request returns successfully, and a function to callback when the request fails. Example: INatManager iNatManager; ObservationSearch myObservationSearch; // ... public void ProcessObservations(Results<Observations> myObservationResults){ // do stuff } public void HandleError(Error error){ // do stuff } iNatManager.SearchObservations(myObservationSearch, ProcessObservations, HandleError); Common Use Cases and Examples iNaturalist API Documentation The official iNaturalist API documentation is available here . Documentation coming soon..."
  }
}