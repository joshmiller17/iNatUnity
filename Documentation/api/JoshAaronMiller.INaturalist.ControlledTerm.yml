### YamlMime:ManagedReference
items:
- uid: JoshAaronMiller.INaturalist.ControlledTerm
  commentId: T:JoshAaronMiller.INaturalist.ControlledTerm
  id: ControlledTerm
  parent: JoshAaronMiller.INaturalist
  children:
  - JoshAaronMiller.INaturalist.ControlledTerm.id
  - JoshAaronMiller.INaturalist.ControlledTerm.is_value
  - JoshAaronMiller.INaturalist.ControlledTerm.multivalued
  - JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
  - JoshAaronMiller.INaturalist.ControlledTerm.uuid
  - JoshAaronMiller.INaturalist.ControlledTerm.values
  langs:
  - csharp
  - vb
  name: ControlledTerm
  nameWithType: ControlledTerm
  fullName: JoshAaronMiller.INaturalist.ControlledTerm
  type: Class
  source:
    id: ControlledTerm
    path: ''
    startLine: 1815
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: >-
      [Serializable]

      public class ControlledTerm : JsonObject<ControlledTerm>
    content.vb: >-
      <Serializable>

      Public Class ControlledTerm
          Inherits JsonObject(Of ControlledTerm)
  inheritance:
  - System.Object
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
  inheritedMembers:
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.CreateFromJson(System.String)
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: JoshAaronMiller.INaturalist.ControlledTerm.id
  commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.id
  id: id
  parent: JoshAaronMiller.INaturalist.ControlledTerm
  langs:
  - csharp
  - vb
  name: id
  nameWithType: ControlledTerm.id
  fullName: JoshAaronMiller.INaturalist.ControlledTerm.id
  type: Field
  source:
    id: id
    path: ''
    startLine: 1818
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public int id
    return:
      type: System.Int32
    content.vb: Public id As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
  commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
  id: ontology_uri
  parent: JoshAaronMiller.INaturalist.ControlledTerm
  langs:
  - csharp
  - vb
  name: ontology_uri
  nameWithType: ControlledTerm.ontology_uri
  fullName: JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
  type: Field
  source:
    id: ontology_uri
    path: ''
    startLine: 1819
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public string ontology_uri
    return:
      type: System.String
    content.vb: Public ontology_uri As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTerm.is_value
  commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.is_value
  id: is_value
  parent: JoshAaronMiller.INaturalist.ControlledTerm
  langs:
  - csharp
  - vb
  name: is_value
  nameWithType: ControlledTerm.is_value
  fullName: JoshAaronMiller.INaturalist.ControlledTerm.is_value
  type: Field
  source:
    id: is_value
    path: ''
    startLine: 1820
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public bool is_value
    return:
      type: System.Boolean
    content.vb: Public is_value As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTerm.multivalued
  commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.multivalued
  id: multivalued
  parent: JoshAaronMiller.INaturalist.ControlledTerm
  langs:
  - csharp
  - vb
  name: multivalued
  nameWithType: ControlledTerm.multivalued
  fullName: JoshAaronMiller.INaturalist.ControlledTerm.multivalued
  type: Field
  source:
    id: multivalued
    path: ''
    startLine: 1821
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public bool multivalued
    return:
      type: System.Boolean
    content.vb: Public multivalued As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTerm.uuid
  commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.uuid
  id: uuid
  parent: JoshAaronMiller.INaturalist.ControlledTerm
  langs:
  - csharp
  - vb
  name: uuid
  nameWithType: ControlledTerm.uuid
  fullName: JoshAaronMiller.INaturalist.ControlledTerm.uuid
  type: Field
  source:
    id: uuid
    path: ''
    startLine: 1822
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public string uuid
    return:
      type: System.String
    content.vb: Public uuid As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTerm.values
  commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.values
  id: values
  parent: JoshAaronMiller.INaturalist.ControlledTerm
  langs:
  - csharp
  - vb
  name: values
  nameWithType: ControlledTerm.values
  fullName: JoshAaronMiller.INaturalist.ControlledTerm.values
  type: Field
  source:
    id: values
    path: ''
    startLine: 1823
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public List<ControlledTermValue> values
    return:
      type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.ControlledTermValue}
    content.vb: Public values As List(Of ControlledTermValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: JoshAaronMiller.INaturalist
  commentId: N:JoshAaronMiller.INaturalist
  name: JoshAaronMiller.INaturalist
  nameWithType: JoshAaronMiller.INaturalist
  fullName: JoshAaronMiller.INaturalist
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
  commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
  parent: JoshAaronMiller.INaturalist
  definition: JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<ControlledTerm>
  nameWithType: JsonObject<ControlledTerm>
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTerm>
  nameWithType.vb: JsonObject(Of ControlledTerm)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTerm)
  name.vb: JsonObject(Of ControlledTerm)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: JoshAaronMiller.INaturalist.ControlledTerm
    name: ControlledTerm
    nameWithType: ControlledTerm
    fullName: JoshAaronMiller.INaturalist.ControlledTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JoshAaronMiller.INaturalist.ControlledTerm
    name: ControlledTerm
    nameWithType: ControlledTerm
    fullName: JoshAaronMiller.INaturalist.ControlledTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.CreateFromJson(System.String)
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  name: CreateFromJson(String)
  nameWithType: JsonObject<ControlledTerm>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTerm>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of ControlledTerm).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTerm).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<ControlledTerm>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTerm>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of ControlledTerm).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTerm).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(ControlledTerm)
  nameWithType: JsonObject<ControlledTerm>.ToJson(ControlledTerm)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTerm>.ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
  nameWithType.vb: JsonObject(Of ControlledTerm).ToJson(ControlledTerm)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTerm).ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<ControlledTerm>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTerm>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.ControlledTerm
    name: ControlledTerm
    nameWithType: ControlledTerm
    fullName: JoshAaronMiller.INaturalist.ControlledTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of ControlledTerm).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTerm).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.ControlledTerm
    name: ControlledTerm
    nameWithType: ControlledTerm
    fullName: JoshAaronMiller.INaturalist.ControlledTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: JoshAaronMiller.INaturalist.JsonObject`1
  commentId: T:JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<T>
  nameWithType: JsonObject<T>
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>
  nameWithType.vb: JsonObject(Of T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T)
  name.vb: JsonObject(Of T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  isExternal: true
  name: CreateFromJson(String)
  nameWithType: JsonObject<T>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of T).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<T>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of T).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(T)
  nameWithType: JsonObject<T>.ToJson(T)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson(T)
  nameWithType.vb: JsonObject(Of T).ToJson(T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson(T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<T>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of T).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{JoshAaronMiller.INaturalist.ControlledTermValue}
  commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.ControlledTermValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ControlledTermValue>
  nameWithType: List<ControlledTermValue>
  fullName: System.Collections.Generic.List<JoshAaronMiller.INaturalist.ControlledTermValue>
  nameWithType.vb: List(Of ControlledTermValue)
  fullName.vb: System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.ControlledTermValue)
  name.vb: List(Of ControlledTermValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: JoshAaronMiller.INaturalist.ControlledTermValue
    name: ControlledTermValue
    nameWithType: ControlledTermValue
    fullName: JoshAaronMiller.INaturalist.ControlledTermValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JoshAaronMiller.INaturalist.ControlledTermValue
    name: ControlledTermValue
    nameWithType: ControlledTermValue
    fullName: JoshAaronMiller.INaturalist.ControlledTermValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
