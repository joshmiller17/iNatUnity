### YamlMime:ManagedReference
items:
- uid: JoshAaronMiller.INaturalist.GeometryGeoJson
  commentId: T:JoshAaronMiller.INaturalist.GeometryGeoJson
  id: GeometryGeoJson
  parent: JoshAaronMiller.INaturalist
  children:
  - JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
  - JoshAaronMiller.INaturalist.GeometryGeoJson.type
  langs:
  - csharp
  - vb
  name: GeometryGeoJson
  nameWithType: GeometryGeoJson
  fullName: JoshAaronMiller.INaturalist.GeometryGeoJson
  type: Class
  source:
    id: GeometryGeoJson
    path: ''
    startLine: 1964
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: >-
      [Serializable]

      public class GeometryGeoJson : JsonObject<GeometryGeoJson>
    content.vb: >-
      <Serializable>

      Public Class GeometryGeoJson
          Inherits JsonObject(Of GeometryGeoJson)
  inheritance:
  - System.Object
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
  inheritedMembers:
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.CreateFromJson(System.String)
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: JoshAaronMiller.INaturalist.GeometryGeoJson.type
  commentId: F:JoshAaronMiller.INaturalist.GeometryGeoJson.type
  id: type
  parent: JoshAaronMiller.INaturalist.GeometryGeoJson
  langs:
  - csharp
  - vb
  name: type
  nameWithType: GeometryGeoJson.type
  fullName: JoshAaronMiller.INaturalist.GeometryGeoJson.type
  type: Field
  source:
    id: type
    path: ''
    startLine: 1967
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public string type
    return:
      type: System.String
    content.vb: Public type As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
  commentId: F:JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
  id: coordinates
  parent: JoshAaronMiller.INaturalist.GeometryGeoJson
  langs:
  - csharp
  - vb
  name: coordinates
  nameWithType: GeometryGeoJson.coordinates
  fullName: JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
  type: Field
  source:
    id: coordinates
    path: ''
    startLine: 1968
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public List<List<List<int>>> coordinates
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}}
    content.vb: Public coordinates As List(Of List(Of List(Of Integer)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: JoshAaronMiller.INaturalist
  commentId: N:JoshAaronMiller.INaturalist
  name: JoshAaronMiller.INaturalist
  nameWithType: JoshAaronMiller.INaturalist
  fullName: JoshAaronMiller.INaturalist
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
  commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
  parent: JoshAaronMiller.INaturalist
  definition: JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<GeometryGeoJson>
  nameWithType: JsonObject<GeometryGeoJson>
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeometryGeoJson>
  nameWithType.vb: JsonObject(Of GeometryGeoJson)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeometryGeoJson)
  name.vb: JsonObject(Of GeometryGeoJson)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: JoshAaronMiller.INaturalist.GeometryGeoJson
    name: GeometryGeoJson
    nameWithType: GeometryGeoJson
    fullName: JoshAaronMiller.INaturalist.GeometryGeoJson
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JoshAaronMiller.INaturalist.GeometryGeoJson
    name: GeometryGeoJson
    nameWithType: GeometryGeoJson
    fullName: JoshAaronMiller.INaturalist.GeometryGeoJson
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.CreateFromJson(System.String)
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  name: CreateFromJson(String)
  nameWithType: JsonObject<GeometryGeoJson>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeometryGeoJson>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of GeometryGeoJson).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeometryGeoJson).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<GeometryGeoJson>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeometryGeoJson>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of GeometryGeoJson).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeometryGeoJson).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(GeometryGeoJson)
  nameWithType: JsonObject<GeometryGeoJson>.ToJson(GeometryGeoJson)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeometryGeoJson>.ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
  nameWithType.vb: JsonObject(Of GeometryGeoJson).ToJson(GeometryGeoJson)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeometryGeoJson).ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<GeometryGeoJson>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeometryGeoJson>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.GeometryGeoJson
    name: GeometryGeoJson
    nameWithType: GeometryGeoJson
    fullName: JoshAaronMiller.INaturalist.GeometryGeoJson
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of GeometryGeoJson).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeometryGeoJson).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.GeometryGeoJson
    name: GeometryGeoJson
    nameWithType: GeometryGeoJson
    fullName: JoshAaronMiller.INaturalist.GeometryGeoJson
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: JoshAaronMiller.INaturalist.JsonObject`1
  commentId: T:JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<T>
  nameWithType: JsonObject<T>
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>
  nameWithType.vb: JsonObject(Of T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T)
  name.vb: JsonObject(Of T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  isExternal: true
  name: CreateFromJson(String)
  nameWithType: JsonObject<T>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of T).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<T>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of T).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(T)
  nameWithType: JsonObject<T>.ToJson(T)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson(T)
  nameWithType.vb: JsonObject(Of T).ToJson(T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson(T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<T>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of T).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<List<List<Int32>>>
  nameWithType: List<List<List<Int32>>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<System.Collections.Generic.List<System.Int32>>>
  nameWithType.vb: List(Of List(Of List(Of Int32)))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of System.Collections.Generic.List(Of System.Int32)))
  name.vb: List(Of List(Of List(Of Int32)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
