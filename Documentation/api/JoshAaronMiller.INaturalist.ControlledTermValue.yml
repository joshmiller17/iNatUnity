### YamlMime:ManagedReference
items:
- uid: JoshAaronMiller.INaturalist.ControlledTermValue
  commentId: T:JoshAaronMiller.INaturalist.ControlledTermValue
  id: ControlledTermValue
  parent: JoshAaronMiller.INaturalist
  children:
  - JoshAaronMiller.INaturalist.ControlledTermValue.blocking
  - JoshAaronMiller.INaturalist.ControlledTermValue.id
  - JoshAaronMiller.INaturalist.ControlledTermValue.label
  - JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
  - JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
  - JoshAaronMiller.INaturalist.ControlledTermValue.uri
  - JoshAaronMiller.INaturalist.ControlledTermValue.uuid
  langs:
  - csharp
  - vb
  name: ControlledTermValue
  nameWithType: ControlledTermValue
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue
  type: Class
  source:
    id: ControlledTermValue
    path: ''
    startLine: 1850
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: >-
      [Serializable]

      public class ControlledTermValue : JsonObject<ControlledTermValue>
    content.vb: >-
      <Serializable>

      Public Class ControlledTermValue
          Inherits JsonObject(Of ControlledTermValue)
  inheritance:
  - System.Object
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
  inheritedMembers:
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.CreateFromJson(System.String)
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: JoshAaronMiller.INaturalist.ControlledTermValue.id
  commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.id
  id: id
  parent: JoshAaronMiller.INaturalist.ControlledTermValue
  langs:
  - csharp
  - vb
  name: id
  nameWithType: ControlledTermValue.id
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue.id
  type: Field
  source:
    id: id
    path: ''
    startLine: 1853
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public int id
    return:
      type: System.Int32
    content.vb: Public id As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
  commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
  id: ontology_uri
  parent: JoshAaronMiller.INaturalist.ControlledTermValue
  langs:
  - csharp
  - vb
  name: ontology_uri
  nameWithType: ControlledTermValue.ontology_uri
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
  type: Field
  source:
    id: ontology_uri
    path: ''
    startLine: 1854
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public string ontology_uri
    return:
      type: System.String
    content.vb: Public ontology_uri As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTermValue.uri
  commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.uri
  id: uri
  parent: JoshAaronMiller.INaturalist.ControlledTermValue
  langs:
  - csharp
  - vb
  name: uri
  nameWithType: ControlledTermValue.uri
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue.uri
  type: Field
  source:
    id: uri
    path: ''
    startLine: 1855
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public string uri
    return:
      type: System.String
    content.vb: Public uri As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTermValue.blocking
  commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.blocking
  id: blocking
  parent: JoshAaronMiller.INaturalist.ControlledTermValue
  langs:
  - csharp
  - vb
  name: blocking
  nameWithType: ControlledTermValue.blocking
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue.blocking
  type: Field
  source:
    id: blocking
    path: ''
    startLine: 1856
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public bool blocking
    return:
      type: System.Boolean
    content.vb: Public blocking As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTermValue.uuid
  commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.uuid
  id: uuid
  parent: JoshAaronMiller.INaturalist.ControlledTermValue
  langs:
  - csharp
  - vb
  name: uuid
  nameWithType: ControlledTermValue.uuid
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue.uuid
  type: Field
  source:
    id: uuid
    path: ''
    startLine: 1857
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public string uuid
    return:
      type: System.String
    content.vb: Public uuid As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
  commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
  id: taxon_ids
  parent: JoshAaronMiller.INaturalist.ControlledTermValue
  langs:
  - csharp
  - vb
  name: taxon_ids
  nameWithType: ControlledTermValue.taxon_ids
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
  type: Field
  source:
    id: taxon_ids
    path: ''
    startLine: 1858
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public List<int> taxon_ids
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public taxon_ids As List(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JoshAaronMiller.INaturalist.ControlledTermValue.label
  commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.label
  id: label
  parent: JoshAaronMiller.INaturalist.ControlledTermValue
  langs:
  - csharp
  - vb
  name: label
  nameWithType: ControlledTermValue.label
  fullName: JoshAaronMiller.INaturalist.ControlledTermValue.label
  type: Field
  source:
    id: label
    path: ''
    startLine: 1859
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public string label
    return:
      type: System.String
    content.vb: Public label As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: JoshAaronMiller.INaturalist
  commentId: N:JoshAaronMiller.INaturalist
  name: JoshAaronMiller.INaturalist
  nameWithType: JoshAaronMiller.INaturalist
  fullName: JoshAaronMiller.INaturalist
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
  commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
  parent: JoshAaronMiller.INaturalist
  definition: JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<ControlledTermValue>
  nameWithType: JsonObject<ControlledTermValue>
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTermValue>
  nameWithType.vb: JsonObject(Of ControlledTermValue)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTermValue)
  name.vb: JsonObject(Of ControlledTermValue)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: JoshAaronMiller.INaturalist.ControlledTermValue
    name: ControlledTermValue
    nameWithType: ControlledTermValue
    fullName: JoshAaronMiller.INaturalist.ControlledTermValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JoshAaronMiller.INaturalist.ControlledTermValue
    name: ControlledTermValue
    nameWithType: ControlledTermValue
    fullName: JoshAaronMiller.INaturalist.ControlledTermValue
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.CreateFromJson(System.String)
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  name: CreateFromJson(String)
  nameWithType: JsonObject<ControlledTermValue>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTermValue>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of ControlledTermValue).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTermValue).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<ControlledTermValue>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTermValue>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of ControlledTermValue).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTermValue).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(ControlledTermValue)
  nameWithType: JsonObject<ControlledTermValue>.ToJson(ControlledTermValue)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTermValue>.ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
  nameWithType.vb: JsonObject(Of ControlledTermValue).ToJson(ControlledTermValue)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTermValue).ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<ControlledTermValue>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTermValue>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.ControlledTermValue
    name: ControlledTermValue
    nameWithType: ControlledTermValue
    fullName: JoshAaronMiller.INaturalist.ControlledTermValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of ControlledTermValue).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTermValue).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.ControlledTermValue
    name: ControlledTermValue
    nameWithType: ControlledTermValue
    fullName: JoshAaronMiller.INaturalist.ControlledTermValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: JoshAaronMiller.INaturalist.JsonObject`1
  commentId: T:JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<T>
  nameWithType: JsonObject<T>
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>
  nameWithType.vb: JsonObject(Of T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T)
  name.vb: JsonObject(Of T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  isExternal: true
  name: CreateFromJson(String)
  nameWithType: JsonObject<T>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of T).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<T>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of T).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(T)
  nameWithType: JsonObject<T>.ToJson(T)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson(T)
  nameWithType.vb: JsonObject(Of T).ToJson(T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson(T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<T>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of T).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
