### YamlMime:ManagedReference
items:
- uid: JoshAaronMiller.INaturalist.Results`1
  commentId: T:JoshAaronMiller.INaturalist.Results`1
  id: Results`1
  parent: JoshAaronMiller.INaturalist
  children:
  - JoshAaronMiller.INaturalist.Results`1.page
  - JoshAaronMiller.INaturalist.Results`1.per_page
  - JoshAaronMiller.INaturalist.Results`1.results
  - JoshAaronMiller.INaturalist.Results`1.total_results
  langs:
  - csharp
  - vb
  name: Results<T>
  nameWithType: Results<T>
  fullName: JoshAaronMiller.INaturalist.Results<T>
  type: Class
  source:
    id: Results
    path: ''
    startLine: 2349
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: >-
      [Serializable]

      public class Results<T> : JsonObject<Results<T>>
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      Public Class Results(Of T)
          Inherits JsonObject(Of Results(Of T))
  inheritance:
  - System.Object
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
  inheritedMembers:
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.CreateFromJson(System.String)
  - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.ToJson(JoshAaronMiller.INaturalist.Results{{T}})
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: Results(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: JoshAaronMiller.INaturalist.Results(Of T)
  name.vb: Results(Of T)
- uid: JoshAaronMiller.INaturalist.Results`1.total_results
  commentId: F:JoshAaronMiller.INaturalist.Results`1.total_results
  id: total_results
  parent: JoshAaronMiller.INaturalist.Results`1
  langs:
  - csharp
  - vb
  name: total_results
  nameWithType: Results<T>.total_results
  fullName: JoshAaronMiller.INaturalist.Results<T>.total_results
  type: Field
  source:
    id: total_results
    path: ''
    startLine: 2352
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public int total_results
    return:
      type: System.Int32
    content.vb: Public total_results As Integer
  nameWithType.vb: Results(Of T).total_results
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: JoshAaronMiller.INaturalist.Results(Of T).total_results
- uid: JoshAaronMiller.INaturalist.Results`1.page
  commentId: F:JoshAaronMiller.INaturalist.Results`1.page
  id: page
  parent: JoshAaronMiller.INaturalist.Results`1
  langs:
  - csharp
  - vb
  name: page
  nameWithType: Results<T>.page
  fullName: JoshAaronMiller.INaturalist.Results<T>.page
  type: Field
  source:
    id: page
    path: ''
    startLine: 2353
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public int page
    return:
      type: System.Int32
    content.vb: Public page As Integer
  nameWithType.vb: Results(Of T).page
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: JoshAaronMiller.INaturalist.Results(Of T).page
- uid: JoshAaronMiller.INaturalist.Results`1.per_page
  commentId: F:JoshAaronMiller.INaturalist.Results`1.per_page
  id: per_page
  parent: JoshAaronMiller.INaturalist.Results`1
  langs:
  - csharp
  - vb
  name: per_page
  nameWithType: Results<T>.per_page
  fullName: JoshAaronMiller.INaturalist.Results<T>.per_page
  type: Field
  source:
    id: per_page
    path: ''
    startLine: 2354
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public int per_page
    return:
      type: System.Int32
    content.vb: Public per_page As Integer
  nameWithType.vb: Results(Of T).per_page
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: JoshAaronMiller.INaturalist.Results(Of T).per_page
- uid: JoshAaronMiller.INaturalist.Results`1.results
  commentId: F:JoshAaronMiller.INaturalist.Results`1.results
  id: results
  parent: JoshAaronMiller.INaturalist.Results`1
  langs:
  - csharp
  - vb
  name: results
  nameWithType: Results<T>.results
  fullName: JoshAaronMiller.INaturalist.Results<T>.results
  type: Field
  source:
    id: results
    path: ''
    startLine: 2355
  assemblies:
  - cs.temp.dll
  namespace: JoshAaronMiller.INaturalist
  syntax:
    content: public List<T> results
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public results As List(Of T)
  nameWithType.vb: Results(Of T).results
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: JoshAaronMiller.INaturalist.Results(Of T).results
references:
- uid: JoshAaronMiller.INaturalist
  commentId: N:JoshAaronMiller.INaturalist
  name: JoshAaronMiller.INaturalist
  nameWithType: JoshAaronMiller.INaturalist
  fullName: JoshAaronMiller.INaturalist
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
  commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
  parent: JoshAaronMiller.INaturalist
  definition: JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<Results<T>>
  nameWithType: JsonObject<Results<T>>
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Results<T>>
  nameWithType.vb: JsonObject(Of Results(Of T))
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Results(Of T))
  name.vb: JsonObject(Of Results(Of T))
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: JoshAaronMiller.INaturalist.Results`1
    name: Results
    nameWithType: Results
    fullName: JoshAaronMiller.INaturalist.Results
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JoshAaronMiller.INaturalist.Results`1
    name: Results
    nameWithType: Results
    fullName: JoshAaronMiller.INaturalist.Results
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.CreateFromJson(System.String)
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  name: CreateFromJson(String)
  nameWithType: JsonObject<Results<T>>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Results<T>>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of Results(Of T)).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Results(Of T)).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<Results<T>>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Results<T>>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of Results(Of T)).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Results(Of T)).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.ToJson(JoshAaronMiller.INaturalist.Results{{T}})
  commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.ToJson(JoshAaronMiller.INaturalist.Results{`0})
  parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
  definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(Results<T>)
  nameWithType: JsonObject<Results<T>>.ToJson(Results<T>)
  fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Results<T>>.ToJson(JoshAaronMiller.INaturalist.Results<T>)
  nameWithType.vb: JsonObject(Of Results(Of T)).ToJson(Results(Of T))
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Results(Of T)).ToJson(JoshAaronMiller.INaturalist.Results(Of T))
  name.vb: ToJson(Results(Of T))
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<Results<T>>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Results<T>>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.Results`1
    name: Results
    nameWithType: Results
    fullName: JoshAaronMiller.INaturalist.Results
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of Results(Of T)).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Results(Of T)).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: JoshAaronMiller.INaturalist.Results`1
    name: Results
    nameWithType: Results
    fullName: JoshAaronMiller.INaturalist.Results
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: JoshAaronMiller.INaturalist.JsonObject`1
  commentId: T:JoshAaronMiller.INaturalist.JsonObject`1
  name: JsonObject<T>
  nameWithType: JsonObject<T>
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>
  nameWithType.vb: JsonObject(Of T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T)
  name.vb: JsonObject(Of T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1
    name: JsonObject
    nameWithType: JsonObject
    fullName: JoshAaronMiller.INaturalist.JsonObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  isExternal: true
  name: CreateFromJson(String)
  nameWithType: JsonObject<T>.CreateFromJson(String)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson(System.String)
  nameWithType.vb: JsonObject(Of T).CreateFromJson(String)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson(System.String)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject<T>.CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    name: CreateFromJson
    nameWithType: JsonObject(Of T).CreateFromJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  name: ToJson(T)
  nameWithType: JsonObject<T>.ToJson(T)
  fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson(T)
  nameWithType.vb: JsonObject(Of T).ToJson(T)
  fullName.vb: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson(T)
  spec.csharp:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject<T>.ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    name: ToJson
    nameWithType: JsonObject(Of T).ToJson
    fullName: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
