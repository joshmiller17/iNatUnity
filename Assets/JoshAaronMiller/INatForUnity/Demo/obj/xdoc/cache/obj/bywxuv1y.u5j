id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Global
  language: CSharp
  name:
    CSharp: Global
    VB: ''
  nameWithType:
    CSharp: Global
    VB: ''
  qualifiedName:
    CSharp: Global
    VB: ''
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Global.Demo
    commentId: T:Global.Demo
    language: CSharp
    name:
      CSharp: Demo
      VB: Demo
    nameWithType:
      CSharp: Demo
      VB: Demo
    qualifiedName:
      CSharp: Demo
      VB: Demo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Demo
      path: ''
      startLine: 9
    syntax:
      content:
        CSharp: 'public class Demo : MonoBehaviour'
        VB: >-
          Public Class Demo

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Demo.INatManagerObj
      commentId: F:Global.Demo.INatManagerObj
      language: CSharp
      name:
        CSharp: INatManagerObj
        VB: INatManagerObj
      nameWithType:
        CSharp: Demo.INatManagerObj
        VB: Demo.INatManagerObj
      qualifiedName:
        CSharp: Demo.INatManagerObj
        VB: Demo.INatManagerObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: INatManagerObj
        path: ''
        startLine: 11
      syntax:
        content:
          CSharp: public GameObject INatManagerObj
          VB: Public INatManagerObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.INatImage
      commentId: F:Global.Demo.INatImage
      language: CSharp
      name:
        CSharp: INatImage
        VB: INatImage
      nameWithType:
        CSharp: Demo.INatImage
        VB: Demo.INatImage
      qualifiedName:
        CSharp: Demo.INatImage
        VB: Demo.INatImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: INatImage
        path: ''
        startLine: 15
      syntax:
        content:
          CSharp: public GameObject INatImage
          VB: Public INatImage As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.AttributionObj
      commentId: F:Global.Demo.AttributionObj
      language: CSharp
      name:
        CSharp: AttributionObj
        VB: AttributionObj
      nameWithType:
        CSharp: Demo.AttributionObj
        VB: Demo.AttributionObj
      qualifiedName:
        CSharp: Demo.AttributionObj
        VB: Demo.AttributionObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AttributionObj
        path: ''
        startLine: 16
      syntax:
        content:
          CSharp: public GameObject AttributionObj
          VB: Public AttributionObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.ObservationCountObj
      commentId: F:Global.Demo.ObservationCountObj
      language: CSharp
      name:
        CSharp: ObservationCountObj
        VB: ObservationCountObj
      nameWithType:
        CSharp: Demo.ObservationCountObj
        VB: Demo.ObservationCountObj
      qualifiedName:
        CSharp: Demo.ObservationCountObj
        VB: Demo.ObservationCountObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ObservationCountObj
        path: ''
        startLine: 17
      syntax:
        content:
          CSharp: public GameObject ObservationCountObj
          VB: Public ObservationCountObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.LoadingTextObj
      commentId: F:Global.Demo.LoadingTextObj
      language: CSharp
      name:
        CSharp: LoadingTextObj
        VB: LoadingTextObj
      nameWithType:
        CSharp: Demo.LoadingTextObj
        VB: Demo.LoadingTextObj
      qualifiedName:
        CSharp: Demo.LoadingTextObj
        VB: Demo.LoadingTextObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LoadingTextObj
        path: ''
        startLine: 18
      syntax:
        content:
          CSharp: public GameObject LoadingTextObj
          VB: Public LoadingTextObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.VoteButtonObjs
      commentId: F:Global.Demo.VoteButtonObjs
      language: CSharp
      name:
        CSharp: VoteButtonObjs
        VB: VoteButtonObjs
      nameWithType:
        CSharp: Demo.VoteButtonObjs
        VB: Demo.VoteButtonObjs
      qualifiedName:
        CSharp: Demo.VoteButtonObjs
        VB: Demo.VoteButtonObjs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: VoteButtonObjs
        path: ''
        startLine: 22
      syntax:
        content:
          CSharp: public GameObject VoteButtonObjs
          VB: Public VoteButtonObjs As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.VoteButtonOneObj
      commentId: F:Global.Demo.VoteButtonOneObj
      language: CSharp
      name:
        CSharp: VoteButtonOneObj
        VB: VoteButtonOneObj
      nameWithType:
        CSharp: Demo.VoteButtonOneObj
        VB: Demo.VoteButtonOneObj
      qualifiedName:
        CSharp: Demo.VoteButtonOneObj
        VB: Demo.VoteButtonOneObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: VoteButtonOneObj
        path: ''
        startLine: 23
      syntax:
        content:
          CSharp: public GameObject VoteButtonOneObj
          VB: Public VoteButtonOneObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.VoteButtonTwoObj
      commentId: F:Global.Demo.VoteButtonTwoObj
      language: CSharp
      name:
        CSharp: VoteButtonTwoObj
        VB: VoteButtonTwoObj
      nameWithType:
        CSharp: Demo.VoteButtonTwoObj
        VB: Demo.VoteButtonTwoObj
      qualifiedName:
        CSharp: Demo.VoteButtonTwoObj
        VB: Demo.VoteButtonTwoObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: VoteButtonTwoObj
        path: ''
        startLine: 24
      syntax:
        content:
          CSharp: public GameObject VoteButtonTwoObj
          VB: Public VoteButtonTwoObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.LoginButtonObj
      commentId: F:Global.Demo.LoginButtonObj
      language: CSharp
      name:
        CSharp: LoginButtonObj
        VB: LoginButtonObj
      nameWithType:
        CSharp: Demo.LoginButtonObj
        VB: Demo.LoginButtonObj
      qualifiedName:
        CSharp: Demo.LoginButtonObj
        VB: Demo.LoginButtonObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LoginButtonObj
        path: ''
        startLine: 28
      syntax:
        content:
          CSharp: public GameObject LoginButtonObj
          VB: Public LoginButtonObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.PostLoginObj
      commentId: F:Global.Demo.PostLoginObj
      language: CSharp
      name:
        CSharp: PostLoginObj
        VB: PostLoginObj
      nameWithType:
        CSharp: Demo.PostLoginObj
        VB: Demo.PostLoginObj
      qualifiedName:
        CSharp: Demo.PostLoginObj
        VB: Demo.PostLoginObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PostLoginObj
        path: ''
        startLine: 29
      syntax:
        content:
          CSharp: public GameObject PostLoginObj
          VB: Public PostLoginObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.ErrorMessageObj
      commentId: F:Global.Demo.ErrorMessageObj
      language: CSharp
      name:
        CSharp: ErrorMessageObj
        VB: ErrorMessageObj
      nameWithType:
        CSharp: Demo.ErrorMessageObj
        VB: Demo.ErrorMessageObj
      qualifiedName:
        CSharp: Demo.ErrorMessageObj
        VB: Demo.ErrorMessageObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ErrorMessageObj
        path: ''
        startLine: 30
      syntax:
        content:
          CSharp: public GameObject ErrorMessageObj
          VB: Public ErrorMessageObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.apiTokenInputObj
      commentId: F:Global.Demo.apiTokenInputObj
      language: CSharp
      name:
        CSharp: apiTokenInputObj
        VB: apiTokenInputObj
      nameWithType:
        CSharp: Demo.apiTokenInputObj
        VB: Demo.apiTokenInputObj
      qualifiedName:
        CSharp: Demo.apiTokenInputObj
        VB: Demo.apiTokenInputObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: apiTokenInputObj
        path: ''
        startLine: 31
      syntax:
        content:
          CSharp: public GameObject apiTokenInputObj
          VB: Public apiTokenInputObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.LoggedInAsObj
      commentId: F:Global.Demo.LoggedInAsObj
      language: CSharp
      name:
        CSharp: LoggedInAsObj
        VB: LoggedInAsObj
      nameWithType:
        CSharp: Demo.LoggedInAsObj
        VB: Demo.LoggedInAsObj
      qualifiedName:
        CSharp: Demo.LoggedInAsObj
        VB: Demo.LoggedInAsObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LoggedInAsObj
        path: ''
        startLine: 32
      syntax:
        content:
          CSharp: public GameObject LoggedInAsObj
          VB: Public LoggedInAsObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.InfoDetailsObj
      commentId: F:Global.Demo.InfoDetailsObj
      language: CSharp
      name:
        CSharp: InfoDetailsObj
        VB: InfoDetailsObj
      nameWithType:
        CSharp: Demo.InfoDetailsObj
        VB: Demo.InfoDetailsObj
      qualifiedName:
        CSharp: Demo.InfoDetailsObj
        VB: Demo.InfoDetailsObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InfoDetailsObj
        path: ''
        startLine: 33
      syntax:
        content:
          CSharp: public GameObject InfoDetailsObj
          VB: Public InfoDetailsObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.SearchButton
      commentId: F:Global.Demo.SearchButton
      language: CSharp
      name:
        CSharp: SearchButton
        VB: SearchButton
      nameWithType:
        CSharp: Demo.SearchButton
        VB: Demo.SearchButton
      qualifiedName:
        CSharp: Demo.SearchButton
        VB: Demo.SearchButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SearchButton
        path: ''
        startLine: 37
      syntax:
        content:
          CSharp: public GameObject SearchButton
          VB: Public SearchButton As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.CityDropdownObj
      commentId: F:Global.Demo.CityDropdownObj
      language: CSharp
      name:
        CSharp: CityDropdownObj
        VB: CityDropdownObj
      nameWithType:
        CSharp: Demo.CityDropdownObj
        VB: Demo.CityDropdownObj
      qualifiedName:
        CSharp: Demo.CityDropdownObj
        VB: Demo.CityDropdownObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CityDropdownObj
        path: ''
        startLine: 38
      syntax:
        content:
          CSharp: public GameObject CityDropdownObj
          VB: Public CityDropdownObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.TaxonDropdownObj
      commentId: F:Global.Demo.TaxonDropdownObj
      language: CSharp
      name:
        CSharp: TaxonDropdownObj
        VB: TaxonDropdownObj
      nameWithType:
        CSharp: Demo.TaxonDropdownObj
        VB: Demo.TaxonDropdownObj
      qualifiedName:
        CSharp: Demo.TaxonDropdownObj
        VB: Demo.TaxonDropdownObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TaxonDropdownObj
        path: ''
        startLine: 39
      syntax:
        content:
          CSharp: public GameObject TaxonDropdownObj
          VB: Public TaxonDropdownObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.YearDropdownObj
      commentId: F:Global.Demo.YearDropdownObj
      language: CSharp
      name:
        CSharp: YearDropdownObj
        VB: YearDropdownObj
      nameWithType:
        CSharp: Demo.YearDropdownObj
        VB: Demo.YearDropdownObj
      qualifiedName:
        CSharp: Demo.YearDropdownObj
        VB: Demo.YearDropdownObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: YearDropdownObj
        path: ''
        startLine: 40
      syntax:
        content:
          CSharp: public GameObject YearDropdownObj
          VB: Public YearDropdownObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.QualityGradeDropdownObj
      commentId: F:Global.Demo.QualityGradeDropdownObj
      language: CSharp
      name:
        CSharp: QualityGradeDropdownObj
        VB: QualityGradeDropdownObj
      nameWithType:
        CSharp: Demo.QualityGradeDropdownObj
        VB: Demo.QualityGradeDropdownObj
      qualifiedName:
        CSharp: Demo.QualityGradeDropdownObj
        VB: Demo.QualityGradeDropdownObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: QualityGradeDropdownObj
        path: ''
        startLine: 41
      syntax:
        content:
          CSharp: public GameObject QualityGradeDropdownObj
          VB: Public QualityGradeDropdownObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.CitySelectDropdownCallback
      commentId: M:Global.Demo.CitySelectDropdownCallback
      language: CSharp
      name:
        CSharp: CitySelectDropdownCallback()
        VB: CitySelectDropdownCallback()
      nameWithType:
        CSharp: Demo.CitySelectDropdownCallback()
        VB: Demo.CitySelectDropdownCallback()
      qualifiedName:
        CSharp: Demo.CitySelectDropdownCallback()
        VB: Demo.CitySelectDropdownCallback()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CitySelectDropdownCallback
        path: ''
        startLine: 209
      syntax:
        content:
          CSharp: public void CitySelectDropdownCallback()
          VB: Public Sub CitySelectDropdownCallback
      overload: Global.Demo.CitySelectDropdownCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.TaxonSelectDropdownCallback
      commentId: M:Global.Demo.TaxonSelectDropdownCallback
      language: CSharp
      name:
        CSharp: TaxonSelectDropdownCallback()
        VB: TaxonSelectDropdownCallback()
      nameWithType:
        CSharp: Demo.TaxonSelectDropdownCallback()
        VB: Demo.TaxonSelectDropdownCallback()
      qualifiedName:
        CSharp: Demo.TaxonSelectDropdownCallback()
        VB: Demo.TaxonSelectDropdownCallback()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TaxonSelectDropdownCallback
        path: ''
        startLine: 224
      syntax:
        content:
          CSharp: public void TaxonSelectDropdownCallback()
          VB: Public Sub TaxonSelectDropdownCallback
      overload: Global.Demo.TaxonSelectDropdownCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.YearSelectDropdownCallback
      commentId: M:Global.Demo.YearSelectDropdownCallback
      language: CSharp
      name:
        CSharp: YearSelectDropdownCallback()
        VB: YearSelectDropdownCallback()
      nameWithType:
        CSharp: Demo.YearSelectDropdownCallback()
        VB: Demo.YearSelectDropdownCallback()
      qualifiedName:
        CSharp: Demo.YearSelectDropdownCallback()
        VB: Demo.YearSelectDropdownCallback()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: YearSelectDropdownCallback
        path: ''
        startLine: 237
      syntax:
        content:
          CSharp: public void YearSelectDropdownCallback()
          VB: Public Sub YearSelectDropdownCallback
      overload: Global.Demo.YearSelectDropdownCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.QualityGradeSelectDropdownCallback
      commentId: M:Global.Demo.QualityGradeSelectDropdownCallback
      language: CSharp
      name:
        CSharp: QualityGradeSelectDropdownCallback()
        VB: QualityGradeSelectDropdownCallback()
      nameWithType:
        CSharp: Demo.QualityGradeSelectDropdownCallback()
        VB: Demo.QualityGradeSelectDropdownCallback()
      qualifiedName:
        CSharp: Demo.QualityGradeSelectDropdownCallback()
        VB: Demo.QualityGradeSelectDropdownCallback()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: QualityGradeSelectDropdownCallback
        path: ''
        startLine: 250
      syntax:
        content:
          CSharp: public void QualityGradeSelectDropdownCallback()
          VB: Public Sub QualityGradeSelectDropdownCallback
      overload: Global.Demo.QualityGradeSelectDropdownCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.ToggleThreatened
      commentId: M:Global.Demo.ToggleThreatened
      language: CSharp
      name:
        CSharp: ToggleThreatened()
        VB: ToggleThreatened()
      nameWithType:
        CSharp: Demo.ToggleThreatened()
        VB: Demo.ToggleThreatened()
      qualifiedName:
        CSharp: Demo.ToggleThreatened()
        VB: Demo.ToggleThreatened()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleThreatened
        path: ''
        startLine: 263
      syntax:
        content:
          CSharp: public void ToggleThreatened()
          VB: Public Sub ToggleThreatened
      overload: Global.Demo.ToggleThreatened*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.ToggleCaptive
      commentId: M:Global.Demo.ToggleCaptive
      language: CSharp
      name:
        CSharp: ToggleCaptive()
        VB: ToggleCaptive()
      nameWithType:
        CSharp: Demo.ToggleCaptive()
        VB: Demo.ToggleCaptive()
      qualifiedName:
        CSharp: Demo.ToggleCaptive()
        VB: Demo.ToggleCaptive()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleCaptive
        path: ''
        startLine: 269
      syntax:
        content:
          CSharp: public void ToggleCaptive()
          VB: Public Sub ToggleCaptive
      overload: Global.Demo.ToggleCaptive*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.TogglePublicDomain
      commentId: M:Global.Demo.TogglePublicDomain
      language: CSharp
      name:
        CSharp: TogglePublicDomain()
        VB: TogglePublicDomain()
      nameWithType:
        CSharp: Demo.TogglePublicDomain()
        VB: Demo.TogglePublicDomain()
      qualifiedName:
        CSharp: Demo.TogglePublicDomain()
        VB: Demo.TogglePublicDomain()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TogglePublicDomain
        path: ''
        startLine: 275
      syntax:
        content:
          CSharp: public void TogglePublicDomain()
          VB: Public Sub TogglePublicDomain
      overload: Global.Demo.TogglePublicDomain*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.ToggleSpeciesSpecific
      commentId: M:Global.Demo.ToggleSpeciesSpecific
      language: CSharp
      name:
        CSharp: ToggleSpeciesSpecific()
        VB: ToggleSpeciesSpecific()
      nameWithType:
        CSharp: Demo.ToggleSpeciesSpecific()
        VB: Demo.ToggleSpeciesSpecific()
      qualifiedName:
        CSharp: Demo.ToggleSpeciesSpecific()
        VB: Demo.ToggleSpeciesSpecific()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleSpeciesSpecific
        path: ''
        startLine: 288
      syntax:
        content:
          CSharp: public void ToggleSpeciesSpecific()
          VB: Public Sub ToggleSpeciesSpecific
      overload: Global.Demo.ToggleSpeciesSpecific*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.DoSearch
      commentId: M:Global.Demo.DoSearch
      language: CSharp
      name:
        CSharp: DoSearch()
        VB: DoSearch()
      nameWithType:
        CSharp: Demo.DoSearch()
        VB: Demo.DoSearch()
      qualifiedName:
        CSharp: Demo.DoSearch()
        VB: Demo.DoSearch()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DoSearch
        path: ''
        startLine: 316
      syntax:
        content:
          CSharp: public void DoSearch()
          VB: Public Sub DoSearch
      overload: Global.Demo.DoSearch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.HandleError(JoshAaronMiller.INaturalist.Error)
      commentId: M:Global.Demo.HandleError(JoshAaronMiller.INaturalist.Error)
      language: CSharp
      name:
        CSharp: HandleError(Error)
        VB: HandleError(Error)
      nameWithType:
        CSharp: Demo.HandleError(Error)
        VB: Demo.HandleError(Error)
      qualifiedName:
        CSharp: Demo.HandleError(JoshAaronMiller.INaturalist.Error)
        VB: Demo.HandleError(JoshAaronMiller.INaturalist.Error)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HandleError
        path: ''
        startLine: 323
      syntax:
        content:
          CSharp: public void HandleError(Error e)
          VB: Public Sub HandleError(e As  Error)
        parameters:
        - id: e
          type: JoshAaronMiller.INaturalist.Error
      overload: Global.Demo.HandleError*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.ClickLoginButton
      commentId: M:Global.Demo.ClickLoginButton
      language: CSharp
      name:
        CSharp: ClickLoginButton()
        VB: ClickLoginButton()
      nameWithType:
        CSharp: Demo.ClickLoginButton()
        VB: Demo.ClickLoginButton()
      qualifiedName:
        CSharp: Demo.ClickLoginButton()
        VB: Demo.ClickLoginButton()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ClickLoginButton
        path: ''
        startLine: 342
      syntax:
        content:
          CSharp: public void ClickLoginButton()
          VB: Public Sub ClickLoginButton
      overload: Global.Demo.ClickLoginButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.CheckApiToken
      commentId: M:Global.Demo.CheckApiToken
      language: CSharp
      name:
        CSharp: CheckApiToken()
        VB: CheckApiToken()
      nameWithType:
        CSharp: Demo.CheckApiToken()
        VB: Demo.CheckApiToken()
      qualifiedName:
        CSharp: Demo.CheckApiToken()
        VB: Demo.CheckApiToken()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckApiToken
        path: ''
        startLine: 349
      syntax:
        content:
          CSharp: public void CheckApiToken()
          VB: Public Sub CheckApiToken
      overload: Global.Demo.CheckApiToken*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.SetUser(JoshAaronMiller.INaturalist.User)
      commentId: M:Global.Demo.SetUser(JoshAaronMiller.INaturalist.User)
      language: CSharp
      name:
        CSharp: SetUser(User)
        VB: SetUser(User)
      nameWithType:
        CSharp: Demo.SetUser(User)
        VB: Demo.SetUser(User)
      qualifiedName:
        CSharp: Demo.SetUser(JoshAaronMiller.INaturalist.User)
        VB: Demo.SetUser(JoshAaronMiller.INaturalist.User)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetUser
        path: ''
        startLine: 365
      syntax:
        content:
          CSharp: public void SetUser(User me)
          VB: Public Sub SetUser(me As User)
        parameters:
        - id: me
          type: JoshAaronMiller.INaturalist.User
      overload: Global.Demo.SetUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.SetUserError(JoshAaronMiller.INaturalist.Error)
      commentId: M:Global.Demo.SetUserError(JoshAaronMiller.INaturalist.Error)
      language: CSharp
      name:
        CSharp: SetUserError(Error)
        VB: SetUserError(Error)
      nameWithType:
        CSharp: Demo.SetUserError(Error)
        VB: Demo.SetUserError(Error)
      qualifiedName:
        CSharp: Demo.SetUserError(JoshAaronMiller.INaturalist.Error)
        VB: Demo.SetUserError(JoshAaronMiller.INaturalist.Error)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetUserError
        path: ''
        startLine: 376
      syntax:
        content:
          CSharp: public void SetUserError(Error e)
          VB: Public Sub SetUserError(e As  Error)
        parameters:
        - id: e
          type: JoshAaronMiller.INaturalist.Error
      overload: Global.Demo.SetUserError*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.MoveCarouselLeft
      commentId: M:Global.Demo.MoveCarouselLeft
      language: CSharp
      name:
        CSharp: MoveCarouselLeft()
        VB: MoveCarouselLeft()
      nameWithType:
        CSharp: Demo.MoveCarouselLeft()
        VB: Demo.MoveCarouselLeft()
      qualifiedName:
        CSharp: Demo.MoveCarouselLeft()
        VB: Demo.MoveCarouselLeft()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveCarouselLeft
        path: ''
        startLine: 389
      syntax:
        content:
          CSharp: public void MoveCarouselLeft()
          VB: Public Sub MoveCarouselLeft
      overload: Global.Demo.MoveCarouselLeft*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.MoveCarouselRight
      commentId: M:Global.Demo.MoveCarouselRight
      language: CSharp
      name:
        CSharp: MoveCarouselRight()
        VB: MoveCarouselRight()
      nameWithType:
        CSharp: Demo.MoveCarouselRight()
        VB: Demo.MoveCarouselRight()
      qualifiedName:
        CSharp: Demo.MoveCarouselRight()
        VB: Demo.MoveCarouselRight()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveCarouselRight
        path: ''
        startLine: 400
      syntax:
        content:
          CSharp: public void MoveCarouselRight()
          VB: Public Sub MoveCarouselRight
      overload: Global.Demo.MoveCarouselRight*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.TryShowVotingButtons
      commentId: M:Global.Demo.TryShowVotingButtons
      language: CSharp
      name:
        CSharp: TryShowVotingButtons()
        VB: TryShowVotingButtons()
      nameWithType:
        CSharp: Demo.TryShowVotingButtons()
        VB: Demo.TryShowVotingButtons()
      qualifiedName:
        CSharp: Demo.TryShowVotingButtons()
        VB: Demo.TryShowVotingButtons()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TryShowVotingButtons
        path: ''
        startLine: 411
      syntax:
        content:
          CSharp: public void TryShowVotingButtons()
          VB: Public Sub TryShowVotingButtons
      overload: Global.Demo.TryShowVotingButtons*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.VoteOptionOne
      commentId: M:Global.Demo.VoteOptionOne
      language: CSharp
      name:
        CSharp: VoteOptionOne()
        VB: VoteOptionOne()
      nameWithType:
        CSharp: Demo.VoteOptionOne()
        VB: Demo.VoteOptionOne()
      qualifiedName:
        CSharp: Demo.VoteOptionOne()
        VB: Demo.VoteOptionOne()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: VoteOptionOne
        path: ''
        startLine: 424
      syntax:
        content:
          CSharp: public void VoteOptionOne()
          VB: Public Sub VoteOptionOne
      overload: Global.Demo.VoteOptionOne*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.VoteOptionTwo
      commentId: M:Global.Demo.VoteOptionTwo
      language: CSharp
      name:
        CSharp: VoteOptionTwo()
        VB: VoteOptionTwo()
      nameWithType:
        CSharp: Demo.VoteOptionTwo()
        VB: Demo.VoteOptionTwo()
      qualifiedName:
        CSharp: Demo.VoteOptionTwo()
        VB: Demo.VoteOptionTwo()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: VoteOptionTwo
        path: ''
        startLine: 430
      syntax:
        content:
          CSharp: public void VoteOptionTwo()
          VB: Public Sub VoteOptionTwo
      overload: Global.Demo.VoteOptionTwo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.CreateIdentificationCallback(JoshAaronMiller.INaturalist.Identification)
      commentId: M:Global.Demo.CreateIdentificationCallback(JoshAaronMiller.INaturalist.Identification)
      language: CSharp
      name:
        CSharp: CreateIdentificationCallback(Identification)
        VB: CreateIdentificationCallback(Identification)
      nameWithType:
        CSharp: Demo.CreateIdentificationCallback(Identification)
        VB: Demo.CreateIdentificationCallback(Identification)
      qualifiedName:
        CSharp: Demo.CreateIdentificationCallback(JoshAaronMiller.INaturalist.Identification)
        VB: Demo.CreateIdentificationCallback(JoshAaronMiller.INaturalist.Identification)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateIdentificationCallback
        path: ''
        startLine: 444
      syntax:
        content:
          CSharp: public void CreateIdentificationCallback(Identification ident)
          VB: Public Sub CreateIdentificationCallback(ident As Identification)
        parameters:
        - id: ident
          type: JoshAaronMiller.INaturalist.Identification
      overload: Global.Demo.CreateIdentificationCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.RemoveObservation
      commentId: M:Global.Demo.RemoveObservation
      language: CSharp
      name:
        CSharp: RemoveObservation()
        VB: RemoveObservation()
      nameWithType:
        CSharp: Demo.RemoveObservation()
        VB: Demo.RemoveObservation()
      qualifiedName:
        CSharp: Demo.RemoveObservation()
        VB: Demo.RemoveObservation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RemoveObservation
        path: ''
        startLine: 449
      syntax:
        content:
          CSharp: public void RemoveObservation()
          VB: Public Sub RemoveObservation
      overload: Global.Demo.RemoveObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Demo.RemoveLoading
      commentId: M:Global.Demo.RemoveLoading
      language: CSharp
      name:
        CSharp: RemoveLoading()
        VB: RemoveLoading()
      nameWithType:
        CSharp: Demo.RemoveLoading()
        VB: Demo.RemoveLoading()
      qualifiedName:
        CSharp: Demo.RemoveLoading()
        VB: Demo.RemoveLoading()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RemoveLoading
        path: ''
        startLine: 532
      syntax:
        content:
          CSharp: public void RemoveLoading()
          VB: Public Sub RemoveLoading
      overload: Global.Demo.RemoveLoading*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: JoshAaronMiller.INaturalist
  commentId: N:JoshAaronMiller.INaturalist
  language: CSharp
  name:
    CSharp: JoshAaronMiller.INaturalist
    VB: JoshAaronMiller.INaturalist
  nameWithType:
    CSharp: JoshAaronMiller.INaturalist
    VB: JoshAaronMiller.INaturalist
  qualifiedName:
    CSharp: JoshAaronMiller.INaturalist
    VB: JoshAaronMiller.INaturalist
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: JoshAaronMiller.INaturalist.TaxonRank
    commentId: T:JoshAaronMiller.INaturalist.TaxonRank
    language: CSharp
    name:
      CSharp: TaxonRank
      VB: TaxonRank
    nameWithType:
      CSharp: TaxonRank
      VB: TaxonRank
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.TaxonRank
      VB: JoshAaronMiller.INaturalist.TaxonRank
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: TaxonRank
      path: ''
      startLine: 556
    syntax:
      content:
        CSharp: public enum TaxonRank
        VB: Public Enum TaxonRank
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.TaxonRank.None
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: TaxonRank.None
        VB: TaxonRank.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.None
        VB: JoshAaronMiller.INaturalist.TaxonRank.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Kingdom
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Kingdom
      language: CSharp
      name:
        CSharp: Kingdom
        VB: Kingdom
      nameWithType:
        CSharp: TaxonRank.Kingdom
        VB: TaxonRank.Kingdom
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Kingdom
        VB: JoshAaronMiller.INaturalist.TaxonRank.Kingdom
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Kingdom
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: Kingdom = 1
          VB: Kingdom = 1
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Phylum
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Phylum
      language: CSharp
      name:
        CSharp: Phylum
        VB: Phylum
      nameWithType:
        CSharp: TaxonRank.Phylum
        VB: TaxonRank.Phylum
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Phylum
        VB: JoshAaronMiller.INaturalist.TaxonRank.Phylum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Phylum
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: Phylum = 2
          VB: Phylum = 2
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Subphylum
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Subphylum
      language: CSharp
      name:
        CSharp: Subphylum
        VB: Subphylum
      nameWithType:
        CSharp: TaxonRank.Subphylum
        VB: TaxonRank.Subphylum
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Subphylum
        VB: JoshAaronMiller.INaturalist.TaxonRank.Subphylum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Subphylum
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: Subphylum = 3
          VB: Subphylum = 3
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Superclass
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Superclass
      language: CSharp
      name:
        CSharp: Superclass
        VB: Superclass
      nameWithType:
        CSharp: TaxonRank.Superclass
        VB: TaxonRank.Superclass
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Superclass
        VB: JoshAaronMiller.INaturalist.TaxonRank.Superclass
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Superclass
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: Superclass = 4
          VB: Superclass = 4
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Class
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Class
      language: CSharp
      name:
        CSharp: Class
        VB: Class
      nameWithType:
        CSharp: TaxonRank.Class
        VB: TaxonRank.Class
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Class
        VB: JoshAaronMiller.INaturalist.TaxonRank.Class
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Class
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: Class = 5
          VB: Class = 5
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Subclass
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Subclass
      language: CSharp
      name:
        CSharp: Subclass
        VB: Subclass
      nameWithType:
        CSharp: TaxonRank.Subclass
        VB: TaxonRank.Subclass
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Subclass
        VB: JoshAaronMiller.INaturalist.TaxonRank.Subclass
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Subclass
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: Subclass = 6
          VB: Subclass = 6
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Superorder
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Superorder
      language: CSharp
      name:
        CSharp: Superorder
        VB: Superorder
      nameWithType:
        CSharp: TaxonRank.Superorder
        VB: TaxonRank.Superorder
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Superorder
        VB: JoshAaronMiller.INaturalist.TaxonRank.Superorder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Superorder
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: Superorder = 7
          VB: Superorder = 7
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Order
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Order
      language: CSharp
      name:
        CSharp: Order
        VB: Order
      nameWithType:
        CSharp: TaxonRank.Order
        VB: TaxonRank.Order
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Order
        VB: JoshAaronMiller.INaturalist.TaxonRank.Order
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Order
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Order = 8
          VB: Order = 8
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Suborder
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Suborder
      language: CSharp
      name:
        CSharp: Suborder
        VB: Suborder
      nameWithType:
        CSharp: TaxonRank.Suborder
        VB: TaxonRank.Suborder
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Suborder
        VB: JoshAaronMiller.INaturalist.TaxonRank.Suborder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Suborder
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Suborder = 9
          VB: Suborder = 9
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Infraorder
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Infraorder
      language: CSharp
      name:
        CSharp: Infraorder
        VB: Infraorder
      nameWithType:
        CSharp: TaxonRank.Infraorder
        VB: TaxonRank.Infraorder
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Infraorder
        VB: JoshAaronMiller.INaturalist.TaxonRank.Infraorder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Infraorder
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Infraorder = 10
          VB: Infraorder = 10
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Superfamily
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Superfamily
      language: CSharp
      name:
        CSharp: Superfamily
        VB: Superfamily
      nameWithType:
        CSharp: TaxonRank.Superfamily
        VB: TaxonRank.Superfamily
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Superfamily
        VB: JoshAaronMiller.INaturalist.TaxonRank.Superfamily
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Superfamily
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Superfamily = 11
          VB: Superfamily = 11
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Epifamily
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Epifamily
      language: CSharp
      name:
        CSharp: Epifamily
        VB: Epifamily
      nameWithType:
        CSharp: TaxonRank.Epifamily
        VB: TaxonRank.Epifamily
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Epifamily
        VB: JoshAaronMiller.INaturalist.TaxonRank.Epifamily
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Epifamily
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Epifamily = 12
          VB: Epifamily = 12
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Family
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Family
      language: CSharp
      name:
        CSharp: Family
        VB: Family
      nameWithType:
        CSharp: TaxonRank.Family
        VB: TaxonRank.Family
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Family
        VB: JoshAaronMiller.INaturalist.TaxonRank.Family
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Family
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Family = 13
          VB: Family = 13
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Subfamily
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Subfamily
      language: CSharp
      name:
        CSharp: Subfamily
        VB: Subfamily
      nameWithType:
        CSharp: TaxonRank.Subfamily
        VB: TaxonRank.Subfamily
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Subfamily
        VB: JoshAaronMiller.INaturalist.TaxonRank.Subfamily
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Subfamily
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Subfamily = 14
          VB: Subfamily = 14
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Supertribe
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Supertribe
      language: CSharp
      name:
        CSharp: Supertribe
        VB: Supertribe
      nameWithType:
        CSharp: TaxonRank.Supertribe
        VB: TaxonRank.Supertribe
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Supertribe
        VB: JoshAaronMiller.INaturalist.TaxonRank.Supertribe
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Supertribe
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: Supertribe = 15
          VB: Supertribe = 15
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Tribe
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Tribe
      language: CSharp
      name:
        CSharp: Tribe
        VB: Tribe
      nameWithType:
        CSharp: TaxonRank.Tribe
        VB: TaxonRank.Tribe
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Tribe
        VB: JoshAaronMiller.INaturalist.TaxonRank.Tribe
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Tribe
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Tribe = 16
          VB: Tribe = 16
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Subtribe
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Subtribe
      language: CSharp
      name:
        CSharp: Subtribe
        VB: Subtribe
      nameWithType:
        CSharp: TaxonRank.Subtribe
        VB: TaxonRank.Subtribe
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Subtribe
        VB: JoshAaronMiller.INaturalist.TaxonRank.Subtribe
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Subtribe
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Subtribe = 17
          VB: Subtribe = 17
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Genus
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Genus
      language: CSharp
      name:
        CSharp: Genus
        VB: Genus
      nameWithType:
        CSharp: TaxonRank.Genus
        VB: TaxonRank.Genus
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Genus
        VB: JoshAaronMiller.INaturalist.TaxonRank.Genus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Genus
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Genus = 18
          VB: Genus = 18
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.GenusHybrid
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.GenusHybrid
      language: CSharp
      name:
        CSharp: GenusHybrid
        VB: GenusHybrid
      nameWithType:
        CSharp: TaxonRank.GenusHybrid
        VB: TaxonRank.GenusHybrid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.GenusHybrid
        VB: JoshAaronMiller.INaturalist.TaxonRank.GenusHybrid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GenusHybrid
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: GenusHybrid = 19
          VB: GenusHybrid = 19
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Species
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Species
      language: CSharp
      name:
        CSharp: Species
        VB: Species
      nameWithType:
        CSharp: TaxonRank.Species
        VB: TaxonRank.Species
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Species
        VB: JoshAaronMiller.INaturalist.TaxonRank.Species
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Species
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Species = 20
          VB: Species = 20
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Hybrid
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Hybrid
      language: CSharp
      name:
        CSharp: Hybrid
        VB: Hybrid
      nameWithType:
        CSharp: TaxonRank.Hybrid
        VB: TaxonRank.Hybrid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Hybrid
        VB: JoshAaronMiller.INaturalist.TaxonRank.Hybrid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Hybrid
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Hybrid = 21
          VB: Hybrid = 21
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Subspecies
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Subspecies
      language: CSharp
      name:
        CSharp: Subspecies
        VB: Subspecies
      nameWithType:
        CSharp: TaxonRank.Subspecies
        VB: TaxonRank.Subspecies
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Subspecies
        VB: JoshAaronMiller.INaturalist.TaxonRank.Subspecies
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Subspecies
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Subspecies = 22
          VB: Subspecies = 22
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Variety
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Variety
      language: CSharp
      name:
        CSharp: Variety
        VB: Variety
      nameWithType:
        CSharp: TaxonRank.Variety
        VB: TaxonRank.Variety
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Variety
        VB: JoshAaronMiller.INaturalist.TaxonRank.Variety
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Variety
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Variety = 23
          VB: Variety = 23
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRank.Form
      commentId: F:JoshAaronMiller.INaturalist.TaxonRank.Form
      language: CSharp
      name:
        CSharp: Form
        VB: Form
      nameWithType:
        CSharp: TaxonRank.Form
        VB: TaxonRank.Form
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRank.Form
        VB: JoshAaronMiller.INaturalist.TaxonRank.Form
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Form
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: Form = 24
          VB: Form = 24
        return:
          type: JoshAaronMiller.INaturalist.TaxonRank
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.QualityGrade
    commentId: T:JoshAaronMiller.INaturalist.QualityGrade
    language: CSharp
    name:
      CSharp: QualityGrade
      VB: QualityGrade
    nameWithType:
      CSharp: QualityGrade
      VB: QualityGrade
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.QualityGrade
      VB: JoshAaronMiller.INaturalist.QualityGrade
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: QualityGrade
      path: ''
      startLine: 563
    syntax:
      content:
        CSharp: public enum QualityGrade
        VB: Public Enum QualityGrade
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.QualityGrade.None
      commentId: F:JoshAaronMiller.INaturalist.QualityGrade.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: QualityGrade.None
        VB: QualityGrade.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.QualityGrade.None
        VB: JoshAaronMiller.INaturalist.QualityGrade.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 565
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: JoshAaronMiller.INaturalist.QualityGrade
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.QualityGrade.Casual
      commentId: F:JoshAaronMiller.INaturalist.QualityGrade.Casual
      language: CSharp
      name:
        CSharp: Casual
        VB: Casual
      nameWithType:
        CSharp: QualityGrade.Casual
        VB: QualityGrade.Casual
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.QualityGrade.Casual
        VB: JoshAaronMiller.INaturalist.QualityGrade.Casual
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Casual
        path: ''
        startLine: 565
      syntax:
        content:
          CSharp: Casual = 1
          VB: Casual = 1
        return:
          type: JoshAaronMiller.INaturalist.QualityGrade
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.QualityGrade.NeedsId
      commentId: F:JoshAaronMiller.INaturalist.QualityGrade.NeedsId
      language: CSharp
      name:
        CSharp: NeedsId
        VB: NeedsId
      nameWithType:
        CSharp: QualityGrade.NeedsId
        VB: QualityGrade.NeedsId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.QualityGrade.NeedsId
        VB: JoshAaronMiller.INaturalist.QualityGrade.NeedsId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: NeedsId
        path: ''
        startLine: 565
      syntax:
        content:
          CSharp: NeedsId = 2
          VB: NeedsId = 2
        return:
          type: JoshAaronMiller.INaturalist.QualityGrade
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.QualityGrade.Research
      commentId: F:JoshAaronMiller.INaturalist.QualityGrade.Research
      language: CSharp
      name:
        CSharp: Research
        VB: Research
      nameWithType:
        CSharp: QualityGrade.Research
        VB: QualityGrade.Research
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.QualityGrade.Research
        VB: JoshAaronMiller.INaturalist.QualityGrade.Research
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Research
        path: ''
        startLine: 565
      syntax:
        content:
          CSharp: Research = 3
          VB: Research = 3
        return:
          type: JoshAaronMiller.INaturalist.QualityGrade
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.OrderBy
    commentId: T:JoshAaronMiller.INaturalist.OrderBy
    language: CSharp
    name:
      CSharp: OrderBy
      VB: OrderBy
    nameWithType:
      CSharp: OrderBy
      VB: OrderBy
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.OrderBy
      VB: JoshAaronMiller.INaturalist.OrderBy
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: OrderBy
      path: ''
      startLine: 568
    syntax:
      content:
        CSharp: public enum OrderBy
        VB: Public Enum OrderBy
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.OrderBy.CreatedAt
      commentId: F:JoshAaronMiller.INaturalist.OrderBy.CreatedAt
      language: CSharp
      name:
        CSharp: CreatedAt
        VB: CreatedAt
      nameWithType:
        CSharp: OrderBy.CreatedAt
        VB: OrderBy.CreatedAt
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.OrderBy.CreatedAt
        VB: JoshAaronMiller.INaturalist.OrderBy.CreatedAt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreatedAt
        path: ''
        startLine: 570
      syntax:
        content:
          CSharp: CreatedAt = 0
          VB: CreatedAt = 0
        return:
          type: JoshAaronMiller.INaturalist.OrderBy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.OrderBy.ObservedOn
      commentId: F:JoshAaronMiller.INaturalist.OrderBy.ObservedOn
      language: CSharp
      name:
        CSharp: ObservedOn
        VB: ObservedOn
      nameWithType:
        CSharp: OrderBy.ObservedOn
        VB: OrderBy.ObservedOn
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.OrderBy.ObservedOn
        VB: JoshAaronMiller.INaturalist.OrderBy.ObservedOn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservedOn
        path: ''
        startLine: 570
      syntax:
        content:
          CSharp: ObservedOn = 1
          VB: ObservedOn = 1
        return:
          type: JoshAaronMiller.INaturalist.OrderBy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.OrderBy.SpeciesGuess
      commentId: F:JoshAaronMiller.INaturalist.OrderBy.SpeciesGuess
      language: CSharp
      name:
        CSharp: SpeciesGuess
        VB: SpeciesGuess
      nameWithType:
        CSharp: OrderBy.SpeciesGuess
        VB: OrderBy.SpeciesGuess
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.OrderBy.SpeciesGuess
        VB: JoshAaronMiller.INaturalist.OrderBy.SpeciesGuess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SpeciesGuess
        path: ''
        startLine: 570
      syntax:
        content:
          CSharp: SpeciesGuess = 2
          VB: SpeciesGuess = 2
        return:
          type: JoshAaronMiller.INaturalist.OrderBy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.OrderBy.Votes
      commentId: F:JoshAaronMiller.INaturalist.OrderBy.Votes
      language: CSharp
      name:
        CSharp: Votes
        VB: Votes
      nameWithType:
        CSharp: OrderBy.Votes
        VB: OrderBy.Votes
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.OrderBy.Votes
        VB: JoshAaronMiller.INaturalist.OrderBy.Votes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Votes
        path: ''
        startLine: 570
      syntax:
        content:
          CSharp: Votes = 3
          VB: Votes = 3
        return:
          type: JoshAaronMiller.INaturalist.OrderBy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.OrderBy.Id
      commentId: F:JoshAaronMiller.INaturalist.OrderBy.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: OrderBy.Id
        VB: OrderBy.Id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.OrderBy.Id
        VB: JoshAaronMiller.INaturalist.OrderBy.Id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Id
        path: ''
        startLine: 570
      syntax:
        content:
          CSharp: Id = 4
          VB: Id = 4
        return:
          type: JoshAaronMiller.INaturalist.OrderBy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.SortOrder
    commentId: T:JoshAaronMiller.INaturalist.SortOrder
    language: CSharp
    name:
      CSharp: SortOrder
      VB: SortOrder
    nameWithType:
      CSharp: SortOrder
      VB: SortOrder
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.SortOrder
      VB: JoshAaronMiller.INaturalist.SortOrder
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: SortOrder
      path: ''
      startLine: 573
    syntax:
      content:
        CSharp: public enum SortOrder
        VB: Public Enum SortOrder
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.SortOrder.Desc
      commentId: F:JoshAaronMiller.INaturalist.SortOrder.Desc
      language: CSharp
      name:
        CSharp: Desc
        VB: Desc
      nameWithType:
        CSharp: SortOrder.Desc
        VB: SortOrder.Desc
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SortOrder.Desc
        VB: JoshAaronMiller.INaturalist.SortOrder.Desc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Desc
        path: ''
        startLine: 575
      syntax:
        content:
          CSharp: Desc = 0
          VB: Desc = 0
        return:
          type: JoshAaronMiller.INaturalist.SortOrder
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SortOrder.Asc
      commentId: F:JoshAaronMiller.INaturalist.SortOrder.Asc
      language: CSharp
      name:
        CSharp: Asc
        VB: Asc
      nameWithType:
        CSharp: SortOrder.Asc
        VB: SortOrder.Asc
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SortOrder.Asc
        VB: JoshAaronMiller.INaturalist.SortOrder.Asc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Asc
        path: ''
        startLine: 575
      syntax:
        content:
          CSharp: Asc = 1
          VB: Asc = 1
        return:
          type: JoshAaronMiller.INaturalist.SortOrder
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.TaxonRankLevel
    commentId: T:JoshAaronMiller.INaturalist.TaxonRankLevel
    language: CSharp
    name:
      CSharp: TaxonRankLevel
      VB: TaxonRankLevel
    nameWithType:
      CSharp: TaxonRankLevel
      VB: TaxonRankLevel
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel
      VB: JoshAaronMiller.INaturalist.TaxonRankLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: TaxonRankLevel
      path: ''
      startLine: 578
    syntax:
      content:
        CSharp: public enum TaxonRankLevel
        VB: Public Enum TaxonRankLevel
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.None
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: TaxonRankLevel.None
        VB: TaxonRankLevel.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.None
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 580
      syntax:
        content:
          CSharp: None = -1
          VB: None = -1
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Subspecies
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Subspecies
      language: CSharp
      name:
        CSharp: Subspecies
        VB: Subspecies
      nameWithType:
        CSharp: TaxonRankLevel.Subspecies
        VB: TaxonRankLevel.Subspecies
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Subspecies
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Subspecies
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Subspecies
        path: ''
        startLine: 581
      syntax:
        content:
          CSharp: Subspecies = 5
          VB: Subspecies = 5
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Species
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Species
      language: CSharp
      name:
        CSharp: Species
        VB: Species
      nameWithType:
        CSharp: TaxonRankLevel.Species
        VB: TaxonRankLevel.Species
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Species
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Species
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Species
        path: ''
        startLine: 582
      syntax:
        content:
          CSharp: Species = 10
          VB: Species = 10
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Genus
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Genus
      language: CSharp
      name:
        CSharp: Genus
        VB: Genus
      nameWithType:
        CSharp: TaxonRankLevel.Genus
        VB: TaxonRankLevel.Genus
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Genus
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Genus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Genus
        path: ''
        startLine: 583
      syntax:
        content:
          CSharp: Genus = 20
          VB: Genus = 20
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Family
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Family
      language: CSharp
      name:
        CSharp: Family
        VB: Family
      nameWithType:
        CSharp: TaxonRankLevel.Family
        VB: TaxonRankLevel.Family
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Family
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Family
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Family
        path: ''
        startLine: 584
      syntax:
        content:
          CSharp: Family = 30
          VB: Family = 30
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Order
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Order
      language: CSharp
      name:
        CSharp: Order
        VB: Order
      nameWithType:
        CSharp: TaxonRankLevel.Order
        VB: TaxonRankLevel.Order
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Order
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Order
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Order
        path: ''
        startLine: 585
      syntax:
        content:
          CSharp: Order = 40
          VB: Order = 40
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Class
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Class
      language: CSharp
      name:
        CSharp: Class
        VB: Class
      nameWithType:
        CSharp: TaxonRankLevel.Class
        VB: TaxonRankLevel.Class
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Class
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Class
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Class
        path: ''
        startLine: 586
      syntax:
        content:
          CSharp: Class = 50
          VB: Class = 50
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Phylum
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Phylum
      language: CSharp
      name:
        CSharp: Phylum
        VB: Phylum
      nameWithType:
        CSharp: TaxonRankLevel.Phylum
        VB: TaxonRankLevel.Phylum
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Phylum
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Phylum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Phylum
        path: ''
        startLine: 587
      syntax:
        content:
          CSharp: Phylum = 60
          VB: Phylum = 60
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.TaxonRankLevel.Kingdom
      commentId: F:JoshAaronMiller.INaturalist.TaxonRankLevel.Kingdom
      language: CSharp
      name:
        CSharp: Kingdom
        VB: Kingdom
      nameWithType:
        CSharp: TaxonRankLevel.Kingdom
        VB: TaxonRankLevel.Kingdom
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonRankLevel.Kingdom
        VB: JoshAaronMiller.INaturalist.TaxonRankLevel.Kingdom
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Kingdom
        path: ''
        startLine: 588
      syntax:
        content:
          CSharp: Kingdom = 70
          VB: Kingdom = 70
        return:
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.Enums
    commentId: T:JoshAaronMiller.INaturalist.Enums
    language: CSharp
    name:
      CSharp: Enums
      VB: Enums
    nameWithType:
      CSharp: Enums
      VB: Enums
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Enums
      VB: JoshAaronMiller.INaturalist.Enums
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Enums
      path: ''
      startLine: 591
    syntax:
      content:
        CSharp: public static class Enums
        VB: Public Module Enums
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: JoshAaronMiller.INaturalist.Enums.QualityToString
      commentId: F:JoshAaronMiller.INaturalist.Enums.QualityToString
      language: CSharp
      name:
        CSharp: QualityToString
        VB: QualityToString
      nameWithType:
        CSharp: Enums.QualityToString
        VB: Enums.QualityToString
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Enums.QualityToString
        VB: JoshAaronMiller.INaturalist.Enums.QualityToString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: QualityToString
        path: ''
        startLine: 594
      syntax:
        content:
          CSharp: public static Dictionary<QualityGrade, string> QualityToString
          VB: Public Shared QualityToString As Dictionary(Of QualityGrade, String)
        return:
          type: System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.QualityGrade,System.String}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: JoshAaronMiller.INaturalist.Enums.OrderByToString
      commentId: F:JoshAaronMiller.INaturalist.Enums.OrderByToString
      language: CSharp
      name:
        CSharp: OrderByToString
        VB: OrderByToString
      nameWithType:
        CSharp: Enums.OrderByToString
        VB: Enums.OrderByToString
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Enums.OrderByToString
        VB: JoshAaronMiller.INaturalist.Enums.OrderByToString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: OrderByToString
        path: ''
        startLine: 602
      syntax:
        content:
          CSharp: public static Dictionary<OrderBy, string> OrderByToString
          VB: Public Shared OrderByToString As Dictionary(Of OrderBy, String)
        return:
          type: System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.OrderBy,System.String}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: JoshAaronMiller.INaturalist.INatManager
    commentId: T:JoshAaronMiller.INaturalist.INatManager
    language: CSharp
    name:
      CSharp: INatManager
      VB: INatManager
    nameWithType:
      CSharp: INatManager
      VB: INatManager
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.INatManager
      VB: JoshAaronMiller.INaturalist.INatManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: INatManager
      path: ''
      startLine: 629
    summary: "\nThe INatManager handles direct requests to the iNaturalist API.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class INatManager : MonoBehaviour'
        VB: >-
          Public Class INatManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.INatManager.BaseUrl
      commentId: F:JoshAaronMiller.INaturalist.INatManager.BaseUrl
      language: CSharp
      name:
        CSharp: BaseUrl
        VB: BaseUrl
      nameWithType:
        CSharp: INatManager.BaseUrl
        VB: INatManager.BaseUrl
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.BaseUrl
        VB: JoshAaronMiller.INaturalist.INatManager.BaseUrl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: BaseUrl
        path: ''
        startLine: 631
      syntax:
        content:
          CSharp: public static readonly string BaseUrl
          VB: Public Shared ReadOnly BaseUrl As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: JoshAaronMiller.INaturalist.INatManager.ApiTokenUrl
      commentId: F:JoshAaronMiller.INaturalist.INatManager.ApiTokenUrl
      language: CSharp
      name:
        CSharp: ApiTokenUrl
        VB: ApiTokenUrl
      nameWithType:
        CSharp: INatManager.ApiTokenUrl
        VB: INatManager.ApiTokenUrl
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.ApiTokenUrl
        VB: JoshAaronMiller.INaturalist.INatManager.ApiTokenUrl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ApiTokenUrl
        path: ''
        startLine: 632
      syntax:
        content:
          CSharp: public static readonly string ApiTokenUrl
          VB: Public Shared ReadOnly ApiTokenUrl As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: JoshAaronMiller.INaturalist.INatManager.GetApiToken
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetApiToken
      language: CSharp
      name:
        CSharp: GetApiToken()
        VB: GetApiToken()
      nameWithType:
        CSharp: INatManager.GetApiToken()
        VB: INatManager.GetApiToken()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetApiToken()
        VB: JoshAaronMiller.INaturalist.INatManager.GetApiToken()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetApiToken
        path: ''
        startLine: 866
      syntax:
        content:
          CSharp: public void GetApiToken()
          VB: Public Sub GetApiToken
      overload: JoshAaronMiller.INaturalist.INatManager.GetApiToken*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.SetApiToken(System.String)
      commentId: M:JoshAaronMiller.INaturalist.INatManager.SetApiToken(System.String)
      language: CSharp
      name:
        CSharp: SetApiToken(String)
        VB: SetApiToken(String)
      nameWithType:
        CSharp: INatManager.SetApiToken(String)
        VB: INatManager.SetApiToken(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.SetApiToken(System.String)
        VB: JoshAaronMiller.INaturalist.INatManager.SetApiToken(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetApiToken
        path: ''
        startLine: 871
      syntax:
        content:
          CSharp: public void SetApiToken(string token)
          VB: Public Sub SetApiToken(token As String)
        parameters:
        - id: token
          type: System.String
      overload: JoshAaronMiller.INaturalist.INatManager.SetApiToken*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex(Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetTermsIndex(Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetTermsIndex(Action<Results<ControlledTerm>>, Action<Error>)
        VB: GetTermsIndex(Action(Of Results(Of ControlledTerm)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetTermsIndex(Action<Results<ControlledTerm>>, Action<Error>)
        VB: INatManager.GetTermsIndex(Action(Of Results(Of ControlledTerm)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex(Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.ControlledTerm>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex(Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.ControlledTerm)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetTermsIndex
        path: ''
        startLine: 901
      summary: "\nFetch a list of all attribute controlled terms as a List of ControlledTerms.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetTermsIndex(Action<Results<ControlledTerm>> callback, Action<Error> errorCallback)
          VB: Public Sub GetTermsIndex(callback As Action(Of Results(Of ControlledTerm)), errorCallback As Action(Of  Error))
        parameters:
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}}
          description: A function to callback when the request is done which takes as input the Results list of Controlled Terms created.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon(System.Int32,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon(System.Int32,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetTermsForTaxon(Int32, Action<Results<ControlledTerm>>, Action<Error>)
        VB: GetTermsForTaxon(Int32, Action(Of Results(Of ControlledTerm)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetTermsForTaxon(Int32, Action<Results<ControlledTerm>>, Action<Error>)
        VB: INatManager.GetTermsForTaxon(Int32, Action(Of Results(Of ControlledTerm)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon(System.Int32, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.ControlledTerm>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon(System.Int32, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.ControlledTerm)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetTermsForTaxon
        path: ''
        startLine: 913
      summary: "\nFetch a list of all attribute controlled terms relevant to a taxon as a List of ControlledTerms.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetTermsForTaxon(int taxonId, Action<Results<ControlledTerm>> callback, Action<Error> errorCallback)
          VB: Public Sub GetTermsForTaxon(taxonId As Integer, callback As Action(Of Results(Of ControlledTerm)), errorCallback As Action(Of  Error))
        parameters:
        - id: taxonId
          type: System.Int32
          description: The ID of the Taxon.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}}
          description: A function to callback when the request is done which takes as input the Results list of Controlled Terms created.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.CreateFlag(JoshAaronMiller.INaturalist.WrappedFlag,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.CreateFlag(JoshAaronMiller.INaturalist.WrappedFlag,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: CreateFlag(WrappedFlag, Action<Identification>, Action<Error>)
        VB: CreateFlag(WrappedFlag, Action(Of Identification), Action(Of Error))
      nameWithType:
        CSharp: INatManager.CreateFlag(WrappedFlag, Action<Identification>, Action<Error>)
        VB: INatManager.CreateFlag(WrappedFlag, Action(Of Identification), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.CreateFlag(JoshAaronMiller.INaturalist.WrappedFlag, Action<JoshAaronMiller.INaturalist.Identification>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.CreateFlag(JoshAaronMiller.INaturalist.WrappedFlag, Action(Of JoshAaronMiller.INaturalist.Identification), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreateFlag
        path: ''
        startLine: 929
      summary: "\nSubmit a Flag.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateFlag(WrappedFlag flag, Action<Identification> callback, Action<Error> errorCallback)
          VB: Public Sub CreateFlag(flag As WrappedFlag, callback As Action(Of Identification), errorCallback As Action(Of  Error))
        parameters:
        - id: flag
          type: JoshAaronMiller.INaturalist.WrappedFlag
          description: The parameters of the flag.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Identification}
          description: A function to callback when the request is done which takes as input the Flag created.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.CreateFlag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.DeleteFlag(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.DeleteFlag(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: DeleteFlag(Int32, Action, Action<Error>)
        VB: DeleteFlag(Int32, Action, Action(Of Error))
      nameWithType:
        CSharp: INatManager.DeleteFlag(Int32, Action, Action<Error>)
        VB: INatManager.DeleteFlag(Int32, Action, Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.DeleteFlag(System.Int32, Action, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.DeleteFlag(System.Int32, Action, Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: DeleteFlag
        path: ''
        startLine: 942
      summary: "\nDelete a Flag.\n"
      example: []
      syntax:
        content:
          CSharp: public void DeleteFlag(int flagId, Action callback, Action<Error> errorCallback)
          VB: Public Sub DeleteFlag(flagId As Integer, callback As Action, errorCallback As Action(Of  Error))
        parameters:
        - id: flagId
          type: System.Int32
          description: The ID of the flag.
        - id: callback
          type: Global.Action
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.DeleteFlag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.UpdateFlag(System.Int32,JoshAaronMiller.INaturalist.WrappedFlag,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.UpdateFlag(System.Int32,JoshAaronMiller.INaturalist.WrappedFlag,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: UpdateFlag(Int32, WrappedFlag, Action<Identification>, Action<Error>)
        VB: UpdateFlag(Int32, WrappedFlag, Action(Of Identification), Action(Of Error))
      nameWithType:
        CSharp: INatManager.UpdateFlag(Int32, WrappedFlag, Action<Identification>, Action<Error>)
        VB: INatManager.UpdateFlag(Int32, WrappedFlag, Action(Of Identification), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.UpdateFlag(System.Int32, JoshAaronMiller.INaturalist.WrappedFlag, Action<JoshAaronMiller.INaturalist.Identification>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.UpdateFlag(System.Int32, JoshAaronMiller.INaturalist.WrappedFlag, Action(Of JoshAaronMiller.INaturalist.Identification), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UpdateFlag
        path: ''
        startLine: 955
      summary: "\nUpdate a Flag.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateFlag(int flagId, WrappedFlag flag, Action<Identification> callback, Action<Error> errorCallback)
          VB: Public Sub UpdateFlag(flagId As Integer, flag As WrappedFlag, callback As Action(Of Identification), errorCallback As Action(Of  Error))
        parameters:
        - id: flagId
          type: System.Int32
          description: The ID of the flag.
        - id: flag
          type: JoshAaronMiller.INaturalist.WrappedFlag
          description: The parameters of the flag.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Identification}
          description: A function to callback when the request is done which takes as input the Flag updated.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.UpdateFlag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification(System.Int32,Action{System.String},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.DeleteIdentification(System.Int32,Action{System.String},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: DeleteIdentification(Int32, Action<String>, Action<Error>)
        VB: DeleteIdentification(Int32, Action(Of String), Action(Of Error))
      nameWithType:
        CSharp: INatManager.DeleteIdentification(Int32, Action<String>, Action<Error>)
        VB: INatManager.DeleteIdentification(Int32, Action(Of String), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification(System.Int32, Action<System.String>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification(System.Int32, Action(Of System.String), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: DeleteIdentification
        path: ''
        startLine: 973
      summary: "\nDelete an Identification.\n"
      example: []
      syntax:
        content:
          CSharp: public void DeleteIdentification(int identId, Action<string> callback, Action<Error> errorCallback)
          VB: Public Sub DeleteIdentification(identId As Integer, callback As Action(Of String), errorCallback As Action(Of  Error))
        parameters:
        - id: identId
          type: System.Int32
          description: The ID of the Identification.
        - id: callback
          type: Global.Action{System.String}
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetIdentifications(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetIdentifications(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetIdentifications(List<Int32>, Action<Results<Identification>>, Action<Error>)
        VB: GetIdentifications(List(Of Int32), Action(Of Results(Of Identification)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetIdentifications(List<Int32>, Action<Results<Identification>>, Action<Error>)
        VB: INatManager.GetIdentifications(List(Of Int32), Action(Of Results(Of Identification)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetIdentifications(System.Collections.Generic.List<System.Int32>, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Identification>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetIdentifications(System.Collections.Generic.List(Of System.Int32), Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Identification)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetIdentifications
        path: ''
        startLine: 985
      summary: "\nGiven an array of IDs, returns corresponding Identifications \n"
      example: []
      syntax:
        content:
          CSharp: public void GetIdentifications(List<int> identIds, Action<Results<Identification>> callback, Action<Error> errorCallback)
          VB: Public Sub GetIdentifications(identIds As List(Of Integer), callback As Action(Of Results(Of Identification)), errorCallback As Action(Of  Error))
        parameters:
        - id: identIds
          type: System.Collections.Generic.List{System.Int32}
          description: The list of identification IDs to fetch
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}}
          description: A function to callback when the request is done which takes as input the Results list of Identification objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetIdentifications*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetIdentification(System.Int32,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetIdentification(System.Int32,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetIdentification(Int32, Action<Identification>, Action<Error>)
        VB: GetIdentification(Int32, Action(Of Identification), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetIdentification(Int32, Action<Identification>, Action<Error>)
        VB: INatManager.GetIdentification(Int32, Action(Of Identification), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetIdentification(System.Int32, Action<JoshAaronMiller.INaturalist.Identification>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetIdentification(System.Int32, Action(Of JoshAaronMiller.INaturalist.Identification), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetIdentification
        path: ''
        startLine: 998
      summary: "\nGiven an ID, returns corresponding Identifications \n"
      example: []
      syntax:
        content:
          CSharp: public void GetIdentification(int identId, Action<Identification> callback, Action<Error> errorCallback)
          VB: Public Sub GetIdentification(identId As Integer, callback As Action(Of Identification), errorCallback As Action(Of  Error))
        parameters:
        - id: identId
          type: System.Int32
          description: The identification ID to fetch
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Identification}
          description: A function to callback when the request is done which takes as input the Identification object found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetIdentification*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification(System.Int32,JoshAaronMiller.INaturalist.IdentificationSubmission,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.UpdateIdentification(System.Int32,JoshAaronMiller.INaturalist.IdentificationSubmission,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: UpdateIdentification(Int32, IdentificationSubmission, Action<Identification>, Action<Error>)
        VB: UpdateIdentification(Int32, IdentificationSubmission, Action(Of Identification), Action(Of Error))
      nameWithType:
        CSharp: INatManager.UpdateIdentification(Int32, IdentificationSubmission, Action<Identification>, Action<Error>)
        VB: INatManager.UpdateIdentification(Int32, IdentificationSubmission, Action(Of Identification), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification(System.Int32, JoshAaronMiller.INaturalist.IdentificationSubmission, Action<JoshAaronMiller.INaturalist.Identification>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification(System.Int32, JoshAaronMiller.INaturalist.IdentificationSubmission, Action(Of JoshAaronMiller.INaturalist.Identification), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UpdateIdentification
        path: ''
        startLine: 1012
      summary: "\nUpdate an Identification\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateIdentification(int identId, IdentificationSubmission identSub, Action<Identification> callback, Action<Error> errorCallback)
          VB: Public Sub UpdateIdentification(identId As Integer, identSub As IdentificationSubmission, callback As Action(Of Identification), errorCallback As Action(Of  Error))
        parameters:
        - id: identId
          type: System.Int32
          description: The identification ID to update
        - id: identSub
          type: JoshAaronMiller.INaturalist.IdentificationSubmission
          description: The updated information for the identification.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Identification}
          description: A function to callback when the request is done which takes as input the Identification object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications(JoshAaronMiller.INaturalist.IdentificationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.SearchIdentifications(JoshAaronMiller.INaturalist.IdentificationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: SearchIdentifications(IdentificationSearch, Action<Results<Identification>>, Action<Error>)
        VB: SearchIdentifications(IdentificationSearch, Action(Of Results(Of Identification)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.SearchIdentifications(IdentificationSearch, Action<Results<Identification>>, Action<Error>)
        VB: INatManager.SearchIdentifications(IdentificationSearch, Action(Of Results(Of Identification)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications(JoshAaronMiller.INaturalist.IdentificationSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Identification>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications(JoshAaronMiller.INaturalist.IdentificationSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Identification)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SearchIdentifications
        path: ''
        startLine: 1028
      summary: "\nGiven an IdentificationSearch object, returns a list of matching Identifications\n"
      example: []
      syntax:
        content:
          CSharp: public void SearchIdentifications(IdentificationSearch identSearch, Action<Results<Identification>> callback, Action<Error> errorCallback)
          VB: Public Sub SearchIdentifications(identSearch As IdentificationSearch, callback As Action(Of Results(Of Identification)), errorCallback As Action(Of  Error))
        parameters:
        - id: identSearch
          type: JoshAaronMiller.INaturalist.IdentificationSearch
          description: An IdentificationSearch object holding the parameters of the search
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}}
          description: A function to callback when the request is done which takes as input the Results list of Identification objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.CreateIdentification(JoshAaronMiller.INaturalist.IdentificationSubmission,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.CreateIdentification(JoshAaronMiller.INaturalist.IdentificationSubmission,Action{JoshAaronMiller.INaturalist.Identification},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: CreateIdentification(IdentificationSubmission, Action<Identification>, Action<Error>)
        VB: CreateIdentification(IdentificationSubmission, Action(Of Identification), Action(Of Error))
      nameWithType:
        CSharp: INatManager.CreateIdentification(IdentificationSubmission, Action<Identification>, Action<Error>)
        VB: INatManager.CreateIdentification(IdentificationSubmission, Action(Of Identification), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.CreateIdentification(JoshAaronMiller.INaturalist.IdentificationSubmission, Action<JoshAaronMiller.INaturalist.Identification>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.CreateIdentification(JoshAaronMiller.INaturalist.IdentificationSubmission, Action(Of JoshAaronMiller.INaturalist.Identification), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreateIdentification
        path: ''
        startLine: 1042
      summary: "\nSubmit an Identification.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateIdentification(IdentificationSubmission identSub, Action<Identification> callback, Action<Error> errorCallback)
          VB: Public Sub CreateIdentification(identSub As IdentificationSubmission, callback As Action(Of Identification), errorCallback As Action(Of  Error))
        parameters:
        - id: identSub
          type: JoshAaronMiller.INaturalist.IdentificationSubmission
          description: The parameters of the Identification. Requires at minimum observation ID and taxon ID.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Identification}
          description: A function to callback when the request is done which takes as input the Identification created.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.CreateIdentification*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories(JoshAaronMiller.INaturalist.IdentificationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.IdentificationCategoryCount}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories(JoshAaronMiller.INaturalist.IdentificationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.IdentificationCategoryCount}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetIdentificationCategories(IdentificationSearch, Action<Results<IdentificationCategoryCount>>, Action<Error>)
        VB: GetIdentificationCategories(IdentificationSearch, Action(Of Results(Of IdentificationCategoryCount)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetIdentificationCategories(IdentificationSearch, Action<Results<IdentificationCategoryCount>>, Action<Error>)
        VB: INatManager.GetIdentificationCategories(IdentificationSearch, Action(Of Results(Of IdentificationCategoryCount)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories(JoshAaronMiller.INaturalist.IdentificationSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.IdentificationCategoryCount>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories(JoshAaronMiller.INaturalist.IdentificationSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.IdentificationCategoryCount)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetIdentificationCategories
        path: ''
        startLine: 1057
      summary: "\nGiven an IdentificationSearch object, returns the counts of how many identifications matching the search have a particular category.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetIdentificationCategories(IdentificationSearch identSearch, Action<Results<IdentificationCategoryCount>> callback, Action<Error> errorCallback)
          VB: Public Sub GetIdentificationCategories(identSearch As IdentificationSearch, callback As Action(Of Results(Of IdentificationCategoryCount)), errorCallback As Action(Of  Error))
        parameters:
        - id: identSearch
          type: JoshAaronMiller.INaturalist.IdentificationSearch
          description: An IdentificationSearch object holding the parameters of the search.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.IdentificationCategoryCount}}
          description: A function to callback when the request is done which takes as input the Results list of IdentificationCategoryCount objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts(JoshAaronMiller.INaturalist.IdentificationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts(JoshAaronMiller.INaturalist.IdentificationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetIdentificationSpeciesCounts(IdentificationSearch, Action<Results<SpeciesCount>>, Action<Error>)
        VB: GetIdentificationSpeciesCounts(IdentificationSearch, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetIdentificationSpeciesCounts(IdentificationSearch, Action<Results<SpeciesCount>>, Action<Error>)
        VB: INatManager.GetIdentificationSpeciesCounts(IdentificationSearch, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts(JoshAaronMiller.INaturalist.IdentificationSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.SpeciesCount>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts(JoshAaronMiller.INaturalist.IdentificationSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.SpeciesCount)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetIdentificationSpeciesCounts
        path: ''
        startLine: 1069
      summary: "\nGiven an IdentificationSearch object, returns the counts of how many identifications matching the search have a particular leaf taxon.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetIdentificationSpeciesCounts(IdentificationSearch identSearch, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback)
          VB: Public Sub GetIdentificationSpeciesCounts(identSearch As IdentificationSearch, callback As Action(Of Results(Of SpeciesCount)), errorCallback As Action(Of  Error))
        parameters:
        - id: identSearch
          type: JoshAaronMiller.INaturalist.IdentificationSearch
          description: An IdentificationSearch object holding the parameters of the search.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}}
          description: A function to callback when the request is done which takes as input the Results list of SpeciesCount objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetSimilarSpecies(Int32, Action<Results<SpeciesCount>>, Action<Error>)
        VB: GetSimilarSpecies(Int32, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetSimilarSpecies(Int32, Action<Results<SpeciesCount>>, Action<Error>)
        VB: INatManager.GetSimilarSpecies(Int32, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.SpeciesCount>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.SpeciesCount)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetSimilarSpecies
        path: ''
        startLine: 1091
      summary: "\nGiven a Taxon ID, return similar taxa and counts of co-occurrence.\n"
      remarks: "\nThe definition of &quot;similar taxa&quot; is operationalized by finding all observations of this taxon or identified as this taxon,\nthen taking the identifications of those observations and counting frequencies of identifications of other taxa.\nIn short, this returns a list mapping taxa to how many times they co-occurred with the searched taxon.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetSimilarSpecies(int taxonId, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback)
          VB: Public Sub GetSimilarSpecies(taxonId As Integer, callback As Action(Of Results(Of SpeciesCount)), errorCallback As Action(Of  Error))
        parameters:
        - id: taxonId
          type: System.Int32
          description: The ID of the taxon to find similar taxa to.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}}
          description: A function to callback when the request is done which takes as input the Results list of SpeciesCount objects representing the results.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32,JoshAaronMiller.INaturalist.ObservationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32,JoshAaronMiller.INaturalist.ObservationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetSimilarSpecies(Int32, ObservationSearch, Action<Results<SpeciesCount>>, Action<Error>)
        VB: GetSimilarSpecies(Int32, ObservationSearch, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetSimilarSpecies(Int32, ObservationSearch, Action<Results<SpeciesCount>>, Action<Error>)
        VB: INatManager.GetSimilarSpecies(Int32, ObservationSearch, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32, JoshAaronMiller.INaturalist.ObservationSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.SpeciesCount>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies(System.Int32, JoshAaronMiller.INaturalist.ObservationSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.SpeciesCount)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetSimilarSpecies
        path: ''
        startLine: 1109
      summary: "\nGiven a Taxon ID, return similar taxa and counts of co-occurrence.\n"
      remarks: "\nThe definition of &quot;similar taxa&quot; is operationalized by finding all observations of this taxon or identified as this taxon,\nthen taking the identifications of those observations and counting frequencies of identifications of other taxa.\nIn short, this returns a list mapping taxa to how many times they co-occurred with the searched taxon.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetSimilarSpecies(int taxonId, ObservationSearch obsSearch, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback)
          VB: Public Sub GetSimilarSpecies(taxonId As Integer, obsSearch As ObservationSearch, callback As Action(Of Results(Of SpeciesCount)), errorCallback As Action(Of  Error))
        parameters:
        - id: taxonId
          type: System.Int32
          description: The ID of the taxon to find similar taxa to.
        - id: obsSearch
          type: JoshAaronMiller.INaturalist.ObservationSearch
          description: Additional parameters to refine the search, limiting what observations can be included.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}}
          description: A function to callback when the request is done which takes as input the Results list of SpeciesCount objects representing the results.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages(JoshAaronMiller.INaturalist.MessageSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.SearchUserMessages(JoshAaronMiller.INaturalist.MessageSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: SearchUserMessages(MessageSearch, Action<Results<UserMessage>>, Action<Error>)
        VB: SearchUserMessages(MessageSearch, Action(Of Results(Of UserMessage)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.SearchUserMessages(MessageSearch, Action<Results<UserMessage>>, Action<Error>)
        VB: INatManager.SearchUserMessages(MessageSearch, Action(Of Results(Of UserMessage)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages(JoshAaronMiller.INaturalist.MessageSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.UserMessage>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages(JoshAaronMiller.INaturalist.MessageSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.UserMessage)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SearchUserMessages
        path: ''
        startLine: 1128
      summary: "\nGiven a MessageSearch object, returns a list of matching user messages\n"
      remarks: "\nThis function does not mark these messages as read. See GetUserMessageThread.\n"
      example: []
      syntax:
        content:
          CSharp: public void SearchUserMessages(MessageSearch messageSearch, Action<Results<UserMessage>> callback, Action<Error> errorCallback)
          VB: Public Sub SearchUserMessages(messageSearch As MessageSearch, callback As Action(Of Results(Of UserMessage)), errorCallback As Action(Of  Error))
        parameters:
        - id: messageSearch
          type: JoshAaronMiller.INaturalist.MessageSearch
          description: A MessageSearch object holding the parameters of the search
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}}
          description: A function to callback when the request is done which takes as input the Results list of Message objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage(JoshAaronMiller.INaturalist.UserMessage,Action{JoshAaronMiller.INaturalist.UserMessage},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.CreateUserMessage(JoshAaronMiller.INaturalist.UserMessage,Action{JoshAaronMiller.INaturalist.UserMessage},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: CreateUserMessage(UserMessage, Action<UserMessage>, Action<Error>)
        VB: CreateUserMessage(UserMessage, Action(Of UserMessage), Action(Of Error))
      nameWithType:
        CSharp: INatManager.CreateUserMessage(UserMessage, Action<UserMessage>, Action<Error>)
        VB: INatManager.CreateUserMessage(UserMessage, Action(Of UserMessage), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage(JoshAaronMiller.INaturalist.UserMessage, Action<JoshAaronMiller.INaturalist.UserMessage>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage(JoshAaronMiller.INaturalist.UserMessage, Action(Of JoshAaronMiller.INaturalist.UserMessage), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreateUserMessage
        path: ''
        startLine: 1140
      summary: "\nSend a private message.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateUserMessage(UserMessage newMessage, Action<UserMessage> callback, Action<Error> errorCallback)
          VB: Public Sub CreateUserMessage(newMessage As UserMessage, callback As Action(Of UserMessage), errorCallback As Action(Of  Error))
        parameters:
        - id: newMessage
          type: JoshAaronMiller.INaturalist.UserMessage
          description: The message to be sent.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.UserMessage}
          description: A function to callback when the request is done which takes as input the new Message created.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: DeleteUserMessageThread(Int32, Action, Action<Error>)
        VB: DeleteUserMessageThread(Int32, Action, Action(Of Error))
      nameWithType:
        CSharp: INatManager.DeleteUserMessageThread(Int32, Action, Action<Error>)
        VB: INatManager.DeleteUserMessageThread(Int32, Action, Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread(System.Int32, Action, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread(System.Int32, Action, Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: DeleteUserMessageThread
        path: ''
        startLine: 1153
      summary: "\nDelete all messages in a message thread.\n"
      example: []
      syntax:
        content:
          CSharp: public void DeleteUserMessageThread(int threadId, Action callback, Action<Error> errorCallback)
          VB: Public Sub DeleteUserMessageThread(threadId As Integer, callback As Action, errorCallback As Action(Of  Error))
        parameters:
        - id: threadId
          type: System.Int32
          description: The thread to delete.
        - id: callback
          type: Global.Action
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread(System.Int32,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread(System.Int32,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetUserMessageThread(Int32, Action<Results<UserMessage>>, Action<Error>)
        VB: GetUserMessageThread(Int32, Action(Of Results(Of UserMessage)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetUserMessageThread(Int32, Action<Results<UserMessage>>, Action<Error>)
        VB: INatManager.GetUserMessageThread(Int32, Action(Of Results(Of UserMessage)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread(System.Int32, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.UserMessage>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread(System.Int32, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.UserMessage)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetUserMessageThread
        path: ''
        startLine: 1165
      summary: "\nRetrieves all messages in the specified thread and marks them all as read.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetUserMessageThread(int threadId, Action<Results<UserMessage>> callback, Action<Error> errorCallback)
          VB: Public Sub GetUserMessageThread(threadId As Integer, callback As Action(Of Results(Of UserMessage)), errorCallback As Action(Of  Error))
        parameters:
        - id: threadId
          type: System.Int32
          description: The thread to fetch.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}}
          description: A function to callback when the request is done which takes as input the thread fetched as a Results list of UserMessages.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages(Action{JoshAaronMiller.INaturalist.Count},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages(Action{JoshAaronMiller.INaturalist.Count},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetCountUnreadMessages(Action<Count>, Action<Error>)
        VB: GetCountUnreadMessages(Action(Of Count), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetCountUnreadMessages(Action<Count>, Action<Error>)
        VB: INatManager.GetCountUnreadMessages(Action(Of Count), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages(Action<JoshAaronMiller.INaturalist.Count>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages(Action(Of JoshAaronMiller.INaturalist.Count), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetCountUnreadMessages
        path: ''
        startLine: 1177
      summary: "\nReturns a Count of unread messages in the authenticated user&apos;s inbox.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetCountUnreadMessages(Action<Count> callback, Action<Error> errorCallback)
          VB: Public Sub GetCountUnreadMessages(callback As Action(Of Count), errorCallback As Action(Of  Error))
        parameters:
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Count}
          description: A function to callback when the request is done which takes as input the Count of unread messages.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: DeleteObservationPhoto(Int32, Action, Action<Error>)
        VB: DeleteObservationPhoto(Int32, Action, Action(Of Error))
      nameWithType:
        CSharp: INatManager.DeleteObservationPhoto(Int32, Action, Action<Error>)
        VB: INatManager.DeleteObservationPhoto(Int32, Action, Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto(System.Int32, Action, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto(System.Int32, Action, Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: DeleteObservationPhoto
        path: ''
        startLine: 1201
      summary: "\nDelete an observation photo.\n"
      example: []
      syntax:
        content:
          CSharp: public void DeleteObservationPhoto(int obsPhotoId, Action callback, Action<Error> errorCallback)
          VB: Public Sub DeleteObservationPhoto(obsPhotoId As Integer, callback As Action, errorCallback As Action(Of  Error))
        parameters:
        - id: obsPhotoId
          type: System.Int32
          description: The observation photo to delete.
        - id: callback
          type: Global.Action
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto(System.Int32,System.Int32,JoshAaronMiller.INaturalist.PhotoFile,Action{JoshAaronMiller.INaturalist.ObservationPhoto},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto(System.Int32,System.Int32,JoshAaronMiller.INaturalist.PhotoFile,Action{JoshAaronMiller.INaturalist.ObservationPhoto},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: UpdateObservationPhoto(Int32, Int32, PhotoFile, Action<ObservationPhoto>, Action<Error>)
        VB: UpdateObservationPhoto(Int32, Int32, PhotoFile, Action(Of ObservationPhoto), Action(Of Error))
      nameWithType:
        CSharp: INatManager.UpdateObservationPhoto(Int32, Int32, PhotoFile, Action<ObservationPhoto>, Action<Error>)
        VB: INatManager.UpdateObservationPhoto(Int32, Int32, PhotoFile, Action(Of ObservationPhoto), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto(System.Int32, System.Int32, JoshAaronMiller.INaturalist.PhotoFile, Action<JoshAaronMiller.INaturalist.ObservationPhoto>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto(System.Int32, System.Int32, JoshAaronMiller.INaturalist.PhotoFile, Action(Of JoshAaronMiller.INaturalist.ObservationPhoto), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UpdateObservationPhoto
        path: ''
        startLine: 1217
      summary: "\nUpdate an Observation Photo.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateObservationPhoto(int obsPhotoId, int position, PhotoFile photo, Action<ObservationPhoto> callback, Action<Error> errorCallback)
          VB: Public Sub UpdateObservationPhoto(obsPhotoId As Integer, position As Integer, photo As PhotoFile, callback As Action(Of ObservationPhoto), errorCallback As Action(Of  Error))
        parameters:
        - id: obsPhotoId
          type: System.Int32
          description: The Observation Photo ID to update
        - id: position
          type: System.Int32
          description: The position in which the photo is displayed for the observation.
        - id: photo
          type: JoshAaronMiller.INaturalist.PhotoFile
          description: The Photo to upload.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.ObservationPhoto}
          description: A function to callback when the request is done which takes as input the Observation Photo object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto(System.Int32,System.String,JoshAaronMiller.INaturalist.PhotoFile,Action{JoshAaronMiller.INaturalist.ObservationPhoto},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto(System.Int32,System.String,JoshAaronMiller.INaturalist.PhotoFile,Action{JoshAaronMiller.INaturalist.ObservationPhoto},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: CreateObservationPhoto(Int32, String, PhotoFile, Action<ObservationPhoto>, Action<Error>)
        VB: CreateObservationPhoto(Int32, String, PhotoFile, Action(Of ObservationPhoto), Action(Of Error))
      nameWithType:
        CSharp: INatManager.CreateObservationPhoto(Int32, String, PhotoFile, Action<ObservationPhoto>, Action<Error>)
        VB: INatManager.CreateObservationPhoto(Int32, String, PhotoFile, Action(Of ObservationPhoto), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto(System.Int32, System.String, JoshAaronMiller.INaturalist.PhotoFile, Action<JoshAaronMiller.INaturalist.ObservationPhoto>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto(System.Int32, System.String, JoshAaronMiller.INaturalist.PhotoFile, Action(Of JoshAaronMiller.INaturalist.ObservationPhoto), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreateObservationPhoto
        path: ''
        startLine: 1235
      summary: "\nCreate an Observation Photo.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateObservationPhoto(int obsId, string obsUuid, PhotoFile photo, Action<ObservationPhoto> callback, Action<Error> errorCallback)
          VB: Public Sub CreateObservationPhoto(obsId As Integer, obsUuid As String, photo As PhotoFile, callback As Action(Of ObservationPhoto), errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID to add the photo to
        - id: obsUuid
          type: System.String
          description: The UUID of the observation.
        - id: photo
          type: JoshAaronMiller.INaturalist.PhotoFile
          description: The Photo to upload.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.ObservationPhoto}
          description: A function to callback when the request is done which takes as input the Observation Photo object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.DeleteObservation(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.DeleteObservation(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: DeleteObservation(Int32, Action, Action<Error>)
        VB: DeleteObservation(Int32, Action, Action(Of Error))
      nameWithType:
        CSharp: INatManager.DeleteObservation(Int32, Action, Action<Error>)
        VB: INatManager.DeleteObservation(Int32, Action, Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.DeleteObservation(System.Int32, Action, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.DeleteObservation(System.Int32, Action, Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: DeleteObservation
        path: ''
        startLine: 1256
      summary: "\nDelete an Observation.\n"
      example: []
      syntax:
        content:
          CSharp: public void DeleteObservation(int obsId, Action callback, Action<Error> errorCallback)
          VB: Public Sub DeleteObservation(obsId As Integer, callback As Action, errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The ID of the Observation.
        - id: callback
          type: Global.Action
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.DeleteObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetObservations(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetObservations(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetObservations(List<Int32>, Action<Results<Observation>>, Action<Error>)
        VB: GetObservations(List(Of Int32), Action(Of Results(Of Observation)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetObservations(List<Int32>, Action<Results<Observation>>, Action<Error>)
        VB: INatManager.GetObservations(List(Of Int32), Action(Of Results(Of Observation)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetObservations(System.Collections.Generic.List<System.Int32>, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Observation>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetObservations(System.Collections.Generic.List(Of System.Int32), Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Observation)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetObservations
        path: ''
        startLine: 1268
      summary: "\nGiven an array of IDs, returns corresponding observations \n"
      example: []
      syntax:
        content:
          CSharp: public void GetObservations(List<int> ids, Action<Results<Observation>> callback, Action<Error> errorCallback)
          VB: Public Sub GetObservations(ids As List(Of Integer), callback As Action(Of Results(Of Observation)), errorCallback As Action(Of  Error))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: The list of observation IDs to fetch
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}}
          description: A function to callback when the request is done which takes as input the Results list of Observation objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetObservations*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetObservation(System.Int32,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetObservation(System.Int32,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetObservation(Int32, Action<Observation>, Action<Error>)
        VB: GetObservation(Int32, Action(Of Observation), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetObservation(Int32, Action<Observation>, Action<Error>)
        VB: INatManager.GetObservation(Int32, Action(Of Observation), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetObservation(System.Int32, Action<JoshAaronMiller.INaturalist.Observation>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetObservation(System.Int32, Action(Of JoshAaronMiller.INaturalist.Observation), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetObservation
        path: ''
        startLine: 1282
      summary: "\nGiven an ID, returns corresponding observations\n"
      example: []
      syntax:
        content:
          CSharp: public void GetObservation(int id, Action<Observation> callback, Action<Error> errorCallback)
          VB: Public Sub GetObservation(id As Integer, callback As Action(Of Observation), errorCallback As Action(Of  Error))
        parameters:
        - id: id
          type: System.Int32
          description: The observation ID to fetch
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Observation}
          description: A function to callback when the request is done which takes as input the Observation object found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.UpdateObservation(System.Int32,JoshAaronMiller.INaturalist.ObservationSubmission,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.UpdateObservation(System.Int32,JoshAaronMiller.INaturalist.ObservationSubmission,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: UpdateObservation(Int32, ObservationSubmission, Action<Observation>, Action<Error>)
        VB: UpdateObservation(Int32, ObservationSubmission, Action(Of Observation), Action(Of Error))
      nameWithType:
        CSharp: INatManager.UpdateObservation(Int32, ObservationSubmission, Action<Observation>, Action<Error>)
        VB: INatManager.UpdateObservation(Int32, ObservationSubmission, Action(Of Observation), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.UpdateObservation(System.Int32, JoshAaronMiller.INaturalist.ObservationSubmission, Action<JoshAaronMiller.INaturalist.Observation>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.UpdateObservation(System.Int32, JoshAaronMiller.INaturalist.ObservationSubmission, Action(Of JoshAaronMiller.INaturalist.Observation), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UpdateObservation
        path: ''
        startLine: 1296
      summary: "\nUpdate an Observation.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateObservation(int obsId, ObservationSubmission observation, Action<Observation> callback, Action<Error> errorCallback)
          VB: Public Sub UpdateObservation(obsId As Integer, observation As ObservationSubmission, callback As Action(Of Observation), errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID to update
        - id: observation
          type: JoshAaronMiller.INaturalist.ObservationSubmission
          description: An ObservationSubmission object containing the updated information for the observation.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Observation}
          description: A function to callback when the request is done which takes as input the Observation object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.UpdateObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.FaveObservation(System.Int32,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.FaveObservation(System.Int32,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: FaveObservation(Int32, Action<Observation>, Action<Error>)
        VB: FaveObservation(Int32, Action(Of Observation), Action(Of Error))
      nameWithType:
        CSharp: INatManager.FaveObservation(Int32, Action<Observation>, Action<Error>)
        VB: INatManager.FaveObservation(Int32, Action(Of Observation), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.FaveObservation(System.Int32, Action<JoshAaronMiller.INaturalist.Observation>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.FaveObservation(System.Int32, Action(Of JoshAaronMiller.INaturalist.Observation), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: FaveObservation
        path: ''
        startLine: 1311
      summary: "\n&quot;Fave&quot; an Observation.\n"
      example: []
      syntax:
        content:
          CSharp: public void FaveObservation(int obsId, Action<Observation> callback, Action<Error> errorCallback)
          VB: Public Sub FaveObservation(obsId As Integer, callback As Action(Of Observation), errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Observation}
          description: A function to callback when the request is done which takes as input the Observation object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.FaveObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.UnfaveObservation(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: UnfaveObservation(Int32, Action, Action<Error>)
        VB: UnfaveObservation(Int32, Action, Action(Of Error))
      nameWithType:
        CSharp: INatManager.UnfaveObservation(Int32, Action, Action<Error>)
        VB: INatManager.UnfaveObservation(Int32, Action, Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation(System.Int32, Action, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation(System.Int32, Action, Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UnfaveObservation
        path: ''
        startLine: 1323
      summary: "\n&quot;Unfave&quot; an Observation, or delete Fave mark.\n"
      example: []
      syntax:
        content:
          CSharp: public void UnfaveObservation(int obsId, Action callback, Action<Error> errorCallback)
          VB: Public Sub UnfaveObservation(obsId As Integer, callback As Action, errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID.
        - id: callback
          type: Global.Action
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.ReviewObservation(System.Int32,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.ReviewObservation(System.Int32,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: ReviewObservation(Int32, Action<Observation>, Action<Error>)
        VB: ReviewObservation(Int32, Action(Of Observation), Action(Of Error))
      nameWithType:
        CSharp: INatManager.ReviewObservation(Int32, Action<Observation>, Action<Error>)
        VB: INatManager.ReviewObservation(Int32, Action(Of Observation), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.ReviewObservation(System.Int32, Action<JoshAaronMiller.INaturalist.Observation>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.ReviewObservation(System.Int32, Action(Of JoshAaronMiller.INaturalist.Observation), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ReviewObservation
        path: ''
        startLine: 1335
      summary: "\nMark an observation as reviewed by the authenticated user.\n"
      example: []
      syntax:
        content:
          CSharp: public void ReviewObservation(int obsId, Action<Observation> callback, Action<Error> errorCallback)
          VB: Public Sub ReviewObservation(obsId As Integer, callback As Action(Of Observation), errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Observation}
          description: A function to callback when the request is done which takes as input the Observation object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.ReviewObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.UnreviewObservation(System.Int32,Action,Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: UnreviewObservation(Int32, Action, Action<Error>)
        VB: UnreviewObservation(Int32, Action, Action(Of Error))
      nameWithType:
        CSharp: INatManager.UnreviewObservation(Int32, Action, Action<Error>)
        VB: INatManager.UnreviewObservation(Int32, Action, Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation(System.Int32, Action, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation(System.Int32, Action, Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UnreviewObservation
        path: ''
        startLine: 1347
      summary: "\nMark an observation as unreviewed by the authenticated user.\n"
      example: []
      syntax:
        content:
          CSharp: public void UnreviewObservation(int obsId, Action callback, Action<Error> errorCallback)
          VB: Public Sub UnreviewObservation(obsId As Integer, callback As Action, errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID.
        - id: callback
          type: Global.Action
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary(System.Int32,Action{JoshAaronMiller.INaturalist.TaxonSummary},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary(System.Int32,Action{JoshAaronMiller.INaturalist.TaxonSummary},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetObservationTaxonSummary(Int32, Action<TaxonSummary>, Action<Error>)
        VB: GetObservationTaxonSummary(Int32, Action(Of TaxonSummary), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetObservationTaxonSummary(Int32, Action<TaxonSummary>, Action<Error>)
        VB: INatManager.GetObservationTaxonSummary(Int32, Action(Of TaxonSummary), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary(System.Int32, Action<JoshAaronMiller.INaturalist.TaxonSummary>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary(System.Int32, Action(Of JoshAaronMiller.INaturalist.TaxonSummary), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetObservationTaxonSummary
        path: ''
        startLine: 1370
      summary: "\nGiven an observation ID, fetch the TaxonSummary of that Observation.\n"
      remarks: "\nProbably most useful for getting a Wikipedia summary of the taxon, see TaxonSummary object.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetObservationTaxonSummary(int obsId, Action<TaxonSummary> callback, Action<Error> errorCallback)
          VB: Public Sub GetObservationTaxonSummary(obsId As Integer, callback As Action(Of TaxonSummary), errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The observation  ID to fetch
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.TaxonSummary}
          description: A function to callback when the request is done which takes as input the TaxonSummary object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.VoteObservation(System.Int32,JoshAaronMiller.INaturalist.Vote,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.VoteObservation(System.Int32,JoshAaronMiller.INaturalist.Vote,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: VoteObservation(Int32, Vote, Action<Observation>, Action<Error>)
        VB: VoteObservation(Int32, Vote, Action(Of Observation), Action(Of Error))
      nameWithType:
        CSharp: INatManager.VoteObservation(Int32, Vote, Action<Observation>, Action<Error>)
        VB: INatManager.VoteObservation(Int32, Vote, Action(Of Observation), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.VoteObservation(System.Int32, JoshAaronMiller.INaturalist.Vote, Action<JoshAaronMiller.INaturalist.Observation>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.VoteObservation(System.Int32, JoshAaronMiller.INaturalist.Vote, Action(Of JoshAaronMiller.INaturalist.Observation), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: VoteObservation
        path: ''
        startLine: 1387
      summary: "\nVote on an Observation; see Vote object for usage.\n"
      example: []
      syntax:
        content:
          CSharp: public void VoteObservation(int obsId, Vote vote, Action<Observation> callback, Action<Error> errorCallback)
          VB: Public Sub VoteObservation(obsId As Integer, vote As Vote, callback As Action(Of Observation), errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID.
        - id: vote
          type: JoshAaronMiller.INaturalist.Vote
          description: The Vote to submit.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Observation}
          description: A function to callback when the request is done which takes as input the Observation object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.VoteObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation(System.Int32,JoshAaronMiller.INaturalist.Vote,Action,Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.UnvoteObservation(System.Int32,JoshAaronMiller.INaturalist.Vote,Action,Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: UnvoteObservation(Int32, Vote, Action, Action<Error>)
        VB: UnvoteObservation(Int32, Vote, Action, Action(Of Error))
      nameWithType:
        CSharp: INatManager.UnvoteObservation(Int32, Vote, Action, Action<Error>)
        VB: INatManager.UnvoteObservation(Int32, Vote, Action, Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation(System.Int32, JoshAaronMiller.INaturalist.Vote, Action, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation(System.Int32, JoshAaronMiller.INaturalist.Vote, Action, Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UnvoteObservation
        path: ''
        startLine: 1401
      summary: "\nDelete a Vote from an Observation.\n"
      example: []
      syntax:
        content:
          CSharp: public void UnvoteObservation(int obsId, Vote vote, Action callback, Action<Error> errorCallback)
          VB: Public Sub UnvoteObservation(obsId As Integer, vote As Vote, callback As Action, errorCallback As Action(Of  Error))
        parameters:
        - id: obsId
          type: System.Int32
          description: The Observation ID.
        - id: vote
          type: JoshAaronMiller.INaturalist.Vote
          description: The Vote to delete.
        - id: callback
          type: Global.Action
          description: A function to callback when the request is done.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.SearchObservations(JoshAaronMiller.INaturalist.ObservationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.SearchObservations(JoshAaronMiller.INaturalist.ObservationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: SearchObservations(ObservationSearch, Action<Results<Observation>>, Action<Error>)
        VB: SearchObservations(ObservationSearch, Action(Of Results(Of Observation)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.SearchObservations(ObservationSearch, Action<Results<Observation>>, Action<Error>)
        VB: INatManager.SearchObservations(ObservationSearch, Action(Of Results(Of Observation)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.SearchObservations(JoshAaronMiller.INaturalist.ObservationSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Observation>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.SearchObservations(JoshAaronMiller.INaturalist.ObservationSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Observation)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SearchObservations
        path: ''
        startLine: 1415
      summary: "\nGiven an ObservationSearch object, returns a list of matching observations\n"
      example: []
      syntax:
        content:
          CSharp: public void SearchObservations(ObservationSearch obsSearch, Action<Results<Observation>> callback, Action<Error> errorCallback)
          VB: Public Sub SearchObservations(obsSearch As ObservationSearch, callback As Action(Of Results(Of Observation)), errorCallback As Action(Of  Error))
        parameters:
        - id: obsSearch
          type: JoshAaronMiller.INaturalist.ObservationSearch
          description: An ObservationSearch object holding the parameters of the search
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}}
          description: A function to callback when the request is done which takes as input the Results list of Observation objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.SearchObservations*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.CreateObservation(JoshAaronMiller.INaturalist.ObservationSubmission,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.CreateObservation(JoshAaronMiller.INaturalist.ObservationSubmission,Action{JoshAaronMiller.INaturalist.Observation},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: CreateObservation(ObservationSubmission, Action<Observation>, Action<Error>)
        VB: CreateObservation(ObservationSubmission, Action(Of Observation), Action(Of Error))
      nameWithType:
        CSharp: INatManager.CreateObservation(ObservationSubmission, Action<Observation>, Action<Error>)
        VB: INatManager.CreateObservation(ObservationSubmission, Action(Of Observation), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.CreateObservation(JoshAaronMiller.INaturalist.ObservationSubmission, Action<JoshAaronMiller.INaturalist.Observation>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.CreateObservation(JoshAaronMiller.INaturalist.ObservationSubmission, Action(Of JoshAaronMiller.INaturalist.Observation), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreateObservation
        path: ''
        startLine: 1427
      summary: "\nCreate an Observation.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateObservation(ObservationSubmission observation, Action<Observation> callback, Action<Error> errorCallback)
          VB: Public Sub CreateObservation(observation As ObservationSubmission, callback As Action(Of Observation), errorCallback As Action(Of  Error))
        parameters:
        - id: observation
          type: JoshAaronMiller.INaturalist.ObservationSubmission
          description: An ObservationSubmission object containing the information for the observation.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Observation}
          description: A function to callback when the request is done which takes as input the Observation object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.CreateObservation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts(JoshAaronMiller.INaturalist.ObservationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts(JoshAaronMiller.INaturalist.ObservationSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetObservationSpeciesCounts(ObservationSearch, Action<Results<SpeciesCount>>, Action<Error>)
        VB: GetObservationSpeciesCounts(ObservationSearch, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetObservationSpeciesCounts(ObservationSearch, Action<Results<SpeciesCount>>, Action<Error>)
        VB: INatManager.GetObservationSpeciesCounts(ObservationSearch, Action(Of Results(Of SpeciesCount)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts(JoshAaronMiller.INaturalist.ObservationSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.SpeciesCount>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts(JoshAaronMiller.INaturalist.ObservationSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.SpeciesCount)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetObservationSpeciesCounts
        path: ''
        startLine: 1459
      summary: "\nGiven an ObservationSearch object, returns the counts of how many observations matching the search have a particular leaf taxon.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetObservationSpeciesCounts(ObservationSearch observationSearch, Action<Results<SpeciesCount>> callback, Action<Error> errorCallback)
          VB: Public Sub GetObservationSpeciesCounts(observationSearch As ObservationSearch, callback As Action(Of Results(Of SpeciesCount)), errorCallback As Action(Of  Error))
        parameters:
        - id: observationSearch
          type: JoshAaronMiller.INaturalist.ObservationSearch
          description: An ObservationSearch object holding the parameters of the search.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}}
          description: A function to callback when the request is done which takes as input the Results list of SpeciesCount objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Int32,Action{JoshAaronMiller.INaturalist.Place},Action{JoshAaronMiller.INaturalist.Error},JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Int32,Action{JoshAaronMiller.INaturalist.Place},Action{JoshAaronMiller.INaturalist.Error},JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
      language: CSharp
      name:
        CSharp: GetPlaceDetails(Int32, Action<Place>, Action<Error>, INatManager.PlaceAdminLevel)
        VB: GetPlaceDetails(Int32, Action(Of Place), Action(Of Error), INatManager.PlaceAdminLevel)
      nameWithType:
        CSharp: INatManager.GetPlaceDetails(Int32, Action<Place>, Action<Error>, INatManager.PlaceAdminLevel)
        VB: INatManager.GetPlaceDetails(Int32, Action(Of Place), Action(Of Error), INatManager.PlaceAdminLevel)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Int32, Action<JoshAaronMiller.INaturalist.Place>, Action<JoshAaronMiller.INaturalist.Error>, JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
        VB: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Int32, Action(Of JoshAaronMiller.INaturalist.Place), Action(Of JoshAaronMiller.INaturalist.Error), JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetPlaceDetails
        path: ''
        startLine: 1479
      summary: "\nGiven an ID, return the corresponding Place.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetPlaceDetails(int placeId, Action<Place> callback, Action<Error> errorCallback, INatManager.PlaceAdminLevel adminLevel = INatManager.PlaceAdminLevel.None)
          VB: Public Sub GetPlaceDetails(placeId As Integer, callback As Action(Of Place), errorCallback As Action(Of  Error), adminLevel As INatManager.PlaceAdminLevel = INatManager.PlaceAdminLevel.None)
        parameters:
        - id: placeId
          type: System.Int32
          description: The ID of the Place.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Place}
          description: A function to callback when the request is done which takes as input the Place fetched.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
        - id: adminLevel
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
          description: Optionally, the admin level of the place to search.
      overload: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}},Action{JoshAaronMiller.INaturalist.Error},JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}},Action{JoshAaronMiller.INaturalist.Error},JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
      language: CSharp
      name:
        CSharp: GetPlaceDetails(List<Int32>, Action<Results<Place>>, Action<Error>, INatManager.PlaceAdminLevel)
        VB: GetPlaceDetails(List(Of Int32), Action(Of Results(Of Place)), Action(Of Error), INatManager.PlaceAdminLevel)
      nameWithType:
        CSharp: INatManager.GetPlaceDetails(List<Int32>, Action<Results<Place>>, Action<Error>, INatManager.PlaceAdminLevel)
        VB: INatManager.GetPlaceDetails(List(Of Int32), Action(Of Results(Of Place)), Action(Of Error), INatManager.PlaceAdminLevel)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Collections.Generic.List<System.Int32>, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Place>>, Action<JoshAaronMiller.INaturalist.Error>, JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
        VB: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails(System.Collections.Generic.List(Of System.Int32), Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Place)), Action(Of JoshAaronMiller.INaturalist.Error), JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetPlaceDetails
        path: ''
        startLine: 1497
      summary: "\nGiven a list of IDs, return the corresponding Places.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetPlaceDetails(List<int> placeIds, Action<Results<Place>> callback, Action<Error> errorCallback, INatManager.PlaceAdminLevel adminLevel = INatManager.PlaceAdminLevel.None)
          VB: Public Sub GetPlaceDetails(placeIds As List(Of Integer), callback As Action(Of Results(Of Place)), errorCallback As Action(Of  Error), adminLevel As INatManager.PlaceAdminLevel = INatManager.PlaceAdminLevel.None)
        parameters:
        - id: placeIds
          type: System.Collections.Generic.List{System.Int32}
          description: The IDs of the Places.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}}
          description: A function to callback when the request is done which takes as input the Results list of Places fetched.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
        - id: adminLevel
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
          description: Optionally, the admin level of the place to search.
      overload: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete(System.String,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}},Action{JoshAaronMiller.INaturalist.Error},System.Boolean)
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete(System.String,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}},Action{JoshAaronMiller.INaturalist.Error},System.Boolean)
      language: CSharp
      name:
        CSharp: GetPlacesAutocomplete(String, Action<Results<Place>>, Action<Error>, Boolean)
        VB: GetPlacesAutocomplete(String, Action(Of Results(Of Place)), Action(Of Error), Boolean)
      nameWithType:
        CSharp: INatManager.GetPlacesAutocomplete(String, Action<Results<Place>>, Action<Error>, Boolean)
        VB: INatManager.GetPlacesAutocomplete(String, Action(Of Results(Of Place)), Action(Of Error), Boolean)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete(System.String, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Place>>, Action<JoshAaronMiller.INaturalist.Error>, System.Boolean)
        VB: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete(System.String, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Place)), Action(Of JoshAaronMiller.INaturalist.Error), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetPlacesAutocomplete
        path: ''
        startLine: 1517
      summary: "\nGiven a string query, find all places with names starting with the query.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetPlacesAutocomplete(string query, Action<Results<Place>> callback, Action<Error> errorCallback, bool orderByArea = false)
          VB: Public Sub GetPlacesAutocomplete(query As String, callback As Action(Of Results(Of Place)), errorCallback As Action(Of  Error), orderByArea As Boolean = False)
        parameters:
        - id: query
          type: System.String
          description: The search term.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}}
          description: A function to callback when the request is done which takes as input the Results list of Places fetched.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
        - id: orderByArea
          type: System.Boolean
          description: If true, sort the results by area (default false).
      overload: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby(System.Double,System.Double,System.Double,System.Double,Action{JoshAaronMiller.INaturalist.PlacesByCuration},Action{JoshAaronMiller.INaturalist.Error},System.String,System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby(System.Double,System.Double,System.Double,System.Double,Action{JoshAaronMiller.INaturalist.PlacesByCuration},Action{JoshAaronMiller.INaturalist.Error},System.String,System.Int32)
      language: CSharp
      name:
        CSharp: GetPlacesNearby(Double, Double, Double, Double, Action<PlacesByCuration>, Action<Error>, String, Int32)
        VB: GetPlacesNearby(Double, Double, Double, Double, Action(Of PlacesByCuration), Action(Of Error), String, Int32)
      nameWithType:
        CSharp: INatManager.GetPlacesNearby(Double, Double, Double, Double, Action<PlacesByCuration>, Action<Error>, String, Int32)
        VB: INatManager.GetPlacesNearby(Double, Double, Double, Double, Action(Of PlacesByCuration), Action(Of Error), String, Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby(System.Double, System.Double, System.Double, System.Double, Action<JoshAaronMiller.INaturalist.PlacesByCuration>, Action<JoshAaronMiller.INaturalist.Error>, System.String, System.Int32)
        VB: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby(System.Double, System.Double, System.Double, System.Double, Action(Of JoshAaronMiller.INaturalist.PlacesByCuration), Action(Of JoshAaronMiller.INaturalist.Error), System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetPlacesNearby
        path: ''
        startLine: 1540
      summary: "\nGiven a bounding box and optional name query, return nearby places separated by curation status.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetPlacesNearby(double nelat, double nelng, double swlat, double swlng, Action<PlacesByCuration> callback, Action<Error> errorCallback, string name = "", int perPage = 30)
          VB: Public Sub GetPlacesNearby(nelat As Double, nelng As Double, swlat As Double, swlng As Double, callback As Action(Of PlacesByCuration), errorCallback As Action(Of  Error), name As String = "", perPage As Integer = 30)
        parameters:
        - id: nelat
          type: System.Double
          description: The northeast latitude corner of the bounding box.
        - id: nelng
          type: System.Double
          description: The northeast longitude corner of the bounding box.
        - id: swlat
          type: System.Double
          description: The southwest latitude corner of the bounding box.
        - id: swlng
          type: System.Double
          description: The southwest longitude corner of the bounding box.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.PlacesByCuration}
          description: A function to callback when the request is done which takes as input the list of PlacesByCuration fetched.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
        - id: name
          type: System.String
          description: The optional search term for the name.
        - id: perPage
          type: System.Int32
          description: Number of results per page (default 30, max 200).
      overload: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Collections.Generic.List{System.Int32},Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetTaxonDetails(List<Int32>, Action<Results<Taxon>>, Action<Error>)
        VB: GetTaxonDetails(List(Of Int32), Action(Of Results(Of Taxon)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetTaxonDetails(List<Int32>, Action<Results<Taxon>>, Action<Error>)
        VB: INatManager.GetTaxonDetails(List(Of Int32), Action(Of Results(Of Taxon)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Collections.Generic.List<System.Int32>, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Taxon>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Collections.Generic.List(Of System.Int32), Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Taxon)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetTaxonDetails
        path: ''
        startLine: 1600
      summary: "\nGiven an array of IDs, returns corresponding Taxa \n"
      example: []
      syntax:
        content:
          CSharp: public void GetTaxonDetails(List<int> taxaIds, Action<Results<Taxon>> callback, Action<Error> errorCallback)
          VB: Public Sub GetTaxonDetails(taxaIds As List(Of Integer), callback As Action(Of Results(Of Taxon)), errorCallback As Action(Of  Error))
        parameters:
        - id: taxaIds
          type: System.Collections.Generic.List{System.Int32}
          description: The list of taxa IDs to fetch
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}}
          description: A function to callback when the request is done which takes as input the Results list of Taxon objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Int32,Action{JoshAaronMiller.INaturalist.Taxon},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Int32,Action{JoshAaronMiller.INaturalist.Taxon},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetTaxonDetails(Int32, Action<Taxon>, Action<Error>)
        VB: GetTaxonDetails(Int32, Action(Of Taxon), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetTaxonDetails(Int32, Action<Taxon>, Action<Error>)
        VB: INatManager.GetTaxonDetails(Int32, Action(Of Taxon), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Int32, Action<JoshAaronMiller.INaturalist.Taxon>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails(System.Int32, Action(Of JoshAaronMiller.INaturalist.Taxon), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetTaxonDetails
        path: ''
        startLine: 1613
      summary: "\nGiven an ID, returns corresponding Taxon \n"
      example: []
      syntax:
        content:
          CSharp: public void GetTaxonDetails(int taxonId, Action<Taxon> callback, Action<Error> errorCallback)
          VB: Public Sub GetTaxonDetails(taxonId As Integer, callback As Action(Of Taxon), errorCallback As Action(Of  Error))
        parameters:
        - id: taxonId
          type: System.Int32
          description: The Taxon ID to fetch
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Taxon}
          description: A function to callback when the request is done which takes as input the Taxon object found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.SearchTaxa(JoshAaronMiller.INaturalist.TaxonSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.SearchTaxa(JoshAaronMiller.INaturalist.TaxonSearch,Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: SearchTaxa(TaxonSearch, Action<Results<Taxon>>, Action<Error>)
        VB: SearchTaxa(TaxonSearch, Action(Of Results(Of Taxon)), Action(Of Error))
      nameWithType:
        CSharp: INatManager.SearchTaxa(TaxonSearch, Action<Results<Taxon>>, Action<Error>)
        VB: INatManager.SearchTaxa(TaxonSearch, Action(Of Results(Of Taxon)), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.SearchTaxa(JoshAaronMiller.INaturalist.TaxonSearch, Action<JoshAaronMiller.INaturalist.Results<JoshAaronMiller.INaturalist.Taxon>>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.SearchTaxa(JoshAaronMiller.INaturalist.TaxonSearch, Action(Of JoshAaronMiller.INaturalist.Results(Of JoshAaronMiller.INaturalist.Taxon)), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SearchTaxa
        path: ''
        startLine: 1626
      summary: "\nGiven a TaxonSearch object, returns a list of matching taxa\n"
      example: []
      syntax:
        content:
          CSharp: public void SearchTaxa(TaxonSearch taxonSearch, Action<Results<Taxon>> callback, Action<Error> errorCallback)
          VB: Public Sub SearchTaxa(taxonSearch As TaxonSearch, callback As Action(Of Results(Of Taxon)), errorCallback As Action(Of  Error))
        parameters:
        - id: taxonSearch
          type: JoshAaronMiller.INaturalist.TaxonSearch
          description: An TaxonSearch object holding the parameters of the search
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}}
          description: A function to callback when the request is done which takes as input the Results list of Taxon objects found.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.SearchTaxa*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.GetUserMe(Action{JoshAaronMiller.INaturalist.User},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.GetUserMe(Action{JoshAaronMiller.INaturalist.User},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: GetUserMe(Action<User>, Action<Error>)
        VB: GetUserMe(Action(Of User), Action(Of Error))
      nameWithType:
        CSharp: INatManager.GetUserMe(Action<User>, Action<Error>)
        VB: INatManager.GetUserMe(Action(Of User), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.GetUserMe(Action<JoshAaronMiller.INaturalist.User>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.GetUserMe(Action(Of JoshAaronMiller.INaturalist.User), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetUserMe
        path: ''
        startLine: 1648
      summary: "\nFetch the User details for the authenticated user.\n"
      example: []
      syntax:
        content:
          CSharp: public void GetUserMe(Action<User> callback, Action<Error> errorCallback)
          VB: Public Sub GetUserMe(callback As Action(Of User), errorCallback As Action(Of  Error))
        parameters:
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.User}
          description: A function to callback when the request is done which takes as input the User object.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.GetUserMe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.INatManager.CreatePhoto(JoshAaronMiller.INaturalist.PhotoFile,Action{JoshAaronMiller.INaturalist.PhotoJson},Action{JoshAaronMiller.INaturalist.Error})
      commentId: M:JoshAaronMiller.INaturalist.INatManager.CreatePhoto(JoshAaronMiller.INaturalist.PhotoFile,Action{JoshAaronMiller.INaturalist.PhotoJson},Action{JoshAaronMiller.INaturalist.Error})
      language: CSharp
      name:
        CSharp: CreatePhoto(PhotoFile, Action<PhotoJson>, Action<Error>)
        VB: CreatePhoto(PhotoFile, Action(Of PhotoJson), Action(Of Error))
      nameWithType:
        CSharp: INatManager.CreatePhoto(PhotoFile, Action<PhotoJson>, Action<Error>)
        VB: INatManager.CreatePhoto(PhotoFile, Action(Of PhotoJson), Action(Of Error))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.CreatePhoto(JoshAaronMiller.INaturalist.PhotoFile, Action<JoshAaronMiller.INaturalist.PhotoJson>, Action<JoshAaronMiller.INaturalist.Error>)
        VB: JoshAaronMiller.INaturalist.INatManager.CreatePhoto(JoshAaronMiller.INaturalist.PhotoFile, Action(Of JoshAaronMiller.INaturalist.PhotoJson), Action(Of JoshAaronMiller.INaturalist.Error))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreatePhoto
        path: ''
        startLine: 1696
      summary: "\nCreate a Photo.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreatePhoto(PhotoFile photo, Action<PhotoJson> callback, Action<Error> errorCallback)
          VB: Public Sub CreatePhoto(photo As PhotoFile, callback As Action(Of PhotoJson), errorCallback As Action(Of  Error))
        parameters:
        - id: photo
          type: JoshAaronMiller.INaturalist.PhotoFile
          description: The Photo to upload.
        - id: callback
          type: Global.Action{JoshAaronMiller.INaturalist.PhotoJson}
          description: A function to callback when the request is done which takes as input the Photo object returned.
        - id: errorCallback
          type: Global.Action{JoshAaronMiller.INaturalist.Error}
          description: A function to callback when iNaturalist returns an error message.
      overload: JoshAaronMiller.INaturalist.INatManager.CreatePhoto*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
    commentId: T:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
    language: CSharp
    name:
      CSharp: INatManager.PlaceAdminLevel
      VB: INatManager.PlaceAdminLevel
    nameWithType:
      CSharp: INatManager.PlaceAdminLevel
      VB: INatManager.PlaceAdminLevel
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: PlaceAdminLevel
      path: ''
      startLine: 647
    syntax:
      content:
        CSharp: public enum PlaceAdminLevel
        VB: Public Enum PlaceAdminLevel
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.None
      commentId: F:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: INatManager.PlaceAdminLevel.None
        VB: INatManager.PlaceAdminLevel.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.None
        VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 648
      syntax:
        content:
          CSharp: None = -999
          VB: None = -999
        return:
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Continent
      commentId: F:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Continent
      language: CSharp
      name:
        CSharp: Continent
        VB: Continent
      nameWithType:
        CSharp: INatManager.PlaceAdminLevel.Continent
        VB: INatManager.PlaceAdminLevel.Continent
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Continent
        VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Continent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Continent
        path: ''
        startLine: 649
      syntax:
        content:
          CSharp: Continent = -1
          VB: Continent = -1
        return:
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Country
      commentId: F:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Country
      language: CSharp
      name:
        CSharp: Country
        VB: Country
      nameWithType:
        CSharp: INatManager.PlaceAdminLevel.Country
        VB: INatManager.PlaceAdminLevel.Country
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Country
        VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Country
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Country
        path: ''
        startLine: 650
      syntax:
        content:
          CSharp: Country = 0
          VB: Country = 0
        return:
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.State
      commentId: F:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.State
      language: CSharp
      name:
        CSharp: State
        VB: State
      nameWithType:
        CSharp: INatManager.PlaceAdminLevel.State
        VB: INatManager.PlaceAdminLevel.State
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.State
        VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.State
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: State
        path: ''
        startLine: 651
      syntax:
        content:
          CSharp: State = 1
          VB: State = 1
        return:
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.County
      commentId: F:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.County
      language: CSharp
      name:
        CSharp: County
        VB: County
      nameWithType:
        CSharp: INatManager.PlaceAdminLevel.County
        VB: INatManager.PlaceAdminLevel.County
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.County
        VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.County
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: County
        path: ''
        startLine: 652
      syntax:
        content:
          CSharp: County = 2
          VB: County = 2
        return:
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Town
      commentId: F:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Town
      language: CSharp
      name:
        CSharp: Town
        VB: Town
      nameWithType:
        CSharp: INatManager.PlaceAdminLevel.Town
        VB: INatManager.PlaceAdminLevel.Town
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Town
        VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Town
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Town
        path: ''
        startLine: 653
      syntax:
        content:
          CSharp: Town = 3
          VB: Town = 3
        return:
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Park
      commentId: F:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Park
      language: CSharp
      name:
        CSharp: Park
        VB: Park
      nameWithType:
        CSharp: INatManager.PlaceAdminLevel.Park
        VB: INatManager.PlaceAdminLevel.Park
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Park
        VB: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel.Park
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Park
        path: ''
        startLine: 654
      syntax:
        content:
          CSharp: Park = 10
          VB: Park = 10
        return:
          type: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.PhotoFile
    commentId: T:JoshAaronMiller.INaturalist.PhotoFile
    language: CSharp
    name:
      CSharp: PhotoFile
      VB: PhotoFile
    nameWithType:
      CSharp: PhotoFile
      VB: PhotoFile
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.PhotoFile
      VB: JoshAaronMiller.INaturalist.PhotoFile
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: PhotoFile
      path: ''
      startLine: 1716
    syntax:
      content:
        CSharp: public class PhotoFile
        VB: Public Class PhotoFile
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.PhotoFile.filePath
      commentId: F:JoshAaronMiller.INaturalist.PhotoFile.filePath
      language: CSharp
      name:
        CSharp: filePath
        VB: filePath
      nameWithType:
        CSharp: PhotoFile.filePath
        VB: PhotoFile.filePath
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoFile.filePath
        VB: JoshAaronMiller.INaturalist.PhotoFile.filePath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: filePath
        path: ''
        startLine: 1718
      syntax:
        content:
          CSharp: public string filePath
          VB: Public filePath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoFile.fileName
      commentId: F:JoshAaronMiller.INaturalist.PhotoFile.fileName
      language: CSharp
      name:
        CSharp: fileName
        VB: fileName
      nameWithType:
        CSharp: PhotoFile.fileName
        VB: PhotoFile.fileName
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoFile.fileName
        VB: JoshAaronMiller.INaturalist.PhotoFile.fileName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: fileName
        path: ''
        startLine: 1719
      syntax:
        content:
          CSharp: public string fileName
          VB: Public fileName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoFile.fileType
      commentId: F:JoshAaronMiller.INaturalist.PhotoFile.fileType
      language: CSharp
      name:
        CSharp: fileType
        VB: fileType
      nameWithType:
        CSharp: PhotoFile.fileType
        VB: PhotoFile.fileType
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoFile.fileType
        VB: JoshAaronMiller.INaturalist.PhotoFile.fileType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: fileType
        path: ''
        startLine: 1720
      syntax:
        content:
          CSharp: public string fileType
          VB: Public fileType As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoFile.ToBytes
      commentId: M:JoshAaronMiller.INaturalist.PhotoFile.ToBytes
      language: CSharp
      name:
        CSharp: ToBytes()
        VB: ToBytes()
      nameWithType:
        CSharp: PhotoFile.ToBytes()
        VB: PhotoFile.ToBytes()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoFile.ToBytes()
        VB: JoshAaronMiller.INaturalist.PhotoFile.ToBytes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ToBytes
        path: ''
        startLine: 1722
      syntax:
        content:
          CSharp: public byte[] ToBytes()
          VB: Public Function ToBytes As Byte()
        return:
          type: System.Byte[]
      overload: JoshAaronMiller.INaturalist.PhotoFile.ToBytes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Utilities
    commentId: T:JoshAaronMiller.INaturalist.Utilities
    language: CSharp
    name:
      CSharp: Utilities
      VB: Utilities
    nameWithType:
      CSharp: Utilities
      VB: Utilities
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Utilities
      VB: JoshAaronMiller.INaturalist.Utilities
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Utilities
      path: ''
      startLine: 1737
    syntax:
      content:
        CSharp: public static class Utilities
        VB: Public Module Utilities
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath(System.String,GameObject,System.Action)
      commentId: M:JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath(System.String,GameObject,System.Action)
      language: CSharp
      name:
        CSharp: LoadImageFromPath(String, GameObject, Action)
        VB: LoadImageFromPath(String, GameObject, Action)
      nameWithType:
        CSharp: Utilities.LoadImageFromPath(String, GameObject, Action)
        VB: Utilities.LoadImageFromPath(String, GameObject, Action)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath(System.String, GameObject, System.Action)
        VB: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath(System.String, GameObject, System.Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: LoadImageFromPath
        path: ''
        startLine: 1748
      summary: "\nLoads an image from a local file or URL into the texture of a GameObject&apos;s RawImage component.\nCreates a RawImage component if none exists.\n"
      example: []
      syntax:
        content:
          CSharp: public static IEnumerator LoadImageFromPath(string fullPath, GameObject loadTo, Action callback = null)
          VB: Public Shared Function LoadImageFromPath(fullPath As String, loadTo As GameObject, callback As Action = Nothing) As IEnumerator
        parameters:
        - id: fullPath
          type: System.String
          description: The full local path or URL.
        - id: loadTo
          type: Global.GameObject
          description: The GameObject to load the image into.
        - id: callback
          type: System.Action
          description: Optionally, a void function to call once the image is loaded successfully.
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2
    commentId: T:JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2
    language: CSharp
    name:
      CSharp: Utilities.DefaultDictionary<Key, Value>
      VB: Utilities.DefaultDictionary(Of Key, Value)
    nameWithType:
      CSharp: Utilities.DefaultDictionary<Key, Value>
      VB: Utilities.DefaultDictionary(Of Key, Value)
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary<Key, Value>
      VB: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary(Of Key, Value)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: DefaultDictionary
      path: ''
      startLine: 1779
    summary: "\nA simple implementation of Python&apos;s defaultdict, which creates a default value if the key does not exist.\nAdapted from https://stackoverflow.com/questions/15622622/analogue-of-pythons-defaultdict\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DefaultDictionary<Key, Value> : Dictionary<Key, Value>, IDictionary<Key, Value>, ICollection<KeyValuePair<Key, Value>>, IDictionary, ICollection, IReadOnlyDictionary<Key, Value>, IReadOnlyCollection<KeyValuePair<Key, Value>>, IEnumerable<KeyValuePair<Key, Value>>, IEnumerable, ISerializable, IDeserializationCallback where Value : new()'
        VB: >-
          Public Class DefaultDictionary(Of Key, Value As New)

              Inherits Dictionary(Of Key, Value)

              Implements IDictionary(Of Key, Value), ICollection(Of KeyValuePair(Of Key, Value)), IDictionary, ICollection, IReadOnlyDictionary(Of Key, Value), IReadOnlyCollection(Of KeyValuePair(Of Key, Value)), IEnumerable(Of KeyValuePair(Of Key, Value)), IEnumerable, ISerializable, IDeserializationCallback
      typeParameters:
      - id: Key
      - id: Value
    inheritance:
    - System.Object
    - System.Collections.Generic.Dictionary{{Key},{Value}}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2.Item(`0)
      commentId: P:JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2.Item(`0)
      language: CSharp
      name:
        CSharp: Item[Key]
        VB: Item(Key)
      nameWithType:
        CSharp: Utilities.DefaultDictionary<Key, Value>.Item[Key]
        VB: Utilities.DefaultDictionary(Of Key, Value).Item(Key)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary<Key, Value>.Item[Key]
        VB: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary(Of Key, Value).Item(Key)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: this[]
        path: ''
        startLine: 1781
      syntax:
        content:
          CSharp: public Value this[Key key] { get; set; }
          VB: Public Property Item(key As Key) As Value
        parameters:
        - id: key
          type: '{Key}'
        return:
          type: '{Value}'
      overload: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Annotation
    commentId: T:JoshAaronMiller.INaturalist.Annotation
    language: CSharp
    name:
      CSharp: Annotation
      VB: Annotation
    nameWithType:
      CSharp: Annotation
      VB: Annotation
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Annotation
      VB: JoshAaronMiller.INaturalist.Annotation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Annotation
      path: ''
      startLine: 1804
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Annotation : JsonObject<Annotation>
        VB: >-
          <Serializable>

          Public Class Annotation

              Inherits JsonObject(Of Annotation)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}.ToJson(JoshAaronMiller.INaturalist.Annotation)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Annotation.resource_type
      commentId: F:JoshAaronMiller.INaturalist.Annotation.resource_type
      language: CSharp
      name:
        CSharp: resource_type
        VB: resource_type
      nameWithType:
        CSharp: Annotation.resource_type
        VB: Annotation.resource_type
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Annotation.resource_type
        VB: JoshAaronMiller.INaturalist.Annotation.resource_type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: resource_type
        path: ''
        startLine: 1807
      syntax:
        content:
          CSharp: public string resource_type
          VB: Public resource_type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Annotation.resource_id
      commentId: F:JoshAaronMiller.INaturalist.Annotation.resource_id
      language: CSharp
      name:
        CSharp: resource_id
        VB: resource_id
      nameWithType:
        CSharp: Annotation.resource_id
        VB: Annotation.resource_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Annotation.resource_id
        VB: JoshAaronMiller.INaturalist.Annotation.resource_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: resource_id
        path: ''
        startLine: 1808
      syntax:
        content:
          CSharp: public int resource_id
          VB: Public resource_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Annotation.controlled_attribute_id
      commentId: F:JoshAaronMiller.INaturalist.Annotation.controlled_attribute_id
      language: CSharp
      name:
        CSharp: controlled_attribute_id
        VB: controlled_attribute_id
      nameWithType:
        CSharp: Annotation.controlled_attribute_id
        VB: Annotation.controlled_attribute_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Annotation.controlled_attribute_id
        VB: JoshAaronMiller.INaturalist.Annotation.controlled_attribute_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: controlled_attribute_id
        path: ''
        startLine: 1809
      syntax:
        content:
          CSharp: public int controlled_attribute_id
          VB: Public controlled_attribute_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Annotation.controlled_value_id
      commentId: F:JoshAaronMiller.INaturalist.Annotation.controlled_value_id
      language: CSharp
      name:
        CSharp: controlled_value_id
        VB: controlled_value_id
      nameWithType:
        CSharp: Annotation.controlled_value_id
        VB: Annotation.controlled_value_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Annotation.controlled_value_id
        VB: JoshAaronMiller.INaturalist.Annotation.controlled_value_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: controlled_value_id
        path: ''
        startLine: 1810
      syntax:
        content:
          CSharp: public int controlled_value_id
          VB: Public controlled_value_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
    commentId: T:JoshAaronMiller.INaturalist.BoundingBoxGeoJson
    language: CSharp
    name:
      CSharp: BoundingBoxGeoJson
      VB: BoundingBoxGeoJson
    nameWithType:
      CSharp: BoundingBoxGeoJson
      VB: BoundingBoxGeoJson
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
      VB: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: BoundingBoxGeoJson
      path: ''
      startLine: 1820
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BoundingBoxGeoJson : JsonObject<BoundingBoxGeoJson>
        VB: >-
          <Serializable>

          Public Class BoundingBoxGeoJson

              Inherits JsonObject(Of BoundingBoxGeoJson)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}.ToJson(JoshAaronMiller.INaturalist.BoundingBoxGeoJson)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson.type
      commentId: F:JoshAaronMiller.INaturalist.BoundingBoxGeoJson.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: BoundingBoxGeoJson.type
        VB: BoundingBoxGeoJson.type
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.BoundingBoxGeoJson.type
        VB: JoshAaronMiller.INaturalist.BoundingBoxGeoJson.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: type
        path: ''
        startLine: 1823
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson.coordinates
      commentId: F:JoshAaronMiller.INaturalist.BoundingBoxGeoJson.coordinates
      language: CSharp
      name:
        CSharp: coordinates
        VB: coordinates
      nameWithType:
        CSharp: BoundingBoxGeoJson.coordinates
        VB: BoundingBoxGeoJson.coordinates
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.BoundingBoxGeoJson.coordinates
        VB: JoshAaronMiller.INaturalist.BoundingBoxGeoJson.coordinates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: coordinates
        path: ''
        startLine: 1824
      syntax:
        content:
          CSharp: public List<List<int>> coordinates
          VB: Public coordinates As List(Of List(Of Integer))
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.ControlledTerm
    commentId: T:JoshAaronMiller.INaturalist.ControlledTerm
    language: CSharp
    name:
      CSharp: ControlledTerm
      VB: ControlledTerm
    nameWithType:
      CSharp: ControlledTerm
      VB: ControlledTerm
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ControlledTerm
      VB: JoshAaronMiller.INaturalist.ControlledTerm
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: ControlledTerm
      path: ''
      startLine: 1833
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ControlledTerm : JsonObject<ControlledTerm>
        VB: >-
          <Serializable>

          Public Class ControlledTerm

              Inherits JsonObject(Of ControlledTerm)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.ControlledTerm.id
      commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: ControlledTerm.id
        VB: ControlledTerm.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTerm.id
        VB: JoshAaronMiller.INaturalist.ControlledTerm.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 1836
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
      commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
      language: CSharp
      name:
        CSharp: ontology_uri
        VB: ontology_uri
      nameWithType:
        CSharp: ControlledTerm.ontology_uri
        VB: ControlledTerm.ontology_uri
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
        VB: JoshAaronMiller.INaturalist.ControlledTerm.ontology_uri
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ontology_uri
        path: ''
        startLine: 1837
      syntax:
        content:
          CSharp: public string ontology_uri
          VB: Public ontology_uri As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTerm.is_value
      commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.is_value
      language: CSharp
      name:
        CSharp: is_value
        VB: is_value
      nameWithType:
        CSharp: ControlledTerm.is_value
        VB: ControlledTerm.is_value
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTerm.is_value
        VB: JoshAaronMiller.INaturalist.ControlledTerm.is_value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: is_value
        path: ''
        startLine: 1838
      syntax:
        content:
          CSharp: public bool is_value
          VB: Public is_value As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTerm.multivalued
      commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.multivalued
      language: CSharp
      name:
        CSharp: multivalued
        VB: multivalued
      nameWithType:
        CSharp: ControlledTerm.multivalued
        VB: ControlledTerm.multivalued
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTerm.multivalued
        VB: JoshAaronMiller.INaturalist.ControlledTerm.multivalued
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: multivalued
        path: ''
        startLine: 1839
      syntax:
        content:
          CSharp: public bool multivalued
          VB: Public multivalued As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTerm.uuid
      commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: ControlledTerm.uuid
        VB: ControlledTerm.uuid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTerm.uuid
        VB: JoshAaronMiller.INaturalist.ControlledTerm.uuid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uuid
        path: ''
        startLine: 1840
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTerm.values
      commentId: F:JoshAaronMiller.INaturalist.ControlledTerm.values
      language: CSharp
      name:
        CSharp: values
        VB: values
      nameWithType:
        CSharp: ControlledTerm.values
        VB: ControlledTerm.values
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTerm.values
        VB: JoshAaronMiller.INaturalist.ControlledTerm.values
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: values
        path: ''
        startLine: 1841
      syntax:
        content:
          CSharp: public List<ControlledTermValue> values
          VB: Public values As List(Of ControlledTermValue)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.ControlledTermValue}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.ControlledTermValue
    commentId: T:JoshAaronMiller.INaturalist.ControlledTermValue
    language: CSharp
    name:
      CSharp: ControlledTermValue
      VB: ControlledTermValue
    nameWithType:
      CSharp: ControlledTermValue
      VB: ControlledTermValue
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ControlledTermValue
      VB: JoshAaronMiller.INaturalist.ControlledTermValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: ControlledTermValue
      path: ''
      startLine: 1850
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ControlledTermValue : JsonObject<ControlledTermValue>
        VB: >-
          <Serializable>

          Public Class ControlledTermValue

              Inherits JsonObject(Of ControlledTermValue)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.ControlledTermValue.id
      commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: ControlledTermValue.id
        VB: ControlledTermValue.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTermValue.id
        VB: JoshAaronMiller.INaturalist.ControlledTermValue.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 1853
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
      commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
      language: CSharp
      name:
        CSharp: ontology_uri
        VB: ontology_uri
      nameWithType:
        CSharp: ControlledTermValue.ontology_uri
        VB: ControlledTermValue.ontology_uri
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
        VB: JoshAaronMiller.INaturalist.ControlledTermValue.ontology_uri
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ontology_uri
        path: ''
        startLine: 1854
      syntax:
        content:
          CSharp: public string ontology_uri
          VB: Public ontology_uri As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTermValue.uri
      commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.uri
      language: CSharp
      name:
        CSharp: uri
        VB: uri
      nameWithType:
        CSharp: ControlledTermValue.uri
        VB: ControlledTermValue.uri
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTermValue.uri
        VB: JoshAaronMiller.INaturalist.ControlledTermValue.uri
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uri
        path: ''
        startLine: 1855
      syntax:
        content:
          CSharp: public string uri
          VB: Public uri As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTermValue.blocking
      commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.blocking
      language: CSharp
      name:
        CSharp: blocking
        VB: blocking
      nameWithType:
        CSharp: ControlledTermValue.blocking
        VB: ControlledTermValue.blocking
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTermValue.blocking
        VB: JoshAaronMiller.INaturalist.ControlledTermValue.blocking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: blocking
        path: ''
        startLine: 1856
      syntax:
        content:
          CSharp: public bool blocking
          VB: Public blocking As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTermValue.uuid
      commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: ControlledTermValue.uuid
        VB: ControlledTermValue.uuid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTermValue.uuid
        VB: JoshAaronMiller.INaturalist.ControlledTermValue.uuid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uuid
        path: ''
        startLine: 1857
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
      commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
      language: CSharp
      name:
        CSharp: taxon_ids
        VB: taxon_ids
      nameWithType:
        CSharp: ControlledTermValue.taxon_ids
        VB: ControlledTermValue.taxon_ids
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
        VB: JoshAaronMiller.INaturalist.ControlledTermValue.taxon_ids
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon_ids
        path: ''
        startLine: 1858
      syntax:
        content:
          CSharp: public List<int> taxon_ids
          VB: Public taxon_ids As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ControlledTermValue.label
      commentId: F:JoshAaronMiller.INaturalist.ControlledTermValue.label
      language: CSharp
      name:
        CSharp: label
        VB: label
      nameWithType:
        CSharp: ControlledTermValue.label
        VB: ControlledTermValue.label
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ControlledTermValue.label
        VB: JoshAaronMiller.INaturalist.ControlledTermValue.label
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: label
        path: ''
        startLine: 1859
      syntax:
        content:
          CSharp: public string label
          VB: Public label As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Count
    commentId: T:JoshAaronMiller.INaturalist.Count
    language: CSharp
    name:
      CSharp: Count
      VB: Count
    nameWithType:
      CSharp: Count
      VB: Count
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Count
      VB: JoshAaronMiller.INaturalist.Count
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Count
      path: ''
      startLine: 1869
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Count : JsonObject<Count>
        VB: >-
          <Serializable>

          Public Class Count

              Inherits JsonObject(Of Count)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}.ToJson(JoshAaronMiller.INaturalist.Count)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Count.count
      commentId: F:JoshAaronMiller.INaturalist.Count.count
      language: CSharp
      name:
        CSharp: count
        VB: count
      nameWithType:
        CSharp: Count.count
        VB: Count.count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Count.count
        VB: JoshAaronMiller.INaturalist.Count.count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: count
        path: ''
        startLine: 1872
      syntax:
        content:
          CSharp: public int count
          VB: Public count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Dimensions
    commentId: T:JoshAaronMiller.INaturalist.Dimensions
    language: CSharp
    name:
      CSharp: Dimensions
      VB: Dimensions
    nameWithType:
      CSharp: Dimensions
      VB: Dimensions
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Dimensions
      VB: JoshAaronMiller.INaturalist.Dimensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Dimensions
      path: ''
      startLine: 1882
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Dimensions : JsonObject<Dimensions>
        VB: >-
          <Serializable>

          Public Class Dimensions

              Inherits JsonObject(Of Dimensions)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}.ToJson(JoshAaronMiller.INaturalist.Dimensions)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Dimensions.height
      commentId: F:JoshAaronMiller.INaturalist.Dimensions.height
      language: CSharp
      name:
        CSharp: height
        VB: height
      nameWithType:
        CSharp: Dimensions.height
        VB: Dimensions.height
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Dimensions.height
        VB: JoshAaronMiller.INaturalist.Dimensions.height
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: height
        path: ''
        startLine: 1885
      syntax:
        content:
          CSharp: public int height
          VB: Public height As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Dimensions.width
      commentId: F:JoshAaronMiller.INaturalist.Dimensions.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: Dimensions.width
        VB: Dimensions.width
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Dimensions.width
        VB: JoshAaronMiller.INaturalist.Dimensions.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: width
        path: ''
        startLine: 1886
      syntax:
        content:
          CSharp: public int width
          VB: Public width As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Error
    commentId: T:JoshAaronMiller.INaturalist.Error
    language: CSharp
    name:
      CSharp: Error
      VB: Error
    nameWithType:
      CSharp: Error
      VB: Error
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Error
      VB: JoshAaronMiller.INaturalist.Error
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Error
      path: ''
      startLine: 1897
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Error : JsonObject<Error>
        VB: >-
          <Serializable>

          Public Class Error

              Inherits JsonObject(Of  Error)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}.ToJson(JoshAaronMiller.INaturalist.Error)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Error.error
      commentId: F:JoshAaronMiller.INaturalist.Error.error
      language: CSharp
      name:
        CSharp: error
        VB: error
      nameWithType:
        CSharp: Error.error
        VB: Error.error
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Error.error
        VB: JoshAaronMiller.INaturalist.Error.error
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: error
        path: ''
        startLine: 1900
      syntax:
        content:
          CSharp: public string error
          VB: Public error As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Error.status
      commentId: F:JoshAaronMiller.INaturalist.Error.status
      language: CSharp
      name:
        CSharp: status
        VB: status
      nameWithType:
        CSharp: Error.status
        VB: Error.status
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Error.status
        VB: JoshAaronMiller.INaturalist.Error.status
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: status
        path: ''
        startLine: 1901
      syntax:
        content:
          CSharp: public int status
          VB: Public status As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Error.code
      commentId: F:JoshAaronMiller.INaturalist.Error.code
      language: CSharp
      name:
        CSharp: code
        VB: code
      nameWithType:
        CSharp: Error.code
        VB: Error.code
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Error.code
        VB: JoshAaronMiller.INaturalist.Error.code
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: code
        path: ''
        startLine: 1902
      syntax:
        content:
          CSharp: public int code
          VB: Public code As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Error.message
      commentId: F:JoshAaronMiller.INaturalist.Error.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: Error.message
        VB: Error.message
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Error.message
        VB: JoshAaronMiller.INaturalist.Error.message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: message
        path: ''
        startLine: 1903
      syntax:
        content:
          CSharp: public string message
          VB: Public message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Flag
    commentId: T:JoshAaronMiller.INaturalist.Flag
    language: CSharp
    name:
      CSharp: Flag
      VB: Flag
    nameWithType:
      CSharp: Flag
      VB: Flag
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Flag
      VB: JoshAaronMiller.INaturalist.Flag
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Flag
      path: ''
      startLine: 1913
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Flag : JsonObject<Flag>
        VB: >-
          <Serializable>

          Public Class Flag

              Inherits JsonObject(Of Flag)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}.ToJson(JoshAaronMiller.INaturalist.Flag)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Flag.flaggable_type
      commentId: F:JoshAaronMiller.INaturalist.Flag.flaggable_type
      language: CSharp
      name:
        CSharp: flaggable_type
        VB: flaggable_type
      nameWithType:
        CSharp: Flag.flaggable_type
        VB: Flag.flaggable_type
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Flag.flaggable_type
        VB: JoshAaronMiller.INaturalist.Flag.flaggable_type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flaggable_type
        path: ''
        startLine: 1916
      syntax:
        content:
          CSharp: public string flaggable_type
          VB: Public flaggable_type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Flag.flaggable_id
      commentId: F:JoshAaronMiller.INaturalist.Flag.flaggable_id
      language: CSharp
      name:
        CSharp: flaggable_id
        VB: flaggable_id
      nameWithType:
        CSharp: Flag.flaggable_id
        VB: Flag.flaggable_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Flag.flaggable_id
        VB: JoshAaronMiller.INaturalist.Flag.flaggable_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flaggable_id
        path: ''
        startLine: 1917
      syntax:
        content:
          CSharp: public int flaggable_id
          VB: Public flaggable_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Flag.flag
      commentId: F:JoshAaronMiller.INaturalist.Flag.flag
      language: CSharp
      name:
        CSharp: flag
        VB: flag
      nameWithType:
        CSharp: Flag.flag
        VB: Flag.flag
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Flag.flag
        VB: JoshAaronMiller.INaturalist.Flag.flag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flag
        path: ''
        startLine: 1918
      syntax:
        content:
          CSharp: public string flag
          VB: Public flag As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.WrappedFlag
    commentId: T:JoshAaronMiller.INaturalist.WrappedFlag
    language: CSharp
    name:
      CSharp: WrappedFlag
      VB: WrappedFlag
    nameWithType:
      CSharp: WrappedFlag
      VB: WrappedFlag
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.WrappedFlag
      VB: JoshAaronMiller.INaturalist.WrappedFlag
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: WrappedFlag
      path: ''
      startLine: 1921
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class WrappedFlag : JsonObject<WrappedFlag>
        VB: >-
          <Serializable>

          Public Class WrappedFlag

              Inherits JsonObject(Of WrappedFlag)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}.ToJson(JoshAaronMiller.INaturalist.WrappedFlag)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.WrappedFlag.flag
      commentId: F:JoshAaronMiller.INaturalist.WrappedFlag.flag
      language: CSharp
      name:
        CSharp: flag
        VB: flag
      nameWithType:
        CSharp: WrappedFlag.flag
        VB: WrappedFlag.flag
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.WrappedFlag.flag
        VB: JoshAaronMiller.INaturalist.WrappedFlag.flag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flag
        path: ''
        startLine: 1924
      syntax:
        content:
          CSharp: public Flag flag
          VB: Public flag As Flag
        return:
          type: JoshAaronMiller.INaturalist.Flag
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.WrappedFlag.flag_explanation
      commentId: F:JoshAaronMiller.INaturalist.WrappedFlag.flag_explanation
      language: CSharp
      name:
        CSharp: flag_explanation
        VB: flag_explanation
      nameWithType:
        CSharp: WrappedFlag.flag_explanation
        VB: WrappedFlag.flag_explanation
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.WrappedFlag.flag_explanation
        VB: JoshAaronMiller.INaturalist.WrappedFlag.flag_explanation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flag_explanation
        path: ''
        startLine: 1925
      syntax:
        content:
          CSharp: public string flag_explanation
          VB: Public flag_explanation As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.FlagCounts
    commentId: T:JoshAaronMiller.INaturalist.FlagCounts
    language: CSharp
    name:
      CSharp: FlagCounts
      VB: FlagCounts
    nameWithType:
      CSharp: FlagCounts
      VB: FlagCounts
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.FlagCounts
      VB: JoshAaronMiller.INaturalist.FlagCounts
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: FlagCounts
      path: ''
      startLine: 1935
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class FlagCounts : JsonObject<FlagCounts>
        VB: >-
          <Serializable>

          Public Class FlagCounts

              Inherits JsonObject(Of FlagCounts)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}.ToJson(JoshAaronMiller.INaturalist.FlagCounts)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.FlagCounts.resolved
      commentId: F:JoshAaronMiller.INaturalist.FlagCounts.resolved
      language: CSharp
      name:
        CSharp: resolved
        VB: resolved
      nameWithType:
        CSharp: FlagCounts.resolved
        VB: FlagCounts.resolved
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.FlagCounts.resolved
        VB: JoshAaronMiller.INaturalist.FlagCounts.resolved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: resolved
        path: ''
        startLine: 1938
      syntax:
        content:
          CSharp: public int resolved
          VB: Public resolved As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.FlagCounts.unresolved
      commentId: F:JoshAaronMiller.INaturalist.FlagCounts.unresolved
      language: CSharp
      name:
        CSharp: unresolved
        VB: unresolved
      nameWithType:
        CSharp: FlagCounts.unresolved
        VB: FlagCounts.unresolved
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.FlagCounts.unresolved
        VB: JoshAaronMiller.INaturalist.FlagCounts.unresolved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: unresolved
        path: ''
        startLine: 1939
      syntax:
        content:
          CSharp: public int unresolved
          VB: Public unresolved As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.GeoJson
    commentId: T:JoshAaronMiller.INaturalist.GeoJson
    language: CSharp
    name:
      CSharp: GeoJson
      VB: GeoJson
    nameWithType:
      CSharp: GeoJson
      VB: GeoJson
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.GeoJson
      VB: JoshAaronMiller.INaturalist.GeoJson
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: GeoJson
      path: ''
      startLine: 1949
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class GeoJson : JsonObject<GeoJson>
        VB: >-
          <Serializable>

          Public Class GeoJson

              Inherits JsonObject(Of GeoJson)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}.ToJson(JoshAaronMiller.INaturalist.GeoJson)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.GeoJson.type
      commentId: F:JoshAaronMiller.INaturalist.GeoJson.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: GeoJson.type
        VB: GeoJson.type
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.GeoJson.type
        VB: JoshAaronMiller.INaturalist.GeoJson.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: type
        path: ''
        startLine: 1952
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.GeoJson.coordinates
      commentId: F:JoshAaronMiller.INaturalist.GeoJson.coordinates
      language: CSharp
      name:
        CSharp: coordinates
        VB: coordinates
      nameWithType:
        CSharp: GeoJson.coordinates
        VB: GeoJson.coordinates
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.GeoJson.coordinates
        VB: JoshAaronMiller.INaturalist.GeoJson.coordinates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: coordinates
        path: ''
        startLine: 1953
      syntax:
        content:
          CSharp: public string coordinates
          VB: Public coordinates As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.GeometryGeoJson
    commentId: T:JoshAaronMiller.INaturalist.GeometryGeoJson
    language: CSharp
    name:
      CSharp: GeometryGeoJson
      VB: GeometryGeoJson
    nameWithType:
      CSharp: GeometryGeoJson
      VB: GeometryGeoJson
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.GeometryGeoJson
      VB: JoshAaronMiller.INaturalist.GeometryGeoJson
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: GeometryGeoJson
      path: ''
      startLine: 1964
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class GeometryGeoJson : JsonObject<GeometryGeoJson>
        VB: >-
          <Serializable>

          Public Class GeometryGeoJson

              Inherits JsonObject(Of GeometryGeoJson)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.GeometryGeoJson.type
      commentId: F:JoshAaronMiller.INaturalist.GeometryGeoJson.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: GeometryGeoJson.type
        VB: GeometryGeoJson.type
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.GeometryGeoJson.type
        VB: JoshAaronMiller.INaturalist.GeometryGeoJson.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: type
        path: ''
        startLine: 1967
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
      commentId: F:JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
      language: CSharp
      name:
        CSharp: coordinates
        VB: coordinates
      nameWithType:
        CSharp: GeometryGeoJson.coordinates
        VB: GeometryGeoJson.coordinates
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
        VB: JoshAaronMiller.INaturalist.GeometryGeoJson.coordinates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: coordinates
        path: ''
        startLine: 1968
      syntax:
        content:
          CSharp: public List<List<List<int>>> coordinates
          VB: Public coordinates As List(Of List(Of List(Of Integer)))
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Identification
    commentId: T:JoshAaronMiller.INaturalist.Identification
    language: CSharp
    name:
      CSharp: Identification
      VB: Identification
    nameWithType:
      CSharp: Identification
      VB: Identification
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Identification
      VB: JoshAaronMiller.INaturalist.Identification
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Identification
      path: ''
      startLine: 1977
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Identification : JsonObject<Identification>
        VB: >-
          <Serializable>

          Public Class Identification

              Inherits JsonObject(Of Identification)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}.ToJson(JoshAaronMiller.INaturalist.Identification)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Identification.hidden
      commentId: F:JoshAaronMiller.INaturalist.Identification.hidden
      language: CSharp
      name:
        CSharp: hidden
        VB: hidden
      nameWithType:
        CSharp: Identification.hidden
        VB: Identification.hidden
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.hidden
        VB: JoshAaronMiller.INaturalist.Identification.hidden
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: hidden
        path: ''
        startLine: 1980
      syntax:
        content:
          CSharp: public bool hidden
          VB: Public hidden As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.created_at
      commentId: F:JoshAaronMiller.INaturalist.Identification.created_at
      language: CSharp
      name:
        CSharp: created_at
        VB: created_at
      nameWithType:
        CSharp: Identification.created_at
        VB: Identification.created_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.created_at
        VB: JoshAaronMiller.INaturalist.Identification.created_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at
        path: ''
        startLine: 1983
      syntax:
        content:
          CSharp: public string created_at
          VB: Public created_at As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.taxon_id
      commentId: F:JoshAaronMiller.INaturalist.Identification.taxon_id
      language: CSharp
      name:
        CSharp: taxon_id
        VB: taxon_id
      nameWithType:
        CSharp: Identification.taxon_id
        VB: Identification.taxon_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.taxon_id
        VB: JoshAaronMiller.INaturalist.Identification.taxon_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon_id
        path: ''
        startLine: 1984
      syntax:
        content:
          CSharp: public int taxon_id
          VB: Public taxon_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.own_observation
      commentId: F:JoshAaronMiller.INaturalist.Identification.own_observation
      language: CSharp
      name:
        CSharp: own_observation
        VB: own_observation
      nameWithType:
        CSharp: Identification.own_observation
        VB: Identification.own_observation
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.own_observation
        VB: JoshAaronMiller.INaturalist.Identification.own_observation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: own_observation
        path: ''
        startLine: 1986
      syntax:
        content:
          CSharp: public bool own_observation
          VB: Public own_observation As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.uuid
      commentId: F:JoshAaronMiller.INaturalist.Identification.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: Identification.uuid
        VB: Identification.uuid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.uuid
        VB: JoshAaronMiller.INaturalist.Identification.uuid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uuid
        path: ''
        startLine: 1987
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.vision
      commentId: F:JoshAaronMiller.INaturalist.Identification.vision
      language: CSharp
      name:
        CSharp: vision
        VB: vision
      nameWithType:
        CSharp: Identification.vision
        VB: Identification.vision
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.vision
        VB: JoshAaronMiller.INaturalist.Identification.vision
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: vision
        path: ''
        startLine: 1990
      syntax:
        content:
          CSharp: public bool vision
          VB: Public vision As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.current
      commentId: F:JoshAaronMiller.INaturalist.Identification.current
      language: CSharp
      name:
        CSharp: current
        VB: current
      nameWithType:
        CSharp: Identification.current
        VB: Identification.current
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.current
        VB: JoshAaronMiller.INaturalist.Identification.current
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: current
        path: ''
        startLine: 1991
      syntax:
        content:
          CSharp: public bool current
          VB: Public current As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.id
      commentId: F:JoshAaronMiller.INaturalist.Identification.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: Identification.id
        VB: Identification.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.id
        VB: JoshAaronMiller.INaturalist.Identification.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 1992
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.created_at_details
      commentId: F:JoshAaronMiller.INaturalist.Identification.created_at_details
      language: CSharp
      name:
        CSharp: created_at_details
        VB: created_at_details
      nameWithType:
        CSharp: Identification.created_at_details
        VB: Identification.created_at_details
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.created_at_details
        VB: JoshAaronMiller.INaturalist.Identification.created_at_details
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at_details
        path: ''
        startLine: 1993
      syntax:
        content:
          CSharp: public TimeDetails created_at_details
          VB: Public created_at_details As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.category
      commentId: F:JoshAaronMiller.INaturalist.Identification.category
      language: CSharp
      name:
        CSharp: category
        VB: category
      nameWithType:
        CSharp: Identification.category
        VB: Identification.category
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.category
        VB: JoshAaronMiller.INaturalist.Identification.category
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: category
        path: ''
        startLine: 1994
      syntax:
        content:
          CSharp: public string category
          VB: Public category As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.spam
      commentId: F:JoshAaronMiller.INaturalist.Identification.spam
      language: CSharp
      name:
        CSharp: spam
        VB: spam
      nameWithType:
        CSharp: Identification.spam
        VB: Identification.spam
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.spam
        VB: JoshAaronMiller.INaturalist.Identification.spam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: spam
        path: ''
        startLine: 1995
      syntax:
        content:
          CSharp: public bool spam
          VB: Public spam As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.user
      commentId: F:JoshAaronMiller.INaturalist.Identification.user
      language: CSharp
      name:
        CSharp: user
        VB: user
      nameWithType:
        CSharp: Identification.user
        VB: Identification.user
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.user
        VB: JoshAaronMiller.INaturalist.Identification.user
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: user
        path: ''
        startLine: 1996
      syntax:
        content:
          CSharp: public User user
          VB: Public user As User
        return:
          type: JoshAaronMiller.INaturalist.User
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.previous_observation_taxon_id
      commentId: F:JoshAaronMiller.INaturalist.Identification.previous_observation_taxon_id
      language: CSharp
      name:
        CSharp: previous_observation_taxon_id
        VB: previous_observation_taxon_id
      nameWithType:
        CSharp: Identification.previous_observation_taxon_id
        VB: Identification.previous_observation_taxon_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.previous_observation_taxon_id
        VB: JoshAaronMiller.INaturalist.Identification.previous_observation_taxon_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: previous_observation_taxon_id
        path: ''
        startLine: 1997
      syntax:
        content:
          CSharp: public int previous_observation_taxon_id
          VB: Public previous_observation_taxon_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Identification.taxon
      commentId: F:JoshAaronMiller.INaturalist.Identification.taxon
      language: CSharp
      name:
        CSharp: taxon
        VB: taxon
      nameWithType:
        CSharp: Identification.taxon
        VB: Identification.taxon
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Identification.taxon
        VB: JoshAaronMiller.INaturalist.Identification.taxon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon
        path: ''
        startLine: 1998
      syntax:
        content:
          CSharp: public Taxon taxon
          VB: Public taxon As Taxon
        return:
          type: JoshAaronMiller.INaturalist.Taxon
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
    commentId: T:JoshAaronMiller.INaturalist.IdentificationCategoryCount
    language: CSharp
    name:
      CSharp: IdentificationCategoryCount
      VB: IdentificationCategoryCount
    nameWithType:
      CSharp: IdentificationCategoryCount
      VB: IdentificationCategoryCount
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      VB: JoshAaronMiller.INaturalist.IdentificationCategoryCount
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: IdentificationCategoryCount
      path: ''
      startLine: 2008
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class IdentificationCategoryCount : JsonObject<IdentificationCategoryCount>
        VB: >-
          <Serializable>

          Public Class IdentificationCategoryCount

              Inherits JsonObject(Of IdentificationCategoryCount)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}.ToJson(JoshAaronMiller.INaturalist.IdentificationCategoryCount)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount.category
      commentId: F:JoshAaronMiller.INaturalist.IdentificationCategoryCount.category
      language: CSharp
      name:
        CSharp: category
        VB: category
      nameWithType:
        CSharp: IdentificationCategoryCount.category
        VB: IdentificationCategoryCount.category
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationCategoryCount.category
        VB: JoshAaronMiller.INaturalist.IdentificationCategoryCount.category
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: category
        path: ''
        startLine: 2011
      syntax:
        content:
          CSharp: public string category
          VB: Public category As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount.count
      commentId: F:JoshAaronMiller.INaturalist.IdentificationCategoryCount.count
      language: CSharp
      name:
        CSharp: count
        VB: count
      nameWithType:
        CSharp: IdentificationCategoryCount.count
        VB: IdentificationCategoryCount.count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationCategoryCount.count
        VB: JoshAaronMiller.INaturalist.IdentificationCategoryCount.count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: count
        path: ''
        startLine: 2012
      syntax:
        content:
          CSharp: public int count
          VB: Public count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.SpeciesCount
    commentId: T:JoshAaronMiller.INaturalist.SpeciesCount
    language: CSharp
    name:
      CSharp: SpeciesCount
      VB: SpeciesCount
    nameWithType:
      CSharp: SpeciesCount
      VB: SpeciesCount
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.SpeciesCount
      VB: JoshAaronMiller.INaturalist.SpeciesCount
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: SpeciesCount
      path: ''
      startLine: 2022
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SpeciesCount : JsonObject<SpeciesCount>
        VB: >-
          <Serializable>

          Public Class SpeciesCount

              Inherits JsonObject(Of SpeciesCount)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}.ToJson(JoshAaronMiller.INaturalist.SpeciesCount)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.SpeciesCount.count
      commentId: F:JoshAaronMiller.INaturalist.SpeciesCount.count
      language: CSharp
      name:
        CSharp: count
        VB: count
      nameWithType:
        CSharp: SpeciesCount.count
        VB: SpeciesCount.count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SpeciesCount.count
        VB: JoshAaronMiller.INaturalist.SpeciesCount.count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: count
        path: ''
        startLine: 2025
      syntax:
        content:
          CSharp: public int count
          VB: Public count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.SpeciesCount.taxon
      commentId: F:JoshAaronMiller.INaturalist.SpeciesCount.taxon
      language: CSharp
      name:
        CSharp: taxon
        VB: taxon
      nameWithType:
        CSharp: SpeciesCount.taxon
        VB: SpeciesCount.taxon
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SpeciesCount.taxon
        VB: JoshAaronMiller.INaturalist.SpeciesCount.taxon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon
        path: ''
        startLine: 2026
      syntax:
        content:
          CSharp: public Taxon taxon
          VB: Public taxon As Taxon
        return:
          type: JoshAaronMiller.INaturalist.Taxon
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.IdentificationSubmission
    commentId: T:JoshAaronMiller.INaturalist.IdentificationSubmission
    language: CSharp
    name:
      CSharp: IdentificationSubmission
      VB: IdentificationSubmission
    nameWithType:
      CSharp: IdentificationSubmission
      VB: IdentificationSubmission
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.IdentificationSubmission
      VB: JoshAaronMiller.INaturalist.IdentificationSubmission
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: IdentificationSubmission
      path: ''
      startLine: 2035
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class IdentificationSubmission : JsonObject<IdentificationSubmission>
        VB: >-
          <Serializable>

          Public Class IdentificationSubmission

              Inherits JsonObject(Of IdentificationSubmission)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}.ToJson(JoshAaronMiller.INaturalist.IdentificationSubmission)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.IdentificationSubmission.observation_id
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSubmission.observation_id
      language: CSharp
      name:
        CSharp: observation_id
        VB: observation_id
      nameWithType:
        CSharp: IdentificationSubmission.observation_id
        VB: IdentificationSubmission.observation_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSubmission.observation_id
        VB: JoshAaronMiller.INaturalist.IdentificationSubmission.observation_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observation_id
        path: ''
        startLine: 2038
      syntax:
        content:
          CSharp: public int observation_id
          VB: Public observation_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSubmission.taxon_id
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSubmission.taxon_id
      language: CSharp
      name:
        CSharp: taxon_id
        VB: taxon_id
      nameWithType:
        CSharp: IdentificationSubmission.taxon_id
        VB: IdentificationSubmission.taxon_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSubmission.taxon_id
        VB: JoshAaronMiller.INaturalist.IdentificationSubmission.taxon_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon_id
        path: ''
        startLine: 2039
      syntax:
        content:
          CSharp: public int taxon_id
          VB: Public taxon_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSubmission.current
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSubmission.current
      language: CSharp
      name:
        CSharp: current
        VB: current
      nameWithType:
        CSharp: IdentificationSubmission.current
        VB: IdentificationSubmission.current
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSubmission.current
        VB: JoshAaronMiller.INaturalist.IdentificationSubmission.current
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: current
        path: ''
        startLine: 2040
      syntax:
        content:
          CSharp: public bool current
          VB: Public current As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSubmission.body
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSubmission.body
      language: CSharp
      name:
        CSharp: body
        VB: body
      nameWithType:
        CSharp: IdentificationSubmission.body
        VB: IdentificationSubmission.body
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSubmission.body
        VB: JoshAaronMiller.INaturalist.IdentificationSubmission.body
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: body
        path: ''
        startLine: 2041
      syntax:
        content:
          CSharp: public string body
          VB: Public body As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
    commentId: T:JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
    language: CSharp
    name:
      CSharp: WrappedIdentificationSubmission
      VB: WrappedIdentificationSubmission
    nameWithType:
      CSharp: WrappedIdentificationSubmission
      VB: WrappedIdentificationSubmission
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
      VB: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: WrappedIdentificationSubmission
      path: ''
      startLine: 2044
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class WrappedIdentificationSubmission : JsonObject<WrappedIdentificationSubmission>
        VB: >-
          <Serializable>

          Public Class WrappedIdentificationSubmission

              Inherits JsonObject(Of WrappedIdentificationSubmission)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}.ToJson(JoshAaronMiller.INaturalist.WrappedIdentificationSubmission)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission.identification
      commentId: F:JoshAaronMiller.INaturalist.WrappedIdentificationSubmission.identification
      language: CSharp
      name:
        CSharp: identification
        VB: identification
      nameWithType:
        CSharp: WrappedIdentificationSubmission.identification
        VB: WrappedIdentificationSubmission.identification
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission.identification
        VB: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission.identification
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: identification
        path: ''
        startLine: 2047
      syntax:
        content:
          CSharp: public IdentificationSubmission identification
          VB: Public identification As IdentificationSubmission
        return:
          type: JoshAaronMiller.INaturalist.IdentificationSubmission
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.JsonObject`1
    commentId: T:JoshAaronMiller.INaturalist.JsonObject`1
    language: CSharp
    name:
      CSharp: JsonObject<T>
      VB: JsonObject(Of T)
    nameWithType:
      CSharp: JsonObject<T>
      VB: JsonObject(Of T)
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.JsonObject<T>
      VB: JoshAaronMiller.INaturalist.JsonObject(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: JsonObject
      path: ''
      startLine: 2057
    syntax:
      content:
        CSharp: public abstract class JsonObject<T>
        VB: Public MustInherit Class JsonObject(Of T)
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
      commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
      language: CSharp
      name:
        CSharp: CreateFromJson(String)
        VB: CreateFromJson(String)
      nameWithType:
        CSharp: JsonObject<T>.CreateFromJson(String)
        VB: JsonObject(Of T).CreateFromJson(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson(System.String)
        VB: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreateFromJson
        path: ''
        startLine: 2059
      syntax:
        content:
          CSharp: public static T CreateFromJson(string jsonString)
          VB: Public Shared Function CreateFromJson(jsonString As String) As T
        parameters:
        - id: jsonString
          type: System.String
        return:
          type: '{T}'
      overload: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
      commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
      language: CSharp
      name:
        CSharp: ToJson(T)
        VB: ToJson(T)
      nameWithType:
        CSharp: JsonObject<T>.ToJson(T)
        VB: JsonObject(Of T).ToJson(T)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson(T)
        VB: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ToJson
        path: ''
        startLine: 2064
      syntax:
        content:
          CSharp: public static string ToJson(T obj)
          VB: Public Shared Function ToJson(obj As T) As String
        parameters:
        - id: obj
          type: '{T}'
        return:
          type: System.String
      overload: JoshAaronMiller.INaturalist.JsonObject`1.ToJson*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: JoshAaronMiller.INaturalist.Observation
    commentId: T:JoshAaronMiller.INaturalist.Observation
    language: CSharp
    name:
      CSharp: Observation
      VB: Observation
    nameWithType:
      CSharp: Observation
      VB: Observation
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Observation
      VB: JoshAaronMiller.INaturalist.Observation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Observation
      path: ''
      startLine: 2081
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Observation : JsonObject<Observation>
        VB: >-
          <Serializable>

          Public Class Observation

              Inherits JsonObject(Of Observation)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}.ToJson(JoshAaronMiller.INaturalist.Observation)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Observation.quality_grade
      commentId: F:JoshAaronMiller.INaturalist.Observation.quality_grade
      language: CSharp
      name:
        CSharp: quality_grade
        VB: quality_grade
      nameWithType:
        CSharp: Observation.quality_grade
        VB: Observation.quality_grade
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.quality_grade
        VB: JoshAaronMiller.INaturalist.Observation.quality_grade
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: quality_grade
        path: ''
        startLine: 2088
      syntax:
        content:
          CSharp: public string quality_grade
          VB: Public quality_grade As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.time_observed_at
      commentId: F:JoshAaronMiller.INaturalist.Observation.time_observed_at
      language: CSharp
      name:
        CSharp: time_observed_at
        VB: time_observed_at
      nameWithType:
        CSharp: Observation.time_observed_at
        VB: Observation.time_observed_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.time_observed_at
        VB: JoshAaronMiller.INaturalist.Observation.time_observed_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: time_observed_at
        path: ''
        startLine: 2089
      syntax:
        content:
          CSharp: public string time_observed_at
          VB: Public time_observed_at As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.taxon_geoprivacy
      commentId: F:JoshAaronMiller.INaturalist.Observation.taxon_geoprivacy
      language: CSharp
      name:
        CSharp: taxon_geoprivacy
        VB: taxon_geoprivacy
      nameWithType:
        CSharp: Observation.taxon_geoprivacy
        VB: Observation.taxon_geoprivacy
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.taxon_geoprivacy
        VB: JoshAaronMiller.INaturalist.Observation.taxon_geoprivacy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon_geoprivacy
        path: ''
        startLine: 2090
      syntax:
        content:
          CSharp: public string taxon_geoprivacy
          VB: Public taxon_geoprivacy As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.annotations
      commentId: F:JoshAaronMiller.INaturalist.Observation.annotations
      language: CSharp
      name:
        CSharp: annotations
        VB: annotations
      nameWithType:
        CSharp: Observation.annotations
        VB: Observation.annotations
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.annotations
        VB: JoshAaronMiller.INaturalist.Observation.annotations
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: annotations
        path: ''
        startLine: 2091
      syntax:
        content:
          CSharp: public List<Annotation> annotations
          VB: Public annotations As List(Of Annotation)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Annotation}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.uuid
      commentId: F:JoshAaronMiller.INaturalist.Observation.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: Observation.uuid
        VB: Observation.uuid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.uuid
        VB: JoshAaronMiller.INaturalist.Observation.uuid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uuid
        path: ''
        startLine: 2092
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.observed_on_details
      commentId: F:JoshAaronMiller.INaturalist.Observation.observed_on_details
      language: CSharp
      name:
        CSharp: observed_on_details
        VB: observed_on_details
      nameWithType:
        CSharp: Observation.observed_on_details
        VB: Observation.observed_on_details
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.observed_on_details
        VB: JoshAaronMiller.INaturalist.Observation.observed_on_details
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observed_on_details
        path: ''
        startLine: 2093
      syntax:
        content:
          CSharp: public TimeDetails observed_on_details
          VB: Public observed_on_details As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.id
      commentId: F:JoshAaronMiller.INaturalist.Observation.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: Observation.id
        VB: Observation.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.id
        VB: JoshAaronMiller.INaturalist.Observation.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2094
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.cached_votes_total
      commentId: F:JoshAaronMiller.INaturalist.Observation.cached_votes_total
      language: CSharp
      name:
        CSharp: cached_votes_total
        VB: cached_votes_total
      nameWithType:
        CSharp: Observation.cached_votes_total
        VB: Observation.cached_votes_total
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.cached_votes_total
        VB: JoshAaronMiller.INaturalist.Observation.cached_votes_total
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: cached_votes_total
        path: ''
        startLine: 2095
      syntax:
        content:
          CSharp: public int cached_votes_total
          VB: Public cached_votes_total As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.identifications_most_agree
      commentId: F:JoshAaronMiller.INaturalist.Observation.identifications_most_agree
      language: CSharp
      name:
        CSharp: identifications_most_agree
        VB: identifications_most_agree
      nameWithType:
        CSharp: Observation.identifications_most_agree
        VB: Observation.identifications_most_agree
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.identifications_most_agree
        VB: JoshAaronMiller.INaturalist.Observation.identifications_most_agree
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: identifications_most_agree
        path: ''
        startLine: 2096
      syntax:
        content:
          CSharp: public bool identifications_most_agree
          VB: Public identifications_most_agree As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.created_at_details
      commentId: F:JoshAaronMiller.INaturalist.Observation.created_at_details
      language: CSharp
      name:
        CSharp: created_at_details
        VB: created_at_details
      nameWithType:
        CSharp: Observation.created_at_details
        VB: Observation.created_at_details
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.created_at_details
        VB: JoshAaronMiller.INaturalist.Observation.created_at_details
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at_details
        path: ''
        startLine: 2097
      syntax:
        content:
          CSharp: public TimeDetails created_at_details
          VB: Public created_at_details As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.species_guess
      commentId: F:JoshAaronMiller.INaturalist.Observation.species_guess
      language: CSharp
      name:
        CSharp: species_guess
        VB: species_guess
      nameWithType:
        CSharp: Observation.species_guess
        VB: Observation.species_guess
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.species_guess
        VB: JoshAaronMiller.INaturalist.Observation.species_guess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: species_guess
        path: ''
        startLine: 2098
      syntax:
        content:
          CSharp: public string species_guess
          VB: Public species_guess As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.identifications_most_disagree
      commentId: F:JoshAaronMiller.INaturalist.Observation.identifications_most_disagree
      language: CSharp
      name:
        CSharp: identifications_most_disagree
        VB: identifications_most_disagree
      nameWithType:
        CSharp: Observation.identifications_most_disagree
        VB: Observation.identifications_most_disagree
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.identifications_most_disagree
        VB: JoshAaronMiller.INaturalist.Observation.identifications_most_disagree
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: identifications_most_disagree
        path: ''
        startLine: 2099
      syntax:
        content:
          CSharp: public bool identifications_most_disagree
          VB: Public identifications_most_disagree As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.tags
      commentId: F:JoshAaronMiller.INaturalist.Observation.tags
      language: CSharp
      name:
        CSharp: tags
        VB: tags
      nameWithType:
        CSharp: Observation.tags
        VB: Observation.tags
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.tags
        VB: JoshAaronMiller.INaturalist.Observation.tags
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: tags
        path: ''
        startLine: 2100
      syntax:
        content:
          CSharp: public List<string> tags
          VB: Public tags As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.positional_accuracy
      commentId: F:JoshAaronMiller.INaturalist.Observation.positional_accuracy
      language: CSharp
      name:
        CSharp: positional_accuracy
        VB: positional_accuracy
      nameWithType:
        CSharp: Observation.positional_accuracy
        VB: Observation.positional_accuracy
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.positional_accuracy
        VB: JoshAaronMiller.INaturalist.Observation.positional_accuracy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: positional_accuracy
        path: ''
        startLine: 2101
      syntax:
        content:
          CSharp: public bool positional_accuracy
          VB: Public positional_accuracy As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.comments_count
      commentId: F:JoshAaronMiller.INaturalist.Observation.comments_count
      language: CSharp
      name:
        CSharp: comments_count
        VB: comments_count
      nameWithType:
        CSharp: Observation.comments_count
        VB: Observation.comments_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.comments_count
        VB: JoshAaronMiller.INaturalist.Observation.comments_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: comments_count
        path: ''
        startLine: 2102
      syntax:
        content:
          CSharp: public int comments_count
          VB: Public comments_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.site_id
      commentId: F:JoshAaronMiller.INaturalist.Observation.site_id
      language: CSharp
      name:
        CSharp: site_id
        VB: site_id
      nameWithType:
        CSharp: Observation.site_id
        VB: Observation.site_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.site_id
        VB: JoshAaronMiller.INaturalist.Observation.site_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: site_id
        path: ''
        startLine: 2103
      syntax:
        content:
          CSharp: public int site_id
          VB: Public site_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.created_time_zone
      commentId: F:JoshAaronMiller.INaturalist.Observation.created_time_zone
      language: CSharp
      name:
        CSharp: created_time_zone
        VB: created_time_zone
      nameWithType:
        CSharp: Observation.created_time_zone
        VB: Observation.created_time_zone
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.created_time_zone
        VB: JoshAaronMiller.INaturalist.Observation.created_time_zone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_time_zone
        path: ''
        startLine: 2104
      syntax:
        content:
          CSharp: public string created_time_zone
          VB: Public created_time_zone As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.license_code
      commentId: F:JoshAaronMiller.INaturalist.Observation.license_code
      language: CSharp
      name:
        CSharp: license_code
        VB: license_code
      nameWithType:
        CSharp: Observation.license_code
        VB: Observation.license_code
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.license_code
        VB: JoshAaronMiller.INaturalist.Observation.license_code
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: license_code
        path: ''
        startLine: 2105
      syntax:
        content:
          CSharp: public string license_code
          VB: Public license_code As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.observed_time_zone
      commentId: F:JoshAaronMiller.INaturalist.Observation.observed_time_zone
      language: CSharp
      name:
        CSharp: observed_time_zone
        VB: observed_time_zone
      nameWithType:
        CSharp: Observation.observed_time_zone
        VB: Observation.observed_time_zone
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.observed_time_zone
        VB: JoshAaronMiller.INaturalist.Observation.observed_time_zone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observed_time_zone
        path: ''
        startLine: 2106
      syntax:
        content:
          CSharp: public string observed_time_zone
          VB: Public observed_time_zone As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.reviewed_by
      commentId: F:JoshAaronMiller.INaturalist.Observation.reviewed_by
      language: CSharp
      name:
        CSharp: reviewed_by
        VB: reviewed_by
      nameWithType:
        CSharp: Observation.reviewed_by
        VB: Observation.reviewed_by
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.reviewed_by
        VB: JoshAaronMiller.INaturalist.Observation.reviewed_by
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: reviewed_by
        path: ''
        startLine: 2109
      syntax:
        content:
          CSharp: public List<int> reviewed_by
          VB: Public reviewed_by As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.oauth_application_id
      commentId: F:JoshAaronMiller.INaturalist.Observation.oauth_application_id
      language: CSharp
      name:
        CSharp: oauth_application_id
        VB: oauth_application_id
      nameWithType:
        CSharp: Observation.oauth_application_id
        VB: Observation.oauth_application_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.oauth_application_id
        VB: JoshAaronMiller.INaturalist.Observation.oauth_application_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: oauth_application_id
        path: ''
        startLine: 2110
      syntax:
        content:
          CSharp: public int oauth_application_id
          VB: Public oauth_application_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.created_at
      commentId: F:JoshAaronMiller.INaturalist.Observation.created_at
      language: CSharp
      name:
        CSharp: created_at
        VB: created_at
      nameWithType:
        CSharp: Observation.created_at
        VB: Observation.created_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.created_at
        VB: JoshAaronMiller.INaturalist.Observation.created_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at
        path: ''
        startLine: 2112
      syntax:
        content:
          CSharp: public string created_at
          VB: Public created_at As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.description
      commentId: F:JoshAaronMiller.INaturalist.Observation.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: Observation.description
        VB: Observation.description
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.description
        VB: JoshAaronMiller.INaturalist.Observation.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: description
        path: ''
        startLine: 2113
      syntax:
        content:
          CSharp: public string description
          VB: Public description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.time_zone_offset
      commentId: F:JoshAaronMiller.INaturalist.Observation.time_zone_offset
      language: CSharp
      name:
        CSharp: time_zone_offset
        VB: time_zone_offset
      nameWithType:
        CSharp: Observation.time_zone_offset
        VB: Observation.time_zone_offset
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.time_zone_offset
        VB: JoshAaronMiller.INaturalist.Observation.time_zone_offset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: time_zone_offset
        path: ''
        startLine: 2114
      syntax:
        content:
          CSharp: public string time_zone_offset
          VB: Public time_zone_offset As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.project_ids_with_curator_id
      commentId: F:JoshAaronMiller.INaturalist.Observation.project_ids_with_curator_id
      language: CSharp
      name:
        CSharp: project_ids_with_curator_id
        VB: project_ids_with_curator_id
      nameWithType:
        CSharp: Observation.project_ids_with_curator_id
        VB: Observation.project_ids_with_curator_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.project_ids_with_curator_id
        VB: JoshAaronMiller.INaturalist.Observation.project_ids_with_curator_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: project_ids_with_curator_id
        path: ''
        startLine: 2115
      syntax:
        content:
          CSharp: public List<int> project_ids_with_curator_id
          VB: Public project_ids_with_curator_id As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.observed_on
      commentId: F:JoshAaronMiller.INaturalist.Observation.observed_on
      language: CSharp
      name:
        CSharp: observed_on
        VB: observed_on
      nameWithType:
        CSharp: Observation.observed_on
        VB: Observation.observed_on
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.observed_on
        VB: JoshAaronMiller.INaturalist.Observation.observed_on
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observed_on
        path: ''
        startLine: 2116
      syntax:
        content:
          CSharp: public string observed_on
          VB: Public observed_on As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.observed_on_string
      commentId: F:JoshAaronMiller.INaturalist.Observation.observed_on_string
      language: CSharp
      name:
        CSharp: observed_on_string
        VB: observed_on_string
      nameWithType:
        CSharp: Observation.observed_on_string
        VB: Observation.observed_on_string
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.observed_on_string
        VB: JoshAaronMiller.INaturalist.Observation.observed_on_string
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observed_on_string
        path: ''
        startLine: 2117
      syntax:
        content:
          CSharp: public string observed_on_string
          VB: Public observed_on_string As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.updated_at
      commentId: F:JoshAaronMiller.INaturalist.Observation.updated_at
      language: CSharp
      name:
        CSharp: updated_at
        VB: updated_at
      nameWithType:
        CSharp: Observation.updated_at
        VB: Observation.updated_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.updated_at
        VB: JoshAaronMiller.INaturalist.Observation.updated_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: updated_at
        path: ''
        startLine: 2118
      syntax:
        content:
          CSharp: public string updated_at
          VB: Public updated_at As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.photos
      commentId: F:JoshAaronMiller.INaturalist.Observation.photos
      language: CSharp
      name:
        CSharp: photos
        VB: photos
      nameWithType:
        CSharp: Observation.photos
        VB: Observation.photos
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.photos
        VB: JoshAaronMiller.INaturalist.Observation.photos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: photos
        path: ''
        startLine: 2119
      syntax:
        content:
          CSharp: public List<PhotoJson> photos
          VB: Public photos As List(Of PhotoJson)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.PhotoJson}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.sounds
      commentId: F:JoshAaronMiller.INaturalist.Observation.sounds
      language: CSharp
      name:
        CSharp: sounds
        VB: sounds
      nameWithType:
        CSharp: Observation.sounds
        VB: Observation.sounds
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.sounds
        VB: JoshAaronMiller.INaturalist.Observation.sounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: sounds
        path: ''
        startLine: 2120
      syntax:
        content:
          CSharp: public List<Sound> sounds
          VB: Public sounds As List(Of Sound)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Sound}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.place_ids
      commentId: F:JoshAaronMiller.INaturalist.Observation.place_ids
      language: CSharp
      name:
        CSharp: place_ids
        VB: place_ids
      nameWithType:
        CSharp: Observation.place_ids
        VB: Observation.place_ids
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.place_ids
        VB: JoshAaronMiller.INaturalist.Observation.place_ids
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: place_ids
        path: ''
        startLine: 2121
      syntax:
        content:
          CSharp: public List<int> place_ids
          VB: Public place_ids As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.captive
      commentId: F:JoshAaronMiller.INaturalist.Observation.captive
      language: CSharp
      name:
        CSharp: captive
        VB: captive
      nameWithType:
        CSharp: Observation.captive
        VB: Observation.captive
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.captive
        VB: JoshAaronMiller.INaturalist.Observation.captive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: captive
        path: ''
        startLine: 2122
      syntax:
        content:
          CSharp: public bool captive
          VB: Public captive As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.taxon
      commentId: F:JoshAaronMiller.INaturalist.Observation.taxon
      language: CSharp
      name:
        CSharp: taxon
        VB: taxon
      nameWithType:
        CSharp: Observation.taxon
        VB: Observation.taxon
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.taxon
        VB: JoshAaronMiller.INaturalist.Observation.taxon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon
        path: ''
        startLine: 2123
      syntax:
        content:
          CSharp: public Taxon taxon
          VB: Public taxon As Taxon
        return:
          type: JoshAaronMiller.INaturalist.Taxon
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.ident_taxon_ids
      commentId: F:JoshAaronMiller.INaturalist.Observation.ident_taxon_ids
      language: CSharp
      name:
        CSharp: ident_taxon_ids
        VB: ident_taxon_ids
      nameWithType:
        CSharp: Observation.ident_taxon_ids
        VB: Observation.ident_taxon_ids
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.ident_taxon_ids
        VB: JoshAaronMiller.INaturalist.Observation.ident_taxon_ids
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ident_taxon_ids
        path: ''
        startLine: 2124
      syntax:
        content:
          CSharp: public List<int> ident_taxon_ids
          VB: Public ident_taxon_ids As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.outlinks
      commentId: F:JoshAaronMiller.INaturalist.Observation.outlinks
      language: CSharp
      name:
        CSharp: outlinks
        VB: outlinks
      nameWithType:
        CSharp: Observation.outlinks
        VB: Observation.outlinks
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.outlinks
        VB: JoshAaronMiller.INaturalist.Observation.outlinks
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: outlinks
        path: ''
        startLine: 2125
      syntax:
        content:
          CSharp: public List<Outlink> outlinks
          VB: Public outlinks As List(Of Outlink)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Outlink}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.faves_count
      commentId: F:JoshAaronMiller.INaturalist.Observation.faves_count
      language: CSharp
      name:
        CSharp: faves_count
        VB: faves_count
      nameWithType:
        CSharp: Observation.faves_count
        VB: Observation.faves_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.faves_count
        VB: JoshAaronMiller.INaturalist.Observation.faves_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: faves_count
        path: ''
        startLine: 2126
      syntax:
        content:
          CSharp: public int faves_count
          VB: Public faves_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.num_identification_agreements
      commentId: F:JoshAaronMiller.INaturalist.Observation.num_identification_agreements
      language: CSharp
      name:
        CSharp: num_identification_agreements
        VB: num_identification_agreements
      nameWithType:
        CSharp: Observation.num_identification_agreements
        VB: Observation.num_identification_agreements
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.num_identification_agreements
        VB: JoshAaronMiller.INaturalist.Observation.num_identification_agreements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: num_identification_agreements
        path: ''
        startLine: 2128
      syntax:
        content:
          CSharp: public int num_identification_agreements
          VB: Public num_identification_agreements As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.map_scale
      commentId: F:JoshAaronMiller.INaturalist.Observation.map_scale
      language: CSharp
      name:
        CSharp: map_scale
        VB: map_scale
      nameWithType:
        CSharp: Observation.map_scale
        VB: Observation.map_scale
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.map_scale
        VB: JoshAaronMiller.INaturalist.Observation.map_scale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: map_scale
        path: ''
        startLine: 2131
      syntax:
        content:
          CSharp: public int map_scale
          VB: Public map_scale As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.uri
      commentId: F:JoshAaronMiller.INaturalist.Observation.uri
      language: CSharp
      name:
        CSharp: uri
        VB: uri
      nameWithType:
        CSharp: Observation.uri
        VB: Observation.uri
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.uri
        VB: JoshAaronMiller.INaturalist.Observation.uri
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uri
        path: ''
        startLine: 2132
      syntax:
        content:
          CSharp: public string uri
          VB: Public uri As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.project_ids
      commentId: F:JoshAaronMiller.INaturalist.Observation.project_ids
      language: CSharp
      name:
        CSharp: project_ids
        VB: project_ids
      nameWithType:
        CSharp: Observation.project_ids
        VB: Observation.project_ids
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.project_ids
        VB: JoshAaronMiller.INaturalist.Observation.project_ids
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: project_ids
        path: ''
        startLine: 2133
      syntax:
        content:
          CSharp: public List<int> project_ids
          VB: Public project_ids As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.community_taxon_id
      commentId: F:JoshAaronMiller.INaturalist.Observation.community_taxon_id
      language: CSharp
      name:
        CSharp: community_taxon_id
        VB: community_taxon_id
      nameWithType:
        CSharp: Observation.community_taxon_id
        VB: Observation.community_taxon_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.community_taxon_id
        VB: JoshAaronMiller.INaturalist.Observation.community_taxon_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: community_taxon_id
        path: ''
        startLine: 2134
      syntax:
        content:
          CSharp: public int community_taxon_id
          VB: Public community_taxon_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.geojson
      commentId: F:JoshAaronMiller.INaturalist.Observation.geojson
      language: CSharp
      name:
        CSharp: geojson
        VB: geojson
      nameWithType:
        CSharp: Observation.geojson
        VB: Observation.geojson
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.geojson
        VB: JoshAaronMiller.INaturalist.Observation.geojson
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: geojson
        path: ''
        startLine: 2135
      syntax:
        content:
          CSharp: public GeoJson geojson
          VB: Public geojson As GeoJson
        return:
          type: JoshAaronMiller.INaturalist.GeoJson
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.owners_identification_from_vision
      commentId: F:JoshAaronMiller.INaturalist.Observation.owners_identification_from_vision
      language: CSharp
      name:
        CSharp: owners_identification_from_vision
        VB: owners_identification_from_vision
      nameWithType:
        CSharp: Observation.owners_identification_from_vision
        VB: Observation.owners_identification_from_vision
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.owners_identification_from_vision
        VB: JoshAaronMiller.INaturalist.Observation.owners_identification_from_vision
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: owners_identification_from_vision
        path: ''
        startLine: 2136
      syntax:
        content:
          CSharp: public bool owners_identification_from_vision
          VB: Public owners_identification_from_vision As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.identifications_count
      commentId: F:JoshAaronMiller.INaturalist.Observation.identifications_count
      language: CSharp
      name:
        CSharp: identifications_count
        VB: identifications_count
      nameWithType:
        CSharp: Observation.identifications_count
        VB: Observation.identifications_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.identifications_count
        VB: JoshAaronMiller.INaturalist.Observation.identifications_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: identifications_count
        path: ''
        startLine: 2137
      syntax:
        content:
          CSharp: public int identifications_count
          VB: Public identifications_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.obscured
      commentId: F:JoshAaronMiller.INaturalist.Observation.obscured
      language: CSharp
      name:
        CSharp: obscured
        VB: obscured
      nameWithType:
        CSharp: Observation.obscured
        VB: Observation.obscured
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.obscured
        VB: JoshAaronMiller.INaturalist.Observation.obscured
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: obscured
        path: ''
        startLine: 2138
      syntax:
        content:
          CSharp: public bool obscured
          VB: Public obscured As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.num_identification_disagreements
      commentId: F:JoshAaronMiller.INaturalist.Observation.num_identification_disagreements
      language: CSharp
      name:
        CSharp: num_identification_disagreements
        VB: num_identification_disagreements
      nameWithType:
        CSharp: Observation.num_identification_disagreements
        VB: Observation.num_identification_disagreements
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.num_identification_disagreements
        VB: JoshAaronMiller.INaturalist.Observation.num_identification_disagreements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: num_identification_disagreements
        path: ''
        startLine: 2139
      syntax:
        content:
          CSharp: public int num_identification_disagreements
          VB: Public num_identification_disagreements As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.geoprivacy
      commentId: F:JoshAaronMiller.INaturalist.Observation.geoprivacy
      language: CSharp
      name:
        CSharp: geoprivacy
        VB: geoprivacy
      nameWithType:
        CSharp: Observation.geoprivacy
        VB: Observation.geoprivacy
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.geoprivacy
        VB: JoshAaronMiller.INaturalist.Observation.geoprivacy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: geoprivacy
        path: ''
        startLine: 2140
      syntax:
        content:
          CSharp: public string geoprivacy
          VB: Public geoprivacy As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.locatioan
      commentId: F:JoshAaronMiller.INaturalist.Observation.locatioan
      language: CSharp
      name:
        CSharp: locatioan
        VB: locatioan
      nameWithType:
        CSharp: Observation.locatioan
        VB: Observation.locatioan
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.locatioan
        VB: JoshAaronMiller.INaturalist.Observation.locatioan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: locatioan
        path: ''
        startLine: 2141
      syntax:
        content:
          CSharp: public string locatioan
          VB: Public locatioan As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.user
      commentId: F:JoshAaronMiller.INaturalist.Observation.user
      language: CSharp
      name:
        CSharp: user
        VB: user
      nameWithType:
        CSharp: Observation.user
        VB: Observation.user
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.user
        VB: JoshAaronMiller.INaturalist.Observation.user
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: user
        path: ''
        startLine: 2143
      syntax:
        content:
          CSharp: public User user
          VB: Public user As User
        return:
          type: JoshAaronMiller.INaturalist.User
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.mappable
      commentId: F:JoshAaronMiller.INaturalist.Observation.mappable
      language: CSharp
      name:
        CSharp: mappable
        VB: mappable
      nameWithType:
        CSharp: Observation.mappable
        VB: Observation.mappable
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.mappable
        VB: JoshAaronMiller.INaturalist.Observation.mappable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: mappable
        path: ''
        startLine: 2144
      syntax:
        content:
          CSharp: public bool mappable
          VB: Public mappable As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.identifications_some_agree
      commentId: F:JoshAaronMiller.INaturalist.Observation.identifications_some_agree
      language: CSharp
      name:
        CSharp: identifications_some_agree
        VB: identifications_some_agree
      nameWithType:
        CSharp: Observation.identifications_some_agree
        VB: Observation.identifications_some_agree
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.identifications_some_agree
        VB: JoshAaronMiller.INaturalist.Observation.identifications_some_agree
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: identifications_some_agree
        path: ''
        startLine: 2145
      syntax:
        content:
          CSharp: public bool identifications_some_agree
          VB: Public identifications_some_agree As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.project_ids_without_curator_id
      commentId: F:JoshAaronMiller.INaturalist.Observation.project_ids_without_curator_id
      language: CSharp
      name:
        CSharp: project_ids_without_curator_id
        VB: project_ids_without_curator_id
      nameWithType:
        CSharp: Observation.project_ids_without_curator_id
        VB: Observation.project_ids_without_curator_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.project_ids_without_curator_id
        VB: JoshAaronMiller.INaturalist.Observation.project_ids_without_curator_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: project_ids_without_curator_id
        path: ''
        startLine: 2146
      syntax:
        content:
          CSharp: public List<int> project_ids_without_curator_id
          VB: Public project_ids_without_curator_id As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.place_guess
      commentId: F:JoshAaronMiller.INaturalist.Observation.place_guess
      language: CSharp
      name:
        CSharp: place_guess
        VB: place_guess
      nameWithType:
        CSharp: Observation.place_guess
        VB: Observation.place_guess
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.place_guess
        VB: JoshAaronMiller.INaturalist.Observation.place_guess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: place_guess
        path: ''
        startLine: 2147
      syntax:
        content:
          CSharp: public string place_guess
          VB: Public place_guess As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.identifications
      commentId: F:JoshAaronMiller.INaturalist.Observation.identifications
      language: CSharp
      name:
        CSharp: identifications
        VB: identifications
      nameWithType:
        CSharp: Observation.identifications
        VB: Observation.identifications
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.identifications
        VB: JoshAaronMiller.INaturalist.Observation.identifications
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: identifications
        path: ''
        startLine: 2148
      syntax:
        content:
          CSharp: public List<Identification> identifications
          VB: Public identifications As List(Of Identification)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Identification}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls(JoshAaronMiller.INaturalist.Observation.ImageSize)
      commentId: M:JoshAaronMiller.INaturalist.Observation.GetPhotoUrls(JoshAaronMiller.INaturalist.Observation.ImageSize)
      language: CSharp
      name:
        CSharp: GetPhotoUrls(Observation.ImageSize)
        VB: GetPhotoUrls(Observation.ImageSize)
      nameWithType:
        CSharp: Observation.GetPhotoUrls(Observation.ImageSize)
        VB: Observation.GetPhotoUrls(Observation.ImageSize)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls(JoshAaronMiller.INaturalist.Observation.ImageSize)
        VB: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls(JoshAaronMiller.INaturalist.Observation.ImageSize)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetPhotoUrls
        path: ''
        startLine: 2154
      summary: "\nReturn all URLs of given size from this observation.\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> GetPhotoUrls(Observation.ImageSize size)
          VB: Public Function GetPhotoUrls(size As Observation.ImageSize) As List(Of String)
        parameters:
        - id: size
          type: JoshAaronMiller.INaturalist.Observation.ImageSize
        return:
          type: System.Collections.Generic.List{System.String}
          description: List of URL strings.
      overload: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.DownloadPhotos(System.String,JoshAaronMiller.INaturalist.Observation.ImageSize)
      commentId: M:JoshAaronMiller.INaturalist.Observation.DownloadPhotos(System.String,JoshAaronMiller.INaturalist.Observation.ImageSize)
      language: CSharp
      name:
        CSharp: DownloadPhotos(String, Observation.ImageSize)
        VB: DownloadPhotos(String, Observation.ImageSize)
      nameWithType:
        CSharp: Observation.DownloadPhotos(String, Observation.ImageSize)
        VB: Observation.DownloadPhotos(String, Observation.ImageSize)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.DownloadPhotos(System.String, JoshAaronMiller.INaturalist.Observation.ImageSize)
        VB: JoshAaronMiller.INaturalist.Observation.DownloadPhotos(System.String, JoshAaronMiller.INaturalist.Observation.ImageSize)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: DownloadPhotos
        path: ''
        startLine: 2186
      summary: "\nDownload all photos of this size from this observation to the folder path specified within the application&apos;s persistent data path.\n"
      example: []
      syntax:
        content:
          CSharp: public void DownloadPhotos(string path, Observation.ImageSize size)
          VB: Public Sub DownloadPhotos(path As String, size As Observation.ImageSize)
        parameters:
        - id: path
          type: System.String
          description: The folder to download photos to, relative to the Application.persistentDataPath.
        - id: size
          type: JoshAaronMiller.INaturalist.Observation.ImageSize
          description: The size of the image to download.
      overload: JoshAaronMiller.INaturalist.Observation.DownloadPhotos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.GetAgreementRate
      commentId: M:JoshAaronMiller.INaturalist.Observation.GetAgreementRate
      language: CSharp
      name:
        CSharp: GetAgreementRate()
        VB: GetAgreementRate()
      nameWithType:
        CSharp: Observation.GetAgreementRate()
        VB: Observation.GetAgreementRate()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.GetAgreementRate()
        VB: JoshAaronMiller.INaturalist.Observation.GetAgreementRate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GetAgreementRate
        path: ''
        startLine: 2211
      syntax:
        content:
          CSharp: public ObservationSearch.IdentificationAgreement GetAgreementRate()
          VB: Public Function GetAgreementRate As ObservationSearch.IdentificationAgreement
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      overload: JoshAaronMiller.INaturalist.Observation.GetAgreementRate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Observation.CountIdentifications
      commentId: M:JoshAaronMiller.INaturalist.Observation.CountIdentifications
      language: CSharp
      name:
        CSharp: CountIdentifications()
        VB: CountIdentifications()
      nameWithType:
        CSharp: Observation.CountIdentifications()
        VB: Observation.CountIdentifications()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.CountIdentifications()
        VB: JoshAaronMiller.INaturalist.Observation.CountIdentifications()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CountIdentifications
        path: ''
        startLine: 2232
      summary: "\nReturns an aggregation of the identifications for this observation.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<Taxon, int> CountIdentifications()
          VB: Public Function CountIdentifications As Dictionary(Of Taxon, Integer)
        return:
          type: System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.Taxon,System.Int32}
          description: A Dictionary mapping taxon identifications to a count of the number of users who guessed that taxon.
      overload: JoshAaronMiller.INaturalist.Observation.CountIdentifications*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Observation.ImageSize
    commentId: T:JoshAaronMiller.INaturalist.Observation.ImageSize
    language: CSharp
    name:
      CSharp: Observation.ImageSize
      VB: Observation.ImageSize
    nameWithType:
      CSharp: Observation.ImageSize
      VB: Observation.ImageSize
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Observation.ImageSize
      VB: JoshAaronMiller.INaturalist.Observation.ImageSize
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: ImageSize
      path: ''
      startLine: 2085
    syntax:
      content:
        CSharp: public enum ImageSize
        VB: Public Enum ImageSize
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.Observation.ImageSize.Any
      commentId: F:JoshAaronMiller.INaturalist.Observation.ImageSize.Any
      language: CSharp
      name:
        CSharp: Any
        VB: Any
      nameWithType:
        CSharp: Observation.ImageSize.Any
        VB: Observation.ImageSize.Any
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.ImageSize.Any
        VB: JoshAaronMiller.INaturalist.Observation.ImageSize.Any
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Any
        path: ''
        startLine: 2085
      syntax:
        content:
          CSharp: Any = 0
          VB: Any = 0
        return:
          type: JoshAaronMiller.INaturalist.Observation.ImageSize
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.Observation.ImageSize.Square
      commentId: F:JoshAaronMiller.INaturalist.Observation.ImageSize.Square
      language: CSharp
      name:
        CSharp: Square
        VB: Square
      nameWithType:
        CSharp: Observation.ImageSize.Square
        VB: Observation.ImageSize.Square
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.ImageSize.Square
        VB: JoshAaronMiller.INaturalist.Observation.ImageSize.Square
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Square
        path: ''
        startLine: 2085
      syntax:
        content:
          CSharp: Square = 1
          VB: Square = 1
        return:
          type: JoshAaronMiller.INaturalist.Observation.ImageSize
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.Observation.ImageSize.Small
      commentId: F:JoshAaronMiller.INaturalist.Observation.ImageSize.Small
      language: CSharp
      name:
        CSharp: Small
        VB: Small
      nameWithType:
        CSharp: Observation.ImageSize.Small
        VB: Observation.ImageSize.Small
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.ImageSize.Small
        VB: JoshAaronMiller.INaturalist.Observation.ImageSize.Small
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Small
        path: ''
        startLine: 2085
      syntax:
        content:
          CSharp: Small = 2
          VB: Small = 2
        return:
          type: JoshAaronMiller.INaturalist.Observation.ImageSize
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.Observation.ImageSize.Medium
      commentId: F:JoshAaronMiller.INaturalist.Observation.ImageSize.Medium
      language: CSharp
      name:
        CSharp: Medium
        VB: Medium
      nameWithType:
        CSharp: Observation.ImageSize.Medium
        VB: Observation.ImageSize.Medium
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.ImageSize.Medium
        VB: JoshAaronMiller.INaturalist.Observation.ImageSize.Medium
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Medium
        path: ''
        startLine: 2086
      syntax:
        content:
          CSharp: Medium = 3
          VB: Medium = 3
        return:
          type: JoshAaronMiller.INaturalist.Observation.ImageSize
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.Observation.ImageSize.Large
      commentId: F:JoshAaronMiller.INaturalist.Observation.ImageSize.Large
      language: CSharp
      name:
        CSharp: Large
        VB: Large
      nameWithType:
        CSharp: Observation.ImageSize.Large
        VB: Observation.ImageSize.Large
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Observation.ImageSize.Large
        VB: JoshAaronMiller.INaturalist.Observation.ImageSize.Large
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Large
        path: ''
        startLine: 2086
      syntax:
        content:
          CSharp: Large = 4
          VB: Large = 4
        return:
          type: JoshAaronMiller.INaturalist.Observation.ImageSize
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.ObservationPhoto
    commentId: T:JoshAaronMiller.INaturalist.ObservationPhoto
    language: CSharp
    name:
      CSharp: ObservationPhoto
      VB: ObservationPhoto
    nameWithType:
      CSharp: ObservationPhoto
      VB: ObservationPhoto
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationPhoto
      VB: JoshAaronMiller.INaturalist.ObservationPhoto
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: ObservationPhoto
      path: ''
      startLine: 2255
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ObservationPhoto : JsonObject<ObservationPhoto>
        VB: >-
          <Serializable>

          Public Class ObservationPhoto

              Inherits JsonObject(Of ObservationPhoto)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}.ToJson(JoshAaronMiller.INaturalist.ObservationPhoto)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.id
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: ObservationPhoto.id
        VB: ObservationPhoto.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.id
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2258
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.observation_id
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.observation_id
      language: CSharp
      name:
        CSharp: observation_id
        VB: observation_id
      nameWithType:
        CSharp: ObservationPhoto.observation_id
        VB: ObservationPhoto.observation_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.observation_id
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.observation_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observation_id
        path: ''
        startLine: 2259
      syntax:
        content:
          CSharp: public int observation_id
          VB: Public observation_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.photo_id
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.photo_id
      language: CSharp
      name:
        CSharp: photo_id
        VB: photo_id
      nameWithType:
        CSharp: ObservationPhoto.photo_id
        VB: ObservationPhoto.photo_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.photo_id
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.photo_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: photo_id
        path: ''
        startLine: 2260
      syntax:
        content:
          CSharp: public int photo_id
          VB: Public photo_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.position
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: ObservationPhoto.position
        VB: ObservationPhoto.position
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.position
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: position
        path: ''
        startLine: 2261
      syntax:
        content:
          CSharp: public int position
          VB: Public position As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.created_at
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.created_at
      language: CSharp
      name:
        CSharp: created_at
        VB: created_at
      nameWithType:
        CSharp: ObservationPhoto.created_at
        VB: ObservationPhoto.created_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.created_at
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.created_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at
        path: ''
        startLine: 2262
      syntax:
        content:
          CSharp: public TimeDetails created_at
          VB: Public created_at As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.updated_at
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.updated_at
      language: CSharp
      name:
        CSharp: updated_at
        VB: updated_at
      nameWithType:
        CSharp: ObservationPhoto.updated_at
        VB: ObservationPhoto.updated_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.updated_at
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.updated_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: updated_at
        path: ''
        startLine: 2263
      syntax:
        content:
          CSharp: public TimeDetails updated_at
          VB: Public updated_at As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.old_uuid
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.old_uuid
      language: CSharp
      name:
        CSharp: old_uuid
        VB: old_uuid
      nameWithType:
        CSharp: ObservationPhoto.old_uuid
        VB: ObservationPhoto.old_uuid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.old_uuid
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.old_uuid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: old_uuid
        path: ''
        startLine: 2264
      syntax:
        content:
          CSharp: public string old_uuid
          VB: Public old_uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.uuid
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: ObservationPhoto.uuid
        VB: ObservationPhoto.uuid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.uuid
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.uuid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uuid
        path: ''
        startLine: 2265
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.created_at_utc
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.created_at_utc
      language: CSharp
      name:
        CSharp: created_at_utc
        VB: created_at_utc
      nameWithType:
        CSharp: ObservationPhoto.created_at_utc
        VB: ObservationPhoto.created_at_utc
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.created_at_utc
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.created_at_utc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at_utc
        path: ''
        startLine: 2266
      syntax:
        content:
          CSharp: public TimeDetails created_at_utc
          VB: Public created_at_utc As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.updated_at_utc
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.updated_at_utc
      language: CSharp
      name:
        CSharp: updated_at_utc
        VB: updated_at_utc
      nameWithType:
        CSharp: ObservationPhoto.updated_at_utc
        VB: ObservationPhoto.updated_at_utc
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.updated_at_utc
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.updated_at_utc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: updated_at_utc
        path: ''
        startLine: 2267
      syntax:
        content:
          CSharp: public TimeDetails updated_at_utc
          VB: Public updated_at_utc As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationPhoto.photo
      commentId: F:JoshAaronMiller.INaturalist.ObservationPhoto.photo
      language: CSharp
      name:
        CSharp: photo
        VB: photo
      nameWithType:
        CSharp: ObservationPhoto.photo
        VB: ObservationPhoto.photo
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationPhoto.photo
        VB: JoshAaronMiller.INaturalist.ObservationPhoto.photo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: photo
        path: ''
        startLine: 2268
      syntax:
        content:
          CSharp: public PhotoJson photo
          VB: Public photo As PhotoJson
        return:
          type: JoshAaronMiller.INaturalist.PhotoJson
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.ObservationSubmission
    commentId: T:JoshAaronMiller.INaturalist.ObservationSubmission
    language: CSharp
    name:
      CSharp: ObservationSubmission
      VB: ObservationSubmission
    nameWithType:
      CSharp: ObservationSubmission
      VB: ObservationSubmission
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSubmission
      VB: JoshAaronMiller.INaturalist.ObservationSubmission
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: ObservationSubmission
      path: ''
      startLine: 2277
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ObservationSubmission : JsonObject<ObservationSubmission>
        VB: >-
          <Serializable>

          Public Class ObservationSubmission

              Inherits JsonObject(Of ObservationSubmission)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}.ToJson(JoshAaronMiller.INaturalist.ObservationSubmission)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSubmission.species_guess
      commentId: F:JoshAaronMiller.INaturalist.ObservationSubmission.species_guess
      language: CSharp
      name:
        CSharp: species_guess
        VB: species_guess
      nameWithType:
        CSharp: ObservationSubmission.species_guess
        VB: ObservationSubmission.species_guess
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSubmission.species_guess
        VB: JoshAaronMiller.INaturalist.ObservationSubmission.species_guess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: species_guess
        path: ''
        startLine: 2280
      syntax:
        content:
          CSharp: public string species_guess
          VB: Public species_guess As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSubmission.taxon_id
      commentId: F:JoshAaronMiller.INaturalist.ObservationSubmission.taxon_id
      language: CSharp
      name:
        CSharp: taxon_id
        VB: taxon_id
      nameWithType:
        CSharp: ObservationSubmission.taxon_id
        VB: ObservationSubmission.taxon_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSubmission.taxon_id
        VB: JoshAaronMiller.INaturalist.ObservationSubmission.taxon_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon_id
        path: ''
        startLine: 2281
      syntax:
        content:
          CSharp: public int taxon_id
          VB: Public taxon_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSubmission.description
      commentId: F:JoshAaronMiller.INaturalist.ObservationSubmission.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: ObservationSubmission.description
        VB: ObservationSubmission.description
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSubmission.description
        VB: JoshAaronMiller.INaturalist.ObservationSubmission.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: description
        path: ''
        startLine: 2282
      syntax:
        content:
          CSharp: public string description
          VB: Public description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission
    commentId: T:JoshAaronMiller.INaturalist.WrappedObservationSubmission
    language: CSharp
    name:
      CSharp: WrappedObservationSubmission
      VB: WrappedObservationSubmission
    nameWithType:
      CSharp: WrappedObservationSubmission
      VB: WrappedObservationSubmission
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.WrappedObservationSubmission
      VB: JoshAaronMiller.INaturalist.WrappedObservationSubmission
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: WrappedObservationSubmission
      path: ''
      startLine: 2285
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class WrappedObservationSubmission : JsonObject<WrappedObservationSubmission>
        VB: >-
          <Serializable>

          Public Class WrappedObservationSubmission

              Inherits JsonObject(Of WrappedObservationSubmission)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}.ToJson(JoshAaronMiller.INaturalist.WrappedObservationSubmission)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission.observation
      commentId: F:JoshAaronMiller.INaturalist.WrappedObservationSubmission.observation
      language: CSharp
      name:
        CSharp: observation
        VB: observation
      nameWithType:
        CSharp: WrappedObservationSubmission.observation
        VB: WrappedObservationSubmission.observation
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.WrappedObservationSubmission.observation
        VB: JoshAaronMiller.INaturalist.WrappedObservationSubmission.observation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observation
        path: ''
        startLine: 2288
      syntax:
        content:
          CSharp: public ObservationSubmission observation
          VB: Public observation As ObservationSubmission
        return:
          type: JoshAaronMiller.INaturalist.ObservationSubmission
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Outlink
    commentId: T:JoshAaronMiller.INaturalist.Outlink
    language: CSharp
    name:
      CSharp: Outlink
      VB: Outlink
    nameWithType:
      CSharp: Outlink
      VB: Outlink
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Outlink
      VB: JoshAaronMiller.INaturalist.Outlink
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Outlink
      path: ''
      startLine: 2298
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Outlink : JsonObject<Outlink>
        VB: >-
          <Serializable>

          Public Class Outlink

              Inherits JsonObject(Of Outlink)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}.ToJson(JoshAaronMiller.INaturalist.Outlink)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Outlink.source
      commentId: F:JoshAaronMiller.INaturalist.Outlink.source
      language: CSharp
      name:
        CSharp: source
        VB: source
      nameWithType:
        CSharp: Outlink.source
        VB: Outlink.source
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Outlink.source
        VB: JoshAaronMiller.INaturalist.Outlink.source
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: source
        path: ''
        startLine: 2301
      syntax:
        content:
          CSharp: public string source
          VB: Public source As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Outlink.url
      commentId: F:JoshAaronMiller.INaturalist.Outlink.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: Outlink.url
        VB: Outlink.url
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Outlink.url
        VB: JoshAaronMiller.INaturalist.Outlink.url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: url
        path: ''
        startLine: 2302
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.PhotoJson
    commentId: T:JoshAaronMiller.INaturalist.PhotoJson
    language: CSharp
    name:
      CSharp: PhotoJson
      VB: PhotoJson
    nameWithType:
      CSharp: PhotoJson
      VB: PhotoJson
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.PhotoJson
      VB: JoshAaronMiller.INaturalist.PhotoJson
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: PhotoJson
      path: ''
      startLine: 2312
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class PhotoJson : JsonObject<PhotoJson>
        VB: >-
          <Serializable>

          Public Class PhotoJson

              Inherits JsonObject(Of PhotoJson)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}.ToJson(JoshAaronMiller.INaturalist.PhotoJson)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.PhotoJson.id
      commentId: F:JoshAaronMiller.INaturalist.PhotoJson.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: PhotoJson.id
        VB: PhotoJson.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoJson.id
        VB: JoshAaronMiller.INaturalist.PhotoJson.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2315
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoJson.license_code
      commentId: F:JoshAaronMiller.INaturalist.PhotoJson.license_code
      language: CSharp
      name:
        CSharp: license_code
        VB: license_code
      nameWithType:
        CSharp: PhotoJson.license_code
        VB: PhotoJson.license_code
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoJson.license_code
        VB: JoshAaronMiller.INaturalist.PhotoJson.license_code
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: license_code
        path: ''
        startLine: 2316
      syntax:
        content:
          CSharp: public string license_code
          VB: Public license_code As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoJson.attribution
      commentId: F:JoshAaronMiller.INaturalist.PhotoJson.attribution
      language: CSharp
      name:
        CSharp: attribution
        VB: attribution
      nameWithType:
        CSharp: PhotoJson.attribution
        VB: PhotoJson.attribution
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoJson.attribution
        VB: JoshAaronMiller.INaturalist.PhotoJson.attribution
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: attribution
        path: ''
        startLine: 2317
      syntax:
        content:
          CSharp: public string attribution
          VB: Public attribution As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoJson.url
      commentId: F:JoshAaronMiller.INaturalist.PhotoJson.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: PhotoJson.url
        VB: PhotoJson.url
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoJson.url
        VB: JoshAaronMiller.INaturalist.PhotoJson.url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: url
        path: ''
        startLine: 2318
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoJson.original_dimensions
      commentId: F:JoshAaronMiller.INaturalist.PhotoJson.original_dimensions
      language: CSharp
      name:
        CSharp: original_dimensions
        VB: original_dimensions
      nameWithType:
        CSharp: PhotoJson.original_dimensions
        VB: PhotoJson.original_dimensions
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoJson.original_dimensions
        VB: JoshAaronMiller.INaturalist.PhotoJson.original_dimensions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: original_dimensions
        path: ''
        startLine: 2319
      syntax:
        content:
          CSharp: public Dimensions original_dimensions
          VB: Public original_dimensions As Dimensions
        return:
          type: JoshAaronMiller.INaturalist.Dimensions
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoJson.square_url
      commentId: F:JoshAaronMiller.INaturalist.PhotoJson.square_url
      language: CSharp
      name:
        CSharp: square_url
        VB: square_url
      nameWithType:
        CSharp: PhotoJson.square_url
        VB: PhotoJson.square_url
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoJson.square_url
        VB: JoshAaronMiller.INaturalist.PhotoJson.square_url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: square_url
        path: ''
        startLine: 2321
      syntax:
        content:
          CSharp: public string square_url
          VB: Public square_url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PhotoJson.medium_url
      commentId: F:JoshAaronMiller.INaturalist.PhotoJson.medium_url
      language: CSharp
      name:
        CSharp: medium_url
        VB: medium_url
      nameWithType:
        CSharp: PhotoJson.medium_url
        VB: PhotoJson.medium_url
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PhotoJson.medium_url
        VB: JoshAaronMiller.INaturalist.PhotoJson.medium_url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: medium_url
        path: ''
        startLine: 2322
      syntax:
        content:
          CSharp: public string medium_url
          VB: Public medium_url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Place
    commentId: T:JoshAaronMiller.INaturalist.Place
    language: CSharp
    name:
      CSharp: Place
      VB: Place
    nameWithType:
      CSharp: Place
      VB: Place
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Place
      VB: JoshAaronMiller.INaturalist.Place
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Place
      path: ''
      startLine: 2331
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Place : JsonObject<Place>
        VB: >-
          <Serializable>

          Public Class Place

              Inherits JsonObject(Of Place)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}.ToJson(JoshAaronMiller.INaturalist.Place)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Place.ancestor_place_ids
      commentId: F:JoshAaronMiller.INaturalist.Place.ancestor_place_ids
      language: CSharp
      name:
        CSharp: ancestor_place_ids
        VB: ancestor_place_ids
      nameWithType:
        CSharp: Place.ancestor_place_ids
        VB: Place.ancestor_place_ids
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.ancestor_place_ids
        VB: JoshAaronMiller.INaturalist.Place.ancestor_place_ids
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ancestor_place_ids
        path: ''
        startLine: 2334
      syntax:
        content:
          CSharp: public List<int> ancestor_place_ids
          VB: Public ancestor_place_ids As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.bounding_box_geojson
      commentId: F:JoshAaronMiller.INaturalist.Place.bounding_box_geojson
      language: CSharp
      name:
        CSharp: bounding_box_geojson
        VB: bounding_box_geojson
      nameWithType:
        CSharp: Place.bounding_box_geojson
        VB: Place.bounding_box_geojson
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.bounding_box_geojson
        VB: JoshAaronMiller.INaturalist.Place.bounding_box_geojson
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: bounding_box_geojson
        path: ''
        startLine: 2335
      syntax:
        content:
          CSharp: public BoundingBoxGeoJson bounding_box_geojson
          VB: Public bounding_box_geojson As BoundingBoxGeoJson
        return:
          type: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.bbox_area
      commentId: F:JoshAaronMiller.INaturalist.Place.bbox_area
      language: CSharp
      name:
        CSharp: bbox_area
        VB: bbox_area
      nameWithType:
        CSharp: Place.bbox_area
        VB: Place.bbox_area
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.bbox_area
        VB: JoshAaronMiller.INaturalist.Place.bbox_area
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: bbox_area
        path: ''
        startLine: 2336
      syntax:
        content:
          CSharp: public float bbox_area
          VB: Public bbox_area As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.admin_level
      commentId: F:JoshAaronMiller.INaturalist.Place.admin_level
      language: CSharp
      name:
        CSharp: admin_level
        VB: admin_level
      nameWithType:
        CSharp: Place.admin_level
        VB: Place.admin_level
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.admin_level
        VB: JoshAaronMiller.INaturalist.Place.admin_level
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: admin_level
        path: ''
        startLine: 2337
      syntax:
        content:
          CSharp: public int admin_level
          VB: Public admin_level As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.place_type
      commentId: F:JoshAaronMiller.INaturalist.Place.place_type
      language: CSharp
      name:
        CSharp: place_type
        VB: place_type
      nameWithType:
        CSharp: Place.place_type
        VB: Place.place_type
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.place_type
        VB: JoshAaronMiller.INaturalist.Place.place_type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: place_type
        path: ''
        startLine: 2338
      example: []
      syntax:
        content:
          CSharp: public int place_type
          VB: Public place_type As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.name
      commentId: F:JoshAaronMiller.INaturalist.Place.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: Place.name
        VB: Place.name
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.name
        VB: JoshAaronMiller.INaturalist.Place.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: name
        path: ''
        startLine: 2339
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.location
      commentId: F:JoshAaronMiller.INaturalist.Place.location
      language: CSharp
      name:
        CSharp: location
        VB: location
      nameWithType:
        CSharp: Place.location
        VB: Place.location
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.location
        VB: JoshAaronMiller.INaturalist.Place.location
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: location
        path: ''
        startLine: 2340
      syntax:
        content:
          CSharp: public string location
          VB: Public location As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.id
      commentId: F:JoshAaronMiller.INaturalist.Place.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: Place.id
        VB: Place.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.id
        VB: JoshAaronMiller.INaturalist.Place.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2341
      example: []
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.display_name
      commentId: F:JoshAaronMiller.INaturalist.Place.display_name
      language: CSharp
      name:
        CSharp: display_name
        VB: display_name
      nameWithType:
        CSharp: Place.display_name
        VB: Place.display_name
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.display_name
        VB: JoshAaronMiller.INaturalist.Place.display_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: display_name
        path: ''
        startLine: 2342
      syntax:
        content:
          CSharp: public string display_name
          VB: Public display_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.uuid
      commentId: F:JoshAaronMiller.INaturalist.Place.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: Place.uuid
        VB: Place.uuid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.uuid
        VB: JoshAaronMiller.INaturalist.Place.uuid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: uuid
        path: ''
        startLine: 2343
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.slug
      commentId: F:JoshAaronMiller.INaturalist.Place.slug
      language: CSharp
      name:
        CSharp: slug
        VB: slug
      nameWithType:
        CSharp: Place.slug
        VB: Place.slug
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.slug
        VB: JoshAaronMiller.INaturalist.Place.slug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: slug
        path: ''
        startLine: 2344
      syntax:
        content:
          CSharp: public string slug
          VB: Public slug As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Place.geometry_geojson
      commentId: F:JoshAaronMiller.INaturalist.Place.geometry_geojson
      language: CSharp
      name:
        CSharp: geometry_geojson
        VB: geometry_geojson
      nameWithType:
        CSharp: Place.geometry_geojson
        VB: Place.geometry_geojson
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Place.geometry_geojson
        VB: JoshAaronMiller.INaturalist.Place.geometry_geojson
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: geometry_geojson
        path: ''
        startLine: 2345
      syntax:
        content:
          CSharp: public GeometryGeoJson geometry_geojson
          VB: Public geometry_geojson As GeometryGeoJson
        return:
          type: JoshAaronMiller.INaturalist.GeometryGeoJson
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.PlacesByCuration
    commentId: T:JoshAaronMiller.INaturalist.PlacesByCuration
    language: CSharp
    name:
      CSharp: PlacesByCuration
      VB: PlacesByCuration
    nameWithType:
      CSharp: PlacesByCuration
      VB: PlacesByCuration
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.PlacesByCuration
      VB: JoshAaronMiller.INaturalist.PlacesByCuration
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: PlacesByCuration
      path: ''
      startLine: 2354
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class PlacesByCuration : JsonObject<PlacesByCuration>
        VB: >-
          <Serializable>

          Public Class PlacesByCuration

              Inherits JsonObject(Of PlacesByCuration)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}.ToJson(JoshAaronMiller.INaturalist.PlacesByCuration)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.PlacesByCuration.standard
      commentId: F:JoshAaronMiller.INaturalist.PlacesByCuration.standard
      language: CSharp
      name:
        CSharp: standard
        VB: standard
      nameWithType:
        CSharp: PlacesByCuration.standard
        VB: PlacesByCuration.standard
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PlacesByCuration.standard
        VB: JoshAaronMiller.INaturalist.PlacesByCuration.standard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: standard
        path: ''
        startLine: 2357
      syntax:
        content:
          CSharp: public List<Place> standard
          VB: Public standard As List(Of Place)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Place}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.PlacesByCuration.community
      commentId: F:JoshAaronMiller.INaturalist.PlacesByCuration.community
      language: CSharp
      name:
        CSharp: community
        VB: community
      nameWithType:
        CSharp: PlacesByCuration.community
        VB: PlacesByCuration.community
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.PlacesByCuration.community
        VB: JoshAaronMiller.INaturalist.PlacesByCuration.community
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: community
        path: ''
        startLine: 2358
      syntax:
        content:
          CSharp: public List<Place> community
          VB: Public community As List(Of Place)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Place}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Results`1
    commentId: T:JoshAaronMiller.INaturalist.Results`1
    language: CSharp
    name:
      CSharp: Results<T>
      VB: Results(Of T)
    nameWithType:
      CSharp: Results<T>
      VB: Results(Of T)
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Results<T>
      VB: JoshAaronMiller.INaturalist.Results(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Results
      path: ''
      startLine: 2367
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Results<T> : JsonObject<Results<T>>
        VB: >-
          <Serializable>

          Public Class Results(Of T)

              Inherits JsonObject(Of Results(Of T))
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.ToJson(JoshAaronMiller.INaturalist.Results{{T}})
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Results`1.total_results
      commentId: F:JoshAaronMiller.INaturalist.Results`1.total_results
      language: CSharp
      name:
        CSharp: total_results
        VB: total_results
      nameWithType:
        CSharp: Results<T>.total_results
        VB: Results(Of T).total_results
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Results<T>.total_results
        VB: JoshAaronMiller.INaturalist.Results(Of T).total_results
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: total_results
        path: ''
        startLine: 2370
      syntax:
        content:
          CSharp: public int total_results
          VB: Public total_results As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Results`1.page
      commentId: F:JoshAaronMiller.INaturalist.Results`1.page
      language: CSharp
      name:
        CSharp: page
        VB: page
      nameWithType:
        CSharp: Results<T>.page
        VB: Results(Of T).page
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Results<T>.page
        VB: JoshAaronMiller.INaturalist.Results(Of T).page
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: page
        path: ''
        startLine: 2371
      syntax:
        content:
          CSharp: public int page
          VB: Public page As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Results`1.per_page
      commentId: F:JoshAaronMiller.INaturalist.Results`1.per_page
      language: CSharp
      name:
        CSharp: per_page
        VB: per_page
      nameWithType:
        CSharp: Results<T>.per_page
        VB: Results(Of T).per_page
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Results<T>.per_page
        VB: JoshAaronMiller.INaturalist.Results(Of T).per_page
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: per_page
        path: ''
        startLine: 2372
      syntax:
        content:
          CSharp: public int per_page
          VB: Public per_page As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Results`1.results
      commentId: F:JoshAaronMiller.INaturalist.Results`1.results
      language: CSharp
      name:
        CSharp: results
        VB: results
      nameWithType:
        CSharp: Results<T>.results
        VB: Results(Of T).results
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Results<T>.results
        VB: JoshAaronMiller.INaturalist.Results(Of T).results
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: results
        path: ''
        startLine: 2373
      syntax:
        content:
          CSharp: public List<T> results
          VB: Public results As List(Of T)
        return:
          type: System.Collections.Generic.List{{T}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Sound
    commentId: T:JoshAaronMiller.INaturalist.Sound
    language: CSharp
    name:
      CSharp: Sound
      VB: Sound
    nameWithType:
      CSharp: Sound
      VB: Sound
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Sound
      VB: JoshAaronMiller.INaturalist.Sound
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Sound
      path: ''
      startLine: 2384
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Sound : JsonObject<Sound>
        VB: >-
          <Serializable>

          Public Class Sound

              Inherits JsonObject(Of Sound)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}.ToJson(JoshAaronMiller.INaturalist.Sound)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Sound.id
      commentId: F:JoshAaronMiller.INaturalist.Sound.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: Sound.id
        VB: Sound.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.id
        VB: JoshAaronMiller.INaturalist.Sound.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2387
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.attribution
      commentId: F:JoshAaronMiller.INaturalist.Sound.attribution
      language: CSharp
      name:
        CSharp: attribution
        VB: attribution
      nameWithType:
        CSharp: Sound.attribution
        VB: Sound.attribution
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.attribution
        VB: JoshAaronMiller.INaturalist.Sound.attribution
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: attribution
        path: ''
        startLine: 2388
      syntax:
        content:
          CSharp: public string attribution
          VB: Public attribution As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.license_code
      commentId: F:JoshAaronMiller.INaturalist.Sound.license_code
      language: CSharp
      name:
        CSharp: license_code
        VB: license_code
      nameWithType:
        CSharp: Sound.license_code
        VB: Sound.license_code
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.license_code
        VB: JoshAaronMiller.INaturalist.Sound.license_code
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: license_code
        path: ''
        startLine: 2389
      syntax:
        content:
          CSharp: public string license_code
          VB: Public license_code As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.secret_token
      commentId: F:JoshAaronMiller.INaturalist.Sound.secret_token
      language: CSharp
      name:
        CSharp: secret_token
        VB: secret_token
      nameWithType:
        CSharp: Sound.secret_token
        VB: Sound.secret_token
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.secret_token
        VB: JoshAaronMiller.INaturalist.Sound.secret_token
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: secret_token
        path: ''
        startLine: 2390
      syntax:
        content:
          CSharp: public string secret_token
          VB: Public secret_token As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.file_content_type
      commentId: F:JoshAaronMiller.INaturalist.Sound.file_content_type
      language: CSharp
      name:
        CSharp: file_content_type
        VB: file_content_type
      nameWithType:
        CSharp: Sound.file_content_type
        VB: Sound.file_content_type
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.file_content_type
        VB: JoshAaronMiller.INaturalist.Sound.file_content_type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: file_content_type
        path: ''
        startLine: 2391
      syntax:
        content:
          CSharp: public string file_content_type
          VB: Public file_content_type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.flags
      commentId: F:JoshAaronMiller.INaturalist.Sound.flags
      language: CSharp
      name:
        CSharp: flags
        VB: flags
      nameWithType:
        CSharp: Sound.flags
        VB: Sound.flags
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.flags
        VB: JoshAaronMiller.INaturalist.Sound.flags
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flags
        path: ''
        startLine: 2392
      syntax:
        content:
          CSharp: public List<Flag> flags
          VB: Public flags As List(Of Flag)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Flag}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.native_sound_id
      commentId: F:JoshAaronMiller.INaturalist.Sound.native_sound_id
      language: CSharp
      name:
        CSharp: native_sound_id
        VB: native_sound_id
      nameWithType:
        CSharp: Sound.native_sound_id
        VB: Sound.native_sound_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.native_sound_id
        VB: JoshAaronMiller.INaturalist.Sound.native_sound_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: native_sound_id
        path: ''
        startLine: 2393
      syntax:
        content:
          CSharp: public int native_sound_id
          VB: Public native_sound_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.play_local
      commentId: F:JoshAaronMiller.INaturalist.Sound.play_local
      language: CSharp
      name:
        CSharp: play_local
        VB: play_local
      nameWithType:
        CSharp: Sound.play_local
        VB: Sound.play_local
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.play_local
        VB: JoshAaronMiller.INaturalist.Sound.play_local
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: play_local
        path: ''
        startLine: 2394
      syntax:
        content:
          CSharp: public bool play_local
          VB: Public play_local As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Sound.file_url
      commentId: F:JoshAaronMiller.INaturalist.Sound.file_url
      language: CSharp
      name:
        CSharp: file_url
        VB: file_url
      nameWithType:
        CSharp: Sound.file_url
        VB: Sound.file_url
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Sound.file_url
        VB: JoshAaronMiller.INaturalist.Sound.file_url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: file_url
        path: ''
        startLine: 2396
      syntax:
        content:
          CSharp: public string file_url
          VB: Public file_url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Taxon
    commentId: T:JoshAaronMiller.INaturalist.Taxon
    language: CSharp
    name:
      CSharp: Taxon
      VB: Taxon
    nameWithType:
      CSharp: Taxon
      VB: Taxon
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Taxon
      VB: JoshAaronMiller.INaturalist.Taxon
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Taxon
      path: ''
      startLine: 2406
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Taxon : JsonObject<Taxon>
        VB: >-
          <Serializable>

          Public Class Taxon

              Inherits JsonObject(Of Taxon)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}.ToJson(JoshAaronMiller.INaturalist.Taxon)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Taxon.is_active
      commentId: F:JoshAaronMiller.INaturalist.Taxon.is_active
      language: CSharp
      name:
        CSharp: is_active
        VB: is_active
      nameWithType:
        CSharp: Taxon.is_active
        VB: Taxon.is_active
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.is_active
        VB: JoshAaronMiller.INaturalist.Taxon.is_active
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: is_active
        path: ''
        startLine: 2409
      syntax:
        content:
          CSharp: public bool is_active
          VB: Public is_active As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.ancestry
      commentId: F:JoshAaronMiller.INaturalist.Taxon.ancestry
      language: CSharp
      name:
        CSharp: ancestry
        VB: ancestry
      nameWithType:
        CSharp: Taxon.ancestry
        VB: Taxon.ancestry
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.ancestry
        VB: JoshAaronMiller.INaturalist.Taxon.ancestry
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ancestry
        path: ''
        startLine: 2410
      syntax:
        content:
          CSharp: public string ancestry
          VB: Public ancestry As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.min_species_ancestry
      commentId: F:JoshAaronMiller.INaturalist.Taxon.min_species_ancestry
      language: CSharp
      name:
        CSharp: min_species_ancestry
        VB: min_species_ancestry
      nameWithType:
        CSharp: Taxon.min_species_ancestry
        VB: Taxon.min_species_ancestry
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.min_species_ancestry
        VB: JoshAaronMiller.INaturalist.Taxon.min_species_ancestry
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: min_species_ancestry
        path: ''
        startLine: 2411
      syntax:
        content:
          CSharp: public string min_species_ancestry
          VB: Public min_species_ancestry As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.endemic
      commentId: F:JoshAaronMiller.INaturalist.Taxon.endemic
      language: CSharp
      name:
        CSharp: endemic
        VB: endemic
      nameWithType:
        CSharp: Taxon.endemic
        VB: Taxon.endemic
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.endemic
        VB: JoshAaronMiller.INaturalist.Taxon.endemic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: endemic
        path: ''
        startLine: 2412
      syntax:
        content:
          CSharp: public bool endemic
          VB: Public endemic As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.iconic_taxon_id
      commentId: F:JoshAaronMiller.INaturalist.Taxon.iconic_taxon_id
      language: CSharp
      name:
        CSharp: iconic_taxon_id
        VB: iconic_taxon_id
      nameWithType:
        CSharp: Taxon.iconic_taxon_id
        VB: Taxon.iconic_taxon_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.iconic_taxon_id
        VB: JoshAaronMiller.INaturalist.Taxon.iconic_taxon_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: iconic_taxon_id
        path: ''
        startLine: 2413
      syntax:
        content:
          CSharp: public int iconic_taxon_id
          VB: Public iconic_taxon_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.min_species_taxon_id
      commentId: F:JoshAaronMiller.INaturalist.Taxon.min_species_taxon_id
      language: CSharp
      name:
        CSharp: min_species_taxon_id
        VB: min_species_taxon_id
      nameWithType:
        CSharp: Taxon.min_species_taxon_id
        VB: Taxon.min_species_taxon_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.min_species_taxon_id
        VB: JoshAaronMiller.INaturalist.Taxon.min_species_taxon_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: min_species_taxon_id
        path: ''
        startLine: 2414
      syntax:
        content:
          CSharp: public int min_species_taxon_id
          VB: Public min_species_taxon_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.threatened
      commentId: F:JoshAaronMiller.INaturalist.Taxon.threatened
      language: CSharp
      name:
        CSharp: threatened
        VB: threatened
      nameWithType:
        CSharp: Taxon.threatened
        VB: Taxon.threatened
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.threatened
        VB: JoshAaronMiller.INaturalist.Taxon.threatened
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: threatened
        path: ''
        startLine: 2415
      syntax:
        content:
          CSharp: public bool threatened
          VB: Public threatened As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.rank_level
      commentId: F:JoshAaronMiller.INaturalist.Taxon.rank_level
      language: CSharp
      name:
        CSharp: rank_level
        VB: rank_level
      nameWithType:
        CSharp: Taxon.rank_level
        VB: Taxon.rank_level
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.rank_level
        VB: JoshAaronMiller.INaturalist.Taxon.rank_level
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: rank_level
        path: ''
        startLine: 2416
      syntax:
        content:
          CSharp: public int rank_level
          VB: Public rank_level As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.introduced
      commentId: F:JoshAaronMiller.INaturalist.Taxon.introduced
      language: CSharp
      name:
        CSharp: introduced
        VB: introduced
      nameWithType:
        CSharp: Taxon.introduced
        VB: Taxon.introduced
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.introduced
        VB: JoshAaronMiller.INaturalist.Taxon.introduced
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: introduced
        path: ''
        startLine: 2417
      syntax:
        content:
          CSharp: public bool introduced
          VB: Public introduced As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.native
      commentId: F:JoshAaronMiller.INaturalist.Taxon.native
      language: CSharp
      name:
        CSharp: native
        VB: native
      nameWithType:
        CSharp: Taxon.native
        VB: Taxon.native
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.native
        VB: JoshAaronMiller.INaturalist.Taxon.native
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: native
        path: ''
        startLine: 2418
      syntax:
        content:
          CSharp: public bool native
          VB: Public native As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.parent_id
      commentId: F:JoshAaronMiller.INaturalist.Taxon.parent_id
      language: CSharp
      name:
        CSharp: parent_id
        VB: parent_id
      nameWithType:
        CSharp: Taxon.parent_id
        VB: Taxon.parent_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.parent_id
        VB: JoshAaronMiller.INaturalist.Taxon.parent_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: parent_id
        path: ''
        startLine: 2419
      syntax:
        content:
          CSharp: public int parent_id
          VB: Public parent_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.name
      commentId: F:JoshAaronMiller.INaturalist.Taxon.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: Taxon.name
        VB: Taxon.name
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.name
        VB: JoshAaronMiller.INaturalist.Taxon.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: name
        path: ''
        startLine: 2420
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.rank
      commentId: F:JoshAaronMiller.INaturalist.Taxon.rank
      language: CSharp
      name:
        CSharp: rank
        VB: rank
      nameWithType:
        CSharp: Taxon.rank
        VB: Taxon.rank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.rank
        VB: JoshAaronMiller.INaturalist.Taxon.rank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: rank
        path: ''
        startLine: 2421
      syntax:
        content:
          CSharp: public string rank
          VB: Public rank As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.extinct
      commentId: F:JoshAaronMiller.INaturalist.Taxon.extinct
      language: CSharp
      name:
        CSharp: extinct
        VB: extinct
      nameWithType:
        CSharp: Taxon.extinct
        VB: Taxon.extinct
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.extinct
        VB: JoshAaronMiller.INaturalist.Taxon.extinct
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: extinct
        path: ''
        startLine: 2422
      syntax:
        content:
          CSharp: public bool extinct
          VB: Public extinct As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.id
      commentId: F:JoshAaronMiller.INaturalist.Taxon.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: Taxon.id
        VB: Taxon.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.id
        VB: JoshAaronMiller.INaturalist.Taxon.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2423
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.ancestor_ids
      commentId: F:JoshAaronMiller.INaturalist.Taxon.ancestor_ids
      language: CSharp
      name:
        CSharp: ancestor_ids
        VB: ancestor_ids
      nameWithType:
        CSharp: Taxon.ancestor_ids
        VB: Taxon.ancestor_ids
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.ancestor_ids
        VB: JoshAaronMiller.INaturalist.Taxon.ancestor_ids
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ancestor_ids
        path: ''
        startLine: 2424
      syntax:
        content:
          CSharp: public List<int> ancestor_ids
          VB: Public ancestor_ids As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.photos_locked
      commentId: F:JoshAaronMiller.INaturalist.Taxon.photos_locked
      language: CSharp
      name:
        CSharp: photos_locked
        VB: photos_locked
      nameWithType:
        CSharp: Taxon.photos_locked
        VB: Taxon.photos_locked
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.photos_locked
        VB: JoshAaronMiller.INaturalist.Taxon.photos_locked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: photos_locked
        path: ''
        startLine: 2425
      syntax:
        content:
          CSharp: public bool photos_locked
          VB: Public photos_locked As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.taxon_schemes_count
      commentId: F:JoshAaronMiller.INaturalist.Taxon.taxon_schemes_count
      language: CSharp
      name:
        CSharp: taxon_schemes_count
        VB: taxon_schemes_count
      nameWithType:
        CSharp: Taxon.taxon_schemes_count
        VB: Taxon.taxon_schemes_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.taxon_schemes_count
        VB: JoshAaronMiller.INaturalist.Taxon.taxon_schemes_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon_schemes_count
        path: ''
        startLine: 2426
      syntax:
        content:
          CSharp: public int taxon_schemes_count
          VB: Public taxon_schemes_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.wikipedia_url
      commentId: F:JoshAaronMiller.INaturalist.Taxon.wikipedia_url
      language: CSharp
      name:
        CSharp: wikipedia_url
        VB: wikipedia_url
      nameWithType:
        CSharp: Taxon.wikipedia_url
        VB: Taxon.wikipedia_url
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.wikipedia_url
        VB: JoshAaronMiller.INaturalist.Taxon.wikipedia_url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: wikipedia_url
        path: ''
        startLine: 2427
      syntax:
        content:
          CSharp: public string wikipedia_url
          VB: Public wikipedia_url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.created_at
      commentId: F:JoshAaronMiller.INaturalist.Taxon.created_at
      language: CSharp
      name:
        CSharp: created_at
        VB: created_at
      nameWithType:
        CSharp: Taxon.created_at
        VB: Taxon.created_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.created_at
        VB: JoshAaronMiller.INaturalist.Taxon.created_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at
        path: ''
        startLine: 2429
      syntax:
        content:
          CSharp: public string created_at
          VB: Public created_at As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.taxon_changes_count
      commentId: F:JoshAaronMiller.INaturalist.Taxon.taxon_changes_count
      language: CSharp
      name:
        CSharp: taxon_changes_count
        VB: taxon_changes_count
      nameWithType:
        CSharp: Taxon.taxon_changes_count
        VB: Taxon.taxon_changes_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.taxon_changes_count
        VB: JoshAaronMiller.INaturalist.Taxon.taxon_changes_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: taxon_changes_count
        path: ''
        startLine: 2430
      syntax:
        content:
          CSharp: public int taxon_changes_count
          VB: Public taxon_changes_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.complete_species_count
      commentId: F:JoshAaronMiller.INaturalist.Taxon.complete_species_count
      language: CSharp
      name:
        CSharp: complete_species_count
        VB: complete_species_count
      nameWithType:
        CSharp: Taxon.complete_species_count
        VB: Taxon.complete_species_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.complete_species_count
        VB: JoshAaronMiller.INaturalist.Taxon.complete_species_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: complete_species_count
        path: ''
        startLine: 2431
      syntax:
        content:
          CSharp: public int complete_species_count
          VB: Public complete_species_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.universal_search_rank
      commentId: F:JoshAaronMiller.INaturalist.Taxon.universal_search_rank
      language: CSharp
      name:
        CSharp: universal_search_rank
        VB: universal_search_rank
      nameWithType:
        CSharp: Taxon.universal_search_rank
        VB: Taxon.universal_search_rank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.universal_search_rank
        VB: JoshAaronMiller.INaturalist.Taxon.universal_search_rank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: universal_search_rank
        path: ''
        startLine: 2432
      syntax:
        content:
          CSharp: public int universal_search_rank
          VB: Public universal_search_rank As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.observations_count
      commentId: F:JoshAaronMiller.INaturalist.Taxon.observations_count
      language: CSharp
      name:
        CSharp: observations_count
        VB: observations_count
      nameWithType:
        CSharp: Taxon.observations_count
        VB: Taxon.observations_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.observations_count
        VB: JoshAaronMiller.INaturalist.Taxon.observations_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observations_count
        path: ''
        startLine: 2433
      syntax:
        content:
          CSharp: public int observations_count
          VB: Public observations_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.flag_counts
      commentId: F:JoshAaronMiller.INaturalist.Taxon.flag_counts
      language: CSharp
      name:
        CSharp: flag_counts
        VB: flag_counts
      nameWithType:
        CSharp: Taxon.flag_counts
        VB: Taxon.flag_counts
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.flag_counts
        VB: JoshAaronMiller.INaturalist.Taxon.flag_counts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flag_counts
        path: ''
        startLine: 2434
      syntax:
        content:
          CSharp: public FlagCounts flag_counts
          VB: Public flag_counts As FlagCounts
        return:
          type: JoshAaronMiller.INaturalist.FlagCounts
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.atlas_id
      commentId: F:JoshAaronMiller.INaturalist.Taxon.atlas_id
      language: CSharp
      name:
        CSharp: atlas_id
        VB: atlas_id
      nameWithType:
        CSharp: Taxon.atlas_id
        VB: Taxon.atlas_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.atlas_id
        VB: JoshAaronMiller.INaturalist.Taxon.atlas_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: atlas_id
        path: ''
        startLine: 2435
      syntax:
        content:
          CSharp: public int atlas_id
          VB: Public atlas_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.default_photo
      commentId: F:JoshAaronMiller.INaturalist.Taxon.default_photo
      language: CSharp
      name:
        CSharp: default_photo
        VB: default_photo
      nameWithType:
        CSharp: Taxon.default_photo
        VB: Taxon.default_photo
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.default_photo
        VB: JoshAaronMiller.INaturalist.Taxon.default_photo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: default_photo
        path: ''
        startLine: 2436
      syntax:
        content:
          CSharp: public PhotoJson default_photo
          VB: Public default_photo As PhotoJson
        return:
          type: JoshAaronMiller.INaturalist.PhotoJson
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.iconic_taxon_name
      commentId: F:JoshAaronMiller.INaturalist.Taxon.iconic_taxon_name
      language: CSharp
      name:
        CSharp: iconic_taxon_name
        VB: iconic_taxon_name
      nameWithType:
        CSharp: Taxon.iconic_taxon_name
        VB: Taxon.iconic_taxon_name
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.iconic_taxon_name
        VB: JoshAaronMiller.INaturalist.Taxon.iconic_taxon_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: iconic_taxon_name
        path: ''
        startLine: 2437
      syntax:
        content:
          CSharp: public string iconic_taxon_name
          VB: Public iconic_taxon_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.preferred_common_name
      commentId: F:JoshAaronMiller.INaturalist.Taxon.preferred_common_name
      language: CSharp
      name:
        CSharp: preferred_common_name
        VB: preferred_common_name
      nameWithType:
        CSharp: Taxon.preferred_common_name
        VB: Taxon.preferred_common_name
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.preferred_common_name
        VB: JoshAaronMiller.INaturalist.Taxon.preferred_common_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: preferred_common_name
        path: ''
        startLine: 2438
      syntax:
        content:
          CSharp: public string preferred_common_name
          VB: Public preferred_common_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Taxon.wikipedia_summary
      commentId: F:JoshAaronMiller.INaturalist.Taxon.wikipedia_summary
      language: CSharp
      name:
        CSharp: wikipedia_summary
        VB: wikipedia_summary
      nameWithType:
        CSharp: Taxon.wikipedia_summary
        VB: Taxon.wikipedia_summary
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Taxon.wikipedia_summary
        VB: JoshAaronMiller.INaturalist.Taxon.wikipedia_summary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: wikipedia_summary
        path: ''
        startLine: 2439
      syntax:
        content:
          CSharp: public string wikipedia_summary
          VB: Public wikipedia_summary As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.TaxonSummary
    commentId: T:JoshAaronMiller.INaturalist.TaxonSummary
    language: CSharp
    name:
      CSharp: TaxonSummary
      VB: TaxonSummary
    nameWithType:
      CSharp: TaxonSummary
      VB: TaxonSummary
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.TaxonSummary
      VB: JoshAaronMiller.INaturalist.TaxonSummary
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: TaxonSummary
      path: ''
      startLine: 2448
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TaxonSummary : JsonObject<TaxonSummary>
        VB: >-
          <Serializable>

          Public Class TaxonSummary

              Inherits JsonObject(Of TaxonSummary)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}.ToJson(JoshAaronMiller.INaturalist.TaxonSummary)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.TaxonSummary.wikipedia_summary
      commentId: F:JoshAaronMiller.INaturalist.TaxonSummary.wikipedia_summary
      language: CSharp
      name:
        CSharp: wikipedia_summary
        VB: wikipedia_summary
      nameWithType:
        CSharp: TaxonSummary.wikipedia_summary
        VB: TaxonSummary.wikipedia_summary
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSummary.wikipedia_summary
        VB: JoshAaronMiller.INaturalist.TaxonSummary.wikipedia_summary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: wikipedia_summary
        path: ''
        startLine: 2453
      syntax:
        content:
          CSharp: public string wikipedia_summary
          VB: Public wikipedia_summary As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.TimeDetails
    commentId: T:JoshAaronMiller.INaturalist.TimeDetails
    language: CSharp
    name:
      CSharp: TimeDetails
      VB: TimeDetails
    nameWithType:
      CSharp: TimeDetails
      VB: TimeDetails
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.TimeDetails
      VB: JoshAaronMiller.INaturalist.TimeDetails
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: TimeDetails
      path: ''
      startLine: 2462
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TimeDetails : JsonObject<TimeDetails>
        VB: >-
          <Serializable>

          Public Class TimeDetails

              Inherits JsonObject(Of TimeDetails)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}.ToJson(JoshAaronMiller.INaturalist.TimeDetails)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.TimeDetails.date
      commentId: F:JoshAaronMiller.INaturalist.TimeDetails.date
      language: CSharp
      name:
        CSharp: date
        VB: date
      nameWithType:
        CSharp: TimeDetails.date
        VB: TimeDetails.date
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TimeDetails.date
        VB: JoshAaronMiller.INaturalist.TimeDetails.date
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: date
        path: ''
        startLine: 2465
      syntax:
        content:
          CSharp: public string date
          VB: Public date As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TimeDetails.day
      commentId: F:JoshAaronMiller.INaturalist.TimeDetails.day
      language: CSharp
      name:
        CSharp: day
        VB: day
      nameWithType:
        CSharp: TimeDetails.day
        VB: TimeDetails.day
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TimeDetails.day
        VB: JoshAaronMiller.INaturalist.TimeDetails.day
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: day
        path: ''
        startLine: 2466
      syntax:
        content:
          CSharp: public int day
          VB: Public day As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TimeDetails.month
      commentId: F:JoshAaronMiller.INaturalist.TimeDetails.month
      language: CSharp
      name:
        CSharp: month
        VB: month
      nameWithType:
        CSharp: TimeDetails.month
        VB: TimeDetails.month
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TimeDetails.month
        VB: JoshAaronMiller.INaturalist.TimeDetails.month
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: month
        path: ''
        startLine: 2467
      syntax:
        content:
          CSharp: public int month
          VB: Public month As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TimeDetails.year
      commentId: F:JoshAaronMiller.INaturalist.TimeDetails.year
      language: CSharp
      name:
        CSharp: year
        VB: year
      nameWithType:
        CSharp: TimeDetails.year
        VB: TimeDetails.year
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TimeDetails.year
        VB: JoshAaronMiller.INaturalist.TimeDetails.year
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: year
        path: ''
        startLine: 2468
      syntax:
        content:
          CSharp: public int year
          VB: Public year As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TimeDetails.hour
      commentId: F:JoshAaronMiller.INaturalist.TimeDetails.hour
      language: CSharp
      name:
        CSharp: hour
        VB: hour
      nameWithType:
        CSharp: TimeDetails.hour
        VB: TimeDetails.hour
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TimeDetails.hour
        VB: JoshAaronMiller.INaturalist.TimeDetails.hour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: hour
        path: ''
        startLine: 2469
      syntax:
        content:
          CSharp: public int hour
          VB: Public hour As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TimeDetails.week
      commentId: F:JoshAaronMiller.INaturalist.TimeDetails.week
      language: CSharp
      name:
        CSharp: week
        VB: week
      nameWithType:
        CSharp: TimeDetails.week
        VB: TimeDetails.week
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TimeDetails.week
        VB: JoshAaronMiller.INaturalist.TimeDetails.week
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: week
        path: ''
        startLine: 2470
      syntax:
        content:
          CSharp: public int week
          VB: Public week As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.User
    commentId: T:JoshAaronMiller.INaturalist.User
    language: CSharp
    name:
      CSharp: User
      VB: User
    nameWithType:
      CSharp: User
      VB: User
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.User
      VB: JoshAaronMiller.INaturalist.User
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: User
      path: ''
      startLine: 2479
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class User : JsonObject<User>
        VB: >-
          <Serializable>

          Public Class User

              Inherits JsonObject(Of User)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}.ToJson(JoshAaronMiller.INaturalist.User)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.User.id
      commentId: F:JoshAaronMiller.INaturalist.User.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: User.id
        VB: User.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.id
        VB: JoshAaronMiller.INaturalist.User.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2482
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.login
      commentId: F:JoshAaronMiller.INaturalist.User.login
      language: CSharp
      name:
        CSharp: login
        VB: login
      nameWithType:
        CSharp: User.login
        VB: User.login
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.login
        VB: JoshAaronMiller.INaturalist.User.login
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: login
        path: ''
        startLine: 2483
      syntax:
        content:
          CSharp: public string login
          VB: Public login As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.spam
      commentId: F:JoshAaronMiller.INaturalist.User.spam
      language: CSharp
      name:
        CSharp: spam
        VB: spam
      nameWithType:
        CSharp: User.spam
        VB: User.spam
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.spam
        VB: JoshAaronMiller.INaturalist.User.spam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: spam
        path: ''
        startLine: 2484
      syntax:
        content:
          CSharp: public bool spam
          VB: Public spam As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.suspended
      commentId: F:JoshAaronMiller.INaturalist.User.suspended
      language: CSharp
      name:
        CSharp: suspended
        VB: suspended
      nameWithType:
        CSharp: User.suspended
        VB: User.suspended
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.suspended
        VB: JoshAaronMiller.INaturalist.User.suspended
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: suspended
        path: ''
        startLine: 2485
      syntax:
        content:
          CSharp: public bool suspended
          VB: Public suspended As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.created_at
      commentId: F:JoshAaronMiller.INaturalist.User.created_at
      language: CSharp
      name:
        CSharp: created_at
        VB: created_at
      nameWithType:
        CSharp: User.created_at
        VB: User.created_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.created_at
        VB: JoshAaronMiller.INaturalist.User.created_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at
        path: ''
        startLine: 2486
      syntax:
        content:
          CSharp: public string created_at
          VB: Public created_at As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.site_id
      commentId: F:JoshAaronMiller.INaturalist.User.site_id
      language: CSharp
      name:
        CSharp: site_id
        VB: site_id
      nameWithType:
        CSharp: User.site_id
        VB: User.site_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.site_id
        VB: JoshAaronMiller.INaturalist.User.site_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: site_id
        path: ''
        startLine: 2487
      syntax:
        content:
          CSharp: public int site_id
          VB: Public site_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.login_autocomplete
      commentId: F:JoshAaronMiller.INaturalist.User.login_autocomplete
      language: CSharp
      name:
        CSharp: login_autocomplete
        VB: login_autocomplete
      nameWithType:
        CSharp: User.login_autocomplete
        VB: User.login_autocomplete
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.login_autocomplete
        VB: JoshAaronMiller.INaturalist.User.login_autocomplete
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: login_autocomplete
        path: ''
        startLine: 2489
      syntax:
        content:
          CSharp: public string login_autocomplete
          VB: Public login_autocomplete As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.login_exact
      commentId: F:JoshAaronMiller.INaturalist.User.login_exact
      language: CSharp
      name:
        CSharp: login_exact
        VB: login_exact
      nameWithType:
        CSharp: User.login_exact
        VB: User.login_exact
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.login_exact
        VB: JoshAaronMiller.INaturalist.User.login_exact
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: login_exact
        path: ''
        startLine: 2490
      syntax:
        content:
          CSharp: public string login_exact
          VB: Public login_exact As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.name
      commentId: F:JoshAaronMiller.INaturalist.User.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: User.name
        VB: User.name
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.name
        VB: JoshAaronMiller.INaturalist.User.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: name
        path: ''
        startLine: 2491
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.name_autocomplete
      commentId: F:JoshAaronMiller.INaturalist.User.name_autocomplete
      language: CSharp
      name:
        CSharp: name_autocomplete
        VB: name_autocomplete
      nameWithType:
        CSharp: User.name_autocomplete
        VB: User.name_autocomplete
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.name_autocomplete
        VB: JoshAaronMiller.INaturalist.User.name_autocomplete
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: name_autocomplete
        path: ''
        startLine: 2492
      syntax:
        content:
          CSharp: public string name_autocomplete
          VB: Public name_autocomplete As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.orcid
      commentId: F:JoshAaronMiller.INaturalist.User.orcid
      language: CSharp
      name:
        CSharp: orcid
        VB: orcid
      nameWithType:
        CSharp: User.orcid
        VB: User.orcid
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.orcid
        VB: JoshAaronMiller.INaturalist.User.orcid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: orcid
        path: ''
        startLine: 2493
      syntax:
        content:
          CSharp: public string orcid
          VB: Public orcid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.icon
      commentId: F:JoshAaronMiller.INaturalist.User.icon
      language: CSharp
      name:
        CSharp: icon
        VB: icon
      nameWithType:
        CSharp: User.icon
        VB: User.icon
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.icon
        VB: JoshAaronMiller.INaturalist.User.icon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: icon
        path: ''
        startLine: 2494
      syntax:
        content:
          CSharp: public string icon
          VB: Public icon As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.observations_count
      commentId: F:JoshAaronMiller.INaturalist.User.observations_count
      language: CSharp
      name:
        CSharp: observations_count
        VB: observations_count
      nameWithType:
        CSharp: User.observations_count
        VB: User.observations_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.observations_count
        VB: JoshAaronMiller.INaturalist.User.observations_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: observations_count
        path: ''
        startLine: 2495
      syntax:
        content:
          CSharp: public int observations_count
          VB: Public observations_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.identifications_count
      commentId: F:JoshAaronMiller.INaturalist.User.identifications_count
      language: CSharp
      name:
        CSharp: identifications_count
        VB: identifications_count
      nameWithType:
        CSharp: User.identifications_count
        VB: User.identifications_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.identifications_count
        VB: JoshAaronMiller.INaturalist.User.identifications_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: identifications_count
        path: ''
        startLine: 2496
      syntax:
        content:
          CSharp: public int identifications_count
          VB: Public identifications_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.journal_posts_count
      commentId: F:JoshAaronMiller.INaturalist.User.journal_posts_count
      language: CSharp
      name:
        CSharp: journal_posts_count
        VB: journal_posts_count
      nameWithType:
        CSharp: User.journal_posts_count
        VB: User.journal_posts_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.journal_posts_count
        VB: JoshAaronMiller.INaturalist.User.journal_posts_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: journal_posts_count
        path: ''
        startLine: 2497
      syntax:
        content:
          CSharp: public int journal_posts_count
          VB: Public journal_posts_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.activity_count
      commentId: F:JoshAaronMiller.INaturalist.User.activity_count
      language: CSharp
      name:
        CSharp: activity_count
        VB: activity_count
      nameWithType:
        CSharp: User.activity_count
        VB: User.activity_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.activity_count
        VB: JoshAaronMiller.INaturalist.User.activity_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: activity_count
        path: ''
        startLine: 2498
      syntax:
        content:
          CSharp: public int activity_count
          VB: Public activity_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.species_count
      commentId: F:JoshAaronMiller.INaturalist.User.species_count
      language: CSharp
      name:
        CSharp: species_count
        VB: species_count
      nameWithType:
        CSharp: User.species_count
        VB: User.species_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.species_count
        VB: JoshAaronMiller.INaturalist.User.species_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: species_count
        path: ''
        startLine: 2499
      syntax:
        content:
          CSharp: public int species_count
          VB: Public species_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.universal_search_rank
      commentId: F:JoshAaronMiller.INaturalist.User.universal_search_rank
      language: CSharp
      name:
        CSharp: universal_search_rank
        VB: universal_search_rank
      nameWithType:
        CSharp: User.universal_search_rank
        VB: User.universal_search_rank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.universal_search_rank
        VB: JoshAaronMiller.INaturalist.User.universal_search_rank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: universal_search_rank
        path: ''
        startLine: 2500
      syntax:
        content:
          CSharp: public int universal_search_rank
          VB: Public universal_search_rank As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.roles
      commentId: F:JoshAaronMiller.INaturalist.User.roles
      language: CSharp
      name:
        CSharp: roles
        VB: roles
      nameWithType:
        CSharp: User.roles
        VB: User.roles
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.roles
        VB: JoshAaronMiller.INaturalist.User.roles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: roles
        path: ''
        startLine: 2501
      syntax:
        content:
          CSharp: public List<string> roles
          VB: Public roles As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.User.icon_url
      commentId: F:JoshAaronMiller.INaturalist.User.icon_url
      language: CSharp
      name:
        CSharp: icon_url
        VB: icon_url
      nameWithType:
        CSharp: User.icon_url
        VB: User.icon_url
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.User.icon_url
        VB: JoshAaronMiller.INaturalist.User.icon_url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: icon_url
        path: ''
        startLine: 2502
      syntax:
        content:
          CSharp: public string icon_url
          VB: Public icon_url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.UserMessage
    commentId: T:JoshAaronMiller.INaturalist.UserMessage
    language: CSharp
    name:
      CSharp: UserMessage
      VB: UserMessage
    nameWithType:
      CSharp: UserMessage
      VB: UserMessage
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.UserMessage
      VB: JoshAaronMiller.INaturalist.UserMessage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: UserMessage
      path: ''
      startLine: 2511
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class UserMessage : JsonObject<UserMessage>
        VB: >-
          <Serializable>

          Public Class UserMessage

              Inherits JsonObject(Of UserMessage)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}.ToJson(JoshAaronMiller.INaturalist.UserMessage)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.UserMessage.id
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: UserMessage.id
        VB: UserMessage.id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.id
        VB: JoshAaronMiller.INaturalist.UserMessage.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: id
        path: ''
        startLine: 2514
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.user_id
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.user_id
      language: CSharp
      name:
        CSharp: user_id
        VB: user_id
      nameWithType:
        CSharp: UserMessage.user_id
        VB: UserMessage.user_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.user_id
        VB: JoshAaronMiller.INaturalist.UserMessage.user_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: user_id
        path: ''
        startLine: 2515
      syntax:
        content:
          CSharp: public int user_id
          VB: Public user_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.thread_id
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.thread_id
      language: CSharp
      name:
        CSharp: thread_id
        VB: thread_id
      nameWithType:
        CSharp: UserMessage.thread_id
        VB: UserMessage.thread_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.thread_id
        VB: JoshAaronMiller.INaturalist.UserMessage.thread_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: thread_id
        path: ''
        startLine: 2516
      syntax:
        content:
          CSharp: public int thread_id
          VB: Public thread_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.subject
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.subject
      language: CSharp
      name:
        CSharp: subject
        VB: subject
      nameWithType:
        CSharp: UserMessage.subject
        VB: UserMessage.subject
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.subject
        VB: JoshAaronMiller.INaturalist.UserMessage.subject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: subject
        path: ''
        startLine: 2517
      syntax:
        content:
          CSharp: public string subject
          VB: Public subject As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.body
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.body
      language: CSharp
      name:
        CSharp: body
        VB: body
      nameWithType:
        CSharp: UserMessage.body
        VB: UserMessage.body
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.body
        VB: JoshAaronMiller.INaturalist.UserMessage.body
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: body
        path: ''
        startLine: 2518
      syntax:
        content:
          CSharp: public string body
          VB: Public body As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.thread_messages_count
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.thread_messages_count
      language: CSharp
      name:
        CSharp: thread_messages_count
        VB: thread_messages_count
      nameWithType:
        CSharp: UserMessage.thread_messages_count
        VB: UserMessage.thread_messages_count
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.thread_messages_count
        VB: JoshAaronMiller.INaturalist.UserMessage.thread_messages_count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: thread_messages_count
        path: ''
        startLine: 2519
      syntax:
        content:
          CSharp: public int thread_messages_count
          VB: Public thread_messages_count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.read_at
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.read_at
      language: CSharp
      name:
        CSharp: read_at
        VB: read_at
      nameWithType:
        CSharp: UserMessage.read_at
        VB: UserMessage.read_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.read_at
        VB: JoshAaronMiller.INaturalist.UserMessage.read_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: read_at
        path: ''
        startLine: 2520
      syntax:
        content:
          CSharp: public TimeDetails read_at
          VB: Public read_at As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.created_at
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.created_at
      language: CSharp
      name:
        CSharp: created_at
        VB: created_at
      nameWithType:
        CSharp: UserMessage.created_at
        VB: UserMessage.created_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.created_at
        VB: JoshAaronMiller.INaturalist.UserMessage.created_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: created_at
        path: ''
        startLine: 2521
      syntax:
        content:
          CSharp: public TimeDetails created_at
          VB: Public created_at As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.updated_at
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.updated_at
      language: CSharp
      name:
        CSharp: updated_at
        VB: updated_at
      nameWithType:
        CSharp: UserMessage.updated_at
        VB: UserMessage.updated_at
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.updated_at
        VB: JoshAaronMiller.INaturalist.UserMessage.updated_at
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: updated_at
        path: ''
        startLine: 2522
      syntax:
        content:
          CSharp: public TimeDetails updated_at
          VB: Public updated_at As TimeDetails
        return:
          type: JoshAaronMiller.INaturalist.TimeDetails
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.from_user
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.from_user
      language: CSharp
      name:
        CSharp: from_user
        VB: from_user
      nameWithType:
        CSharp: UserMessage.from_user
        VB: UserMessage.from_user
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.from_user
        VB: JoshAaronMiller.INaturalist.UserMessage.from_user
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: from_user
        path: ''
        startLine: 2523
      syntax:
        content:
          CSharp: public User from_user
          VB: Public from_user As User
        return:
          type: JoshAaronMiller.INaturalist.User
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.to_user
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.to_user
      language: CSharp
      name:
        CSharp: to_user
        VB: to_user
      nameWithType:
        CSharp: UserMessage.to_user
        VB: UserMessage.to_user
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.to_user
        VB: JoshAaronMiller.INaturalist.UserMessage.to_user
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: to_user
        path: ''
        startLine: 2524
      syntax:
        content:
          CSharp: public User to_user
          VB: Public to_user As User
        return:
          type: JoshAaronMiller.INaturalist.User
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.thread_flags
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.thread_flags
      language: CSharp
      name:
        CSharp: thread_flags
        VB: thread_flags
      nameWithType:
        CSharp: UserMessage.thread_flags
        VB: UserMessage.thread_flags
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.thread_flags
        VB: JoshAaronMiller.INaturalist.UserMessage.thread_flags
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: thread_flags
        path: ''
        startLine: 2525
      syntax:
        content:
          CSharp: public List<Flag> thread_flags
          VB: Public thread_flags As List(Of Flag)
        return:
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.Flag}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.UserMessage.flaggable_message_id
      commentId: F:JoshAaronMiller.INaturalist.UserMessage.flaggable_message_id
      language: CSharp
      name:
        CSharp: flaggable_message_id
        VB: flaggable_message_id
      nameWithType:
        CSharp: UserMessage.flaggable_message_id
        VB: UserMessage.flaggable_message_id
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.UserMessage.flaggable_message_id
        VB: JoshAaronMiller.INaturalist.UserMessage.flaggable_message_id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: flaggable_message_id
        path: ''
        startLine: 2526
      syntax:
        content:
          CSharp: public int flaggable_message_id
          VB: Public flaggable_message_id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.Vote
    commentId: T:JoshAaronMiller.INaturalist.Vote
    language: CSharp
    name:
      CSharp: Vote
      VB: Vote
    nameWithType:
      CSharp: Vote
      VB: Vote
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.Vote
      VB: JoshAaronMiller.INaturalist.Vote
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Vote
      path: ''
      startLine: 2535
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Vote : JsonObject<Vote>
        VB: >-
          <Serializable>

          Public Class Vote

              Inherits JsonObject(Of Vote)
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}
    inheritedMembers:
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}.CreateFromJson(System.String)
    - JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}.ToJson(JoshAaronMiller.INaturalist.Vote)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.Vote.vote
      commentId: F:JoshAaronMiller.INaturalist.Vote.vote
      language: CSharp
      name:
        CSharp: vote
        VB: vote
      nameWithType:
        CSharp: Vote.vote
        VB: Vote.vote
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Vote.vote
        VB: JoshAaronMiller.INaturalist.Vote.vote
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: vote
        path: ''
        startLine: 2538
      syntax:
        content:
          CSharp: public string vote
          VB: Public vote As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.Vote.scope
      commentId: F:JoshAaronMiller.INaturalist.Vote.scope
      language: CSharp
      name:
        CSharp: scope
        VB: scope
      nameWithType:
        CSharp: Vote.scope
        VB: Vote.scope
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.Vote.scope
        VB: JoshAaronMiller.INaturalist.Vote.scope
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: scope
        path: ''
        startLine: 2544
      syntax:
        content:
          CSharp: public string scope
          VB: Public scope As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.IdentificationSearch
    commentId: T:JoshAaronMiller.INaturalist.IdentificationSearch
    language: CSharp
    name:
      CSharp: IdentificationSearch
      VB: IdentificationSearch
    nameWithType:
      CSharp: IdentificationSearch
      VB: IdentificationSearch
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.IdentificationSearch
      VB: JoshAaronMiller.INaturalist.IdentificationSearch
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: IdentificationSearch
      path: ''
      startLine: 2559
    summary: "\nAn IdentificationSearch is a set of parameters for searching iNaturalist Identifications.\nUsage: myINatManager.SearchIdentifications(myIdentificationSearch)\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IdentificationSearch : SearchObject'
        VB: >-
          Public Class IdentificationSearch

              Inherits SearchObject
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.SearchObject
    inheritedMembers:
    - JoshAaronMiller.INaturalist.SearchObject.boolParams
    - JoshAaronMiller.INaturalist.SearchObject.stringParams
    - JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
    - JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
    - JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeIds(List<Int32>)
        VB: IncludeIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludeIds(List<Int32>)
        VB: IdentificationSearch.IncludeIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeIds
        path: ''
        startLine: 2571
      summary: "\nRequire the search to include these IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeIds(List<int> ids)
          VB: Public Sub IncludeIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: IDs to include
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludePlaceIds(List<Int32>)
        VB: IncludePlaceIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludePlaceIds(List<Int32>)
        VB: IdentificationSearch.IncludePlaceIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludePlaceIds
        path: ''
        startLine: 2581
      summary: "\nRequire the observations to be within these place IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludePlaceIds(List<int> ids)
          VB: Public Sub IncludePlaceIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Place IDs to require
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeTaxonIds(List<Int32>)
        VB: IncludeTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludeTaxonIds(List<Int32>)
        VB: IdentificationSearch.IncludeTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTaxonIds
        path: ''
        startLine: 2590
      summary: "\nLimit the search to these taxa IDs and their descendents.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeTaxonIds(List<int> ids)
          VB: Public Sub IncludeTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Taxa IDs to include
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeObservationTaxonIds(List<Int32>)
        VB: IncludeObservationTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludeObservationTaxonIds(List<Int32>)
        VB: IdentificationSearch.IncludeObservationTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeObservationTaxonIds
        path: ''
        startLine: 2599
      summary: "\nLimit the search to observations with these taxa IDs and their descendents.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeObservationTaxonIds(List<int> ids)
          VB: Public Sub IncludeObservationTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Observation taxa IDs to include
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeIconicTaxonIds(List<Int32>)
        VB: IncludeIconicTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludeIconicTaxonIds(List<Int32>)
        VB: IdentificationSearch.IncludeIconicTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeIconicTaxonIds
        path: ''
        startLine: 2608
      summary: "\nLimit the search to identifications with these iconic taxa.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeIconicTaxonIds(List<int> ids)
          VB: Public Sub IncludeIconicTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Iconic taxa IDs to include
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeObservationIconicTaxonIds(List<Int32>)
        VB: IncludeObservationIconicTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludeObservationIconicTaxonIds(List<Int32>)
        VB: IdentificationSearch.IncludeObservationIconicTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeObservationIconicTaxonIds
        path: ''
        startLine: 2617
      summary: "\nLimit the search to identifications of observations with these iconic taxa.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeObservationIconicTaxonIds(List<int> ids)
          VB: Public Sub IncludeObservationIconicTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Observation iconic taxa IDs to include
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: ExcludeTaxonIds(List<Int32>)
        VB: ExcludeTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.ExcludeTaxonIds(List<Int32>)
        VB: IdentificationSearch.ExcludeTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeTaxonIds
        path: ''
        startLine: 2626
      summary: "\nLimit the search to exclude these taxa IDs and their descendents.\n"
      example: []
      syntax:
        content:
          CSharp: public void ExcludeTaxonIds(List<int> ids)
          VB: Public Sub ExcludeTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Taxa IDs to exclude
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: ExcludeObservationTaxonIds(List<Int32>)
        VB: ExcludeObservationTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.ExcludeObservationTaxonIds(List<Int32>)
        VB: IdentificationSearch.ExcludeObservationTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeObservationTaxonIds
        path: ''
        startLine: 2635
      summary: "\nLimit the search to exclude identifications of observations with taxa IDs and their descendents.\n"
      example: []
      syntax:
        content:
          CSharp: public void ExcludeObservationTaxonIds(List<int> ids)
          VB: Public Sub ExcludeObservationTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Observation taxa IDs to exclude
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits(System.String,System.String)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetObservedOnDateLimits(String, String)
        VB: SetObservedOnDateLimits(String, String)
      nameWithType:
        CSharp: IdentificationSearch.SetObservedOnDateLimits(String, String)
        VB: IdentificationSearch.SetObservedOnDateLimits(String, String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits(System.String, System.String)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetObservedOnDateLimits
        path: ''
        startLine: 2646
      summary: "\nLimit the search to observations observed within a timeframe. Both start and end dates are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetObservedOnDateLimits(string start = "", string end = "")
          VB: Public Sub SetObservedOnDateLimits(start As String = "", end As String = "")
        parameters:
        - id: start
          type: System.String
          description: The start date, formatted as YYYY-MM-DD. Limit observations to on or after this date.
        - id: end
          type: System.String
          description: The end date, formatted as YYYY-MM-DD. Limit observations to on or before this date.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits(System.String,System.String)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetCreatedOnDateLimits(String, String)
        VB: SetCreatedOnDateLimits(String, String)
      nameWithType:
        CSharp: IdentificationSearch.SetCreatedOnDateLimits(String, String)
        VB: IdentificationSearch.SetCreatedOnDateLimits(String, String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits(System.String, System.String)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetCreatedOnDateLimits
        path: ''
        startLine: 2663
      summary: "\nLimit the search to identifications created within a timeframe. Both start and end dates are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCreatedOnDateLimits(string start = "", string end = "")
          VB: Public Sub SetCreatedOnDateLimits(start As String = "", end As String = "")
        parameters:
        - id: start
          type: System.String
          description: The start date, formatted as YYYY-MM-DD. Limit identifications created on or after this date.
        - id: end
          type: System.String
          description: The end date, formatted as YYYY-MM-DD. Limit identifications created on or before this date.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits(System.String,System.String)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetObservationCreatedOnDateLimits(String, String)
        VB: SetObservationCreatedOnDateLimits(String, String)
      nameWithType:
        CSharp: IdentificationSearch.SetObservationCreatedOnDateLimits(String, String)
        VB: IdentificationSearch.SetObservationCreatedOnDateLimits(String, String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits(System.String, System.String)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetObservationCreatedOnDateLimits
        path: ''
        startLine: 2680
      summary: "\nLimit the search to identifications of observations created within a timeframe. Both start and end dates are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetObservationCreatedOnDateLimits(string start = "", string end = "")
          VB: Public Sub SetObservationCreatedOnDateLimits(start As String = "", end As String = "")
        parameters:
        - id: start
          type: System.String
          description: The start date, formatted as YYYY-MM-DD. Limit identifications to observations created on or after this date.
        - id: end
          type: System.String
          description: The end date, formatted as YYYY-MM-DD. Limit identifications to observations created on or before this date.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks(System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks(System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank})
      language: CSharp
      name:
        CSharp: IncludeTaxonRanks(List<TaxonRank>)
        VB: IncludeTaxonRanks(List(Of TaxonRank))
      nameWithType:
        CSharp: IdentificationSearch.IncludeTaxonRanks(List<TaxonRank>)
        VB: IdentificationSearch.IncludeTaxonRanks(List(Of TaxonRank))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks(System.Collections.Generic.List<JoshAaronMiller.INaturalist.TaxonRank>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks(System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.TaxonRank))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTaxonRanks
        path: ''
        startLine: 2696
      summary: "\nLimit the search to identifications of taxa of these ranks.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeTaxonRanks(List<TaxonRank> ranks)
          VB: Public Sub IncludeTaxonRanks(ranks As List(Of TaxonRank))
        parameters:
        - id: ranks
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank}
          description: The list of taxon ranks to include in the search.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks(System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks(System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank})
      language: CSharp
      name:
        CSharp: IncludeObservationTaxonRanks(List<TaxonRank>)
        VB: IncludeObservationTaxonRanks(List(Of TaxonRank))
      nameWithType:
        CSharp: IdentificationSearch.IncludeObservationTaxonRanks(List<TaxonRank>)
        VB: IdentificationSearch.IncludeObservationTaxonRanks(List(Of TaxonRank))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks(System.Collections.Generic.List<JoshAaronMiller.INaturalist.TaxonRank>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks(System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.TaxonRank))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeObservationTaxonRanks
        path: ''
        startLine: 2705
      summary: "\nLimit the search to identifications of observations that have a taxon of these ranks.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeObservationTaxonRanks(List<TaxonRank> ranks)
          VB: Public Sub IncludeObservationTaxonRanks(ranks As List(Of TaxonRank))
        parameters:
        - id: ranks
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank}
          description: The list of observation taxon ranks to include in the search.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeIdentificationsByUserId(List<Int32>)
        VB: IncludeIdentificationsByUserId(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludeIdentificationsByUserId(List<Int32>)
        VB: IdentificationSearch.IncludeIdentificationsByUserId(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeIdentificationsByUserId
        path: ''
        startLine: 2714
      summary: "\nLimit the search to identifications made by users of these IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeIdentificationsByUserId(List<int> userIds)
          VB: Public Sub IncludeIdentificationsByUserId(userIds As List(Of Integer))
        parameters:
        - id: userIds
          type: System.Collections.Generic.List{System.Int32}
          description: The list of user IDs; limit the search to their identifications.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeIdentificationsByUserLogin(List<Int32>)
        VB: IncludeIdentificationsByUserLogin(List(Of Int32))
      nameWithType:
        CSharp: IdentificationSearch.IncludeIdentificationsByUserLogin(List<Int32>)
        VB: IdentificationSearch.IncludeIdentificationsByUserLogin(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeIdentificationsByUserLogin
        path: ''
        startLine: 2723
      summary: "\nLimit the search to identifications made by users with these login names.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeIdentificationsByUserLogin(List<int> userLogins)
          VB: Public Sub IncludeIdentificationsByUserLogin(userLogins As List(Of Integer))
        parameters:
        - id: userLogins
          type: System.Collections.Generic.List{System.Int32}
          description: The list of usernames; limit the search to their identifications.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories(System.Collections.Generic.List{System.String})
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: IncludeCategories(List<String>)
        VB: IncludeCategories(List(Of String))
      nameWithType:
        CSharp: IdentificationSearch.IncludeCategories(List<String>)
        VB: IdentificationSearch.IncludeCategories(List(Of String))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories(System.Collections.Generic.List<System.String>)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeCategories
        path: ''
        startLine: 2732
      summary: "\nLimit the search to identifications with these category labels.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeCategories(List<string> categories)
          VB: Public Sub IncludeCategories(categories As List(Of String))
        parameters:
        - id: categories
          type: System.Collections.Generic.List{System.String}
          description: The identification categories to include in the search.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank,JoshAaronMiller.INaturalist.TaxonRank)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank,JoshAaronMiller.INaturalist.TaxonRank)
      language: CSharp
      name:
        CSharp: SetTaxonRankLimits(TaxonRank, TaxonRank)
        VB: SetTaxonRankLimits(TaxonRank, TaxonRank)
      nameWithType:
        CSharp: IdentificationSearch.SetTaxonRankLimits(TaxonRank, TaxonRank)
        VB: IdentificationSearch.SetTaxonRankLimits(TaxonRank, TaxonRank)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank, JoshAaronMiller.INaturalist.TaxonRank)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank, JoshAaronMiller.INaturalist.TaxonRank)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetTaxonRankLimits
        path: ''
        startLine: 2749
      summary: "\nLimit the search to taxa between these limits.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTaxonRankLimits(TaxonRank lowest = TaxonRank.None, TaxonRank highest = TaxonRank.None)
          VB: Public Sub SetTaxonRankLimits(lowest As TaxonRank = TaxonRank.None, highest As TaxonRank = TaxonRank.None)
        parameters:
        - id: lowest
          type: JoshAaronMiller.INaturalist.TaxonRank
          description: The lowest taxon rank to include in the search (include this and higher).
        - id: highest
          type: JoshAaronMiller.INaturalist.TaxonRank
          description: The highest taxon rank to include in the search (include this and lower).
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank,JoshAaronMiller.INaturalist.TaxonRank)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank,JoshAaronMiller.INaturalist.TaxonRank)
      language: CSharp
      name:
        CSharp: SetObservationTaxonRankLimits(TaxonRank, TaxonRank)
        VB: SetObservationTaxonRankLimits(TaxonRank, TaxonRank)
      nameWithType:
        CSharp: IdentificationSearch.SetObservationTaxonRankLimits(TaxonRank, TaxonRank)
        VB: IdentificationSearch.SetObservationTaxonRankLimits(TaxonRank, TaxonRank)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank, JoshAaronMiller.INaturalist.TaxonRank)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank, JoshAaronMiller.INaturalist.TaxonRank)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetObservationTaxonRankLimits
        path: ''
        startLine: 2775
      summary: "\nLimit the search to identifications of observations with taxa between these limits.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetObservationTaxonRankLimits(TaxonRank lowest = TaxonRank.None, TaxonRank highest = TaxonRank.None)
          VB: Public Sub SetObservationTaxonRankLimits(lowest As TaxonRank = TaxonRank.None, highest As TaxonRank = TaxonRank.None)
        parameters:
        - id: lowest
          type: JoshAaronMiller.INaturalist.TaxonRank
          description: The lowest observation taxon rank to include in the search (include this and higher).
        - id: highest
          type: JoshAaronMiller.INaturalist.TaxonRank
          description: The highest observation taxon rank to include in the search (include this and lower).
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
      language: CSharp
      name:
        CSharp: SetQualityGrade(QualityGrade)
        VB: SetQualityGrade(QualityGrade)
      nameWithType:
        CSharp: IdentificationSearch.SetQualityGrade(QualityGrade)
        VB: IdentificationSearch.SetQualityGrade(QualityGrade)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetQualityGrade
        path: ''
        startLine: 2792
      summary: "\nLimit the search to observations of this quality grade.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetQualityGrade(QualityGrade quality)
          VB: Public Sub SetQualityGrade(quality As QualityGrade)
        parameters:
        - id: quality
          type: JoshAaronMiller.INaturalist.QualityGrade
          description: The quality grade to search for.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits(System.Int32,System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetIdentificationnIdLimits(Int32, Int32)
        VB: SetIdentificationnIdLimits(Int32, Int32)
      nameWithType:
        CSharp: IdentificationSearch.SetIdentificationnIdLimits(Int32, Int32)
        VB: IdentificationSearch.SetIdentificationnIdLimits(Int32, Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits(System.Int32, System.Int32)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetIdentificationnIdLimits
        path: ''
        startLine: 2809
      summary: "\nLimit the search to identifications with IDs within this range. Both min and max are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetIdentificationnIdLimits(int min = -1, int max = -1)
          VB: Public Sub SetIdentificationnIdLimits(min As Integer = -1, max As Integer = -1)
        parameters:
        - id: min
          type: System.Int32
          description: Include this ID and higher.
        - id: max
          type: System.Int32
          description: Include this ID and lower.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination(System.Int32,System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetPagination(Int32, Int32)
        VB: SetPagination(Int32, Int32)
      nameWithType:
        CSharp: IdentificationSearch.SetPagination(Int32, Int32)
        VB: IdentificationSearch.SetPagination(Int32, Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination(System.Int32, System.Int32)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetPagination
        path: ''
        startLine: 2826
      summary: "\nSet the number of search results per page and which page to receive. For example, SetPagination(50,2) would return results 51-100.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPagination(int resultsPerPage = 30, int page = 1)
          VB: Public Sub SetPagination(resultsPerPage As Integer = 30, page As Integer = 1)
        parameters:
        - id: resultsPerPage
          type: System.Int32
          description: How many results to return per page (default 30).
        - id: page
          type: System.Int32
          description: Which page of results to return (default 1).
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy,JoshAaronMiller.INaturalist.SortOrder)
      commentId: M:JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy,JoshAaronMiller.INaturalist.SortOrder)
      language: CSharp
      name:
        CSharp: SetOrder(OrderBy, SortOrder)
        VB: SetOrder(OrderBy, SortOrder)
      nameWithType:
        CSharp: IdentificationSearch.SetOrder(OrderBy, SortOrder)
        VB: IdentificationSearch.SetOrder(OrderBy, SortOrder)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy, JoshAaronMiller.INaturalist.SortOrder)
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy, JoshAaronMiller.INaturalist.SortOrder)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetOrder
        path: ''
        startLine: 2837
      summary: "\nSet how the results are ordered. Defaults to created at date, descending.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetOrder(OrderBy orderBy, SortOrder sortOrder)
          VB: Public Sub SetOrder(orderBy As OrderBy, sortOrder As SortOrder)
        parameters:
        - id: orderBy
          type: JoshAaronMiller.INaturalist.OrderBy
          description: The parameter to sort the order by.
        - id: sortOrder
          type: JoshAaronMiller.INaturalist.SortOrder
          description: Whether to sort ascending or descending.
      overload: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
    commentId: T:JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
    language: CSharp
    name:
      CSharp: IdentificationSearch.IdentificationCategory
      VB: IdentificationSearch.IdentificationCategory
    nameWithType:
      CSharp: IdentificationSearch.IdentificationCategory
      VB: IdentificationSearch.IdentificationCategory
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
      VB: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: IdentificationCategory
      path: ''
      startLine: 2562
    syntax:
      content:
        CSharp: public enum IdentificationCategory
        VB: Public Enum IdentificationCategory
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Any
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Any
      language: CSharp
      name:
        CSharp: Any
        VB: Any
      nameWithType:
        CSharp: IdentificationSearch.IdentificationCategory.Any
        VB: IdentificationSearch.IdentificationCategory.Any
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Any
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Any
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Any
        path: ''
        startLine: 2564
      syntax:
        content:
          CSharp: Any = 0
          VB: Any = 0
        return:
          type: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Improving
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Improving
      language: CSharp
      name:
        CSharp: Improving
        VB: Improving
      nameWithType:
        CSharp: IdentificationSearch.IdentificationCategory.Improving
        VB: IdentificationSearch.IdentificationCategory.Improving
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Improving
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Improving
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Improving
        path: ''
        startLine: 2564
      syntax:
        content:
          CSharp: Improving = 1
          VB: Improving = 1
        return:
          type: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Supporting
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Supporting
      language: CSharp
      name:
        CSharp: Supporting
        VB: Supporting
      nameWithType:
        CSharp: IdentificationSearch.IdentificationCategory.Supporting
        VB: IdentificationSearch.IdentificationCategory.Supporting
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Supporting
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Supporting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Supporting
        path: ''
        startLine: 2564
      syntax:
        content:
          CSharp: Supporting = 2
          VB: Supporting = 2
        return:
          type: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Leading
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Leading
      language: CSharp
      name:
        CSharp: Leading
        VB: Leading
      nameWithType:
        CSharp: IdentificationSearch.IdentificationCategory.Leading
        VB: IdentificationSearch.IdentificationCategory.Leading
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Leading
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Leading
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Leading
        path: ''
        startLine: 2564
      syntax:
        content:
          CSharp: Leading = 3
          VB: Leading = 3
        return:
          type: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Maverick
      commentId: F:JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Maverick
      language: CSharp
      name:
        CSharp: Maverick
        VB: Maverick
      nameWithType:
        CSharp: IdentificationSearch.IdentificationCategory.Maverick
        VB: IdentificationSearch.IdentificationCategory.Maverick
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Maverick
        VB: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory.Maverick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Maverick
        path: ''
        startLine: 2564
      syntax:
        content:
          CSharp: Maverick = 4
          VB: Maverick = 4
        return:
          type: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.MessageSearch
    commentId: T:JoshAaronMiller.INaturalist.MessageSearch
    language: CSharp
    name:
      CSharp: MessageSearch
      VB: MessageSearch
    nameWithType:
      CSharp: MessageSearch
      VB: MessageSearch
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.MessageSearch
      VB: JoshAaronMiller.INaturalist.MessageSearch
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: MessageSearch
      path: ''
      startLine: 2854
    summary: "\nA MessageSearch is a set of parameters for searching an iNaturalist user&apos;s private messages.\nUsage: myINatManager.GetUserMessages(myMessageSearch)\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MessageSearch : SearchObject'
        VB: >-
          Public Class MessageSearch

              Inherits SearchObject
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.SearchObject
    inheritedMembers:
    - JoshAaronMiller.INaturalist.SearchObject.boolParams
    - JoshAaronMiller.INaturalist.SearchObject.stringParams
    - JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
    - JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
    - JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.MessageSearch.SetPage(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.MessageSearch.SetPage(System.Int32)
      language: CSharp
      name:
        CSharp: SetPage(Int32)
        VB: SetPage(Int32)
      nameWithType:
        CSharp: MessageSearch.SetPage(Int32)
        VB: MessageSearch.SetPage(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.SetPage(System.Int32)
        VB: JoshAaronMiller.INaturalist.MessageSearch.SetPage(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetPage
        path: ''
        startLine: 2866
      summary: "\nSet the pagination page number.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPage(int page)
          VB: Public Sub SetPage(page As Integer)
        parameters:
        - id: page
          type: System.Int32
          description: The page of results to fetch.
      overload: JoshAaronMiller.INaturalist.MessageSearch.SetPage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.MessageSearch.SetBox(JoshAaronMiller.INaturalist.MessageSearch.Box)
      commentId: M:JoshAaronMiller.INaturalist.MessageSearch.SetBox(JoshAaronMiller.INaturalist.MessageSearch.Box)
      language: CSharp
      name:
        CSharp: SetBox(MessageSearch.Box)
        VB: SetBox(MessageSearch.Box)
      nameWithType:
        CSharp: MessageSearch.SetBox(MessageSearch.Box)
        VB: MessageSearch.SetBox(MessageSearch.Box)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.SetBox(JoshAaronMiller.INaturalist.MessageSearch.Box)
        VB: JoshAaronMiller.INaturalist.MessageSearch.SetBox(JoshAaronMiller.INaturalist.MessageSearch.Box)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetBox
        path: ''
        startLine: 2875
      summary: "\nSet which box to search, defaults to inbox.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBox(MessageSearch.Box box)
          VB: Public Sub SetBox(box As MessageSearch.Box)
        parameters:
        - id: box
          type: JoshAaronMiller.INaturalist.MessageSearch.Box
          description: The box of messages to search.
      overload: JoshAaronMiller.INaturalist.MessageSearch.SetBox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.MessageSearch.SetQuery(System.String)
      commentId: M:JoshAaronMiller.INaturalist.MessageSearch.SetQuery(System.String)
      language: CSharp
      name:
        CSharp: SetQuery(String)
        VB: SetQuery(String)
      nameWithType:
        CSharp: MessageSearch.SetQuery(String)
        VB: MessageSearch.SetQuery(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.SetQuery(System.String)
        VB: JoshAaronMiller.INaturalist.MessageSearch.SetQuery(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetQuery
        path: ''
        startLine: 2884
      summary: "\nSet an optional query string to search for in the subject and body of messages.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetQuery(string q)
          VB: Public Sub SetQuery(q As String)
        parameters:
        - id: q
          type: System.String
          description: The query string; search will return only messages that match this query in subject or body.
      overload: JoshAaronMiller.INaturalist.MessageSearch.SetQuery*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent(System.String)
      commentId: M:JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent(System.String)
      language: CSharp
      name:
        CSharp: SetCorrespondent(String)
        VB: SetCorrespondent(String)
      nameWithType:
        CSharp: MessageSearch.SetCorrespondent(String)
        VB: MessageSearch.SetCorrespondent(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent(System.String)
        VB: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetCorrespondent
        path: ''
        startLine: 2893
      summary: "\nLimit the search to only messages with a correspondent of this user ID or username.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCorrespondent(string user)
          VB: Public Sub SetCorrespondent(user As String)
        parameters:
        - id: user
          type: System.String
          description: The user ID or username to limit the search to.
      overload: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread(System.Boolean)
      commentId: M:JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowOnlyLatestMessagePerThread(Boolean)
        VB: ShowOnlyLatestMessagePerThread(Boolean)
      nameWithType:
        CSharp: MessageSearch.ShowOnlyLatestMessagePerThread(Boolean)
        VB: MessageSearch.ShowOnlyLatestMessagePerThread(Boolean)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread(System.Boolean)
        VB: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ShowOnlyLatestMessagePerThread
        path: ''
        startLine: 2909
      summary: "\nIf this setting is toggled on (default off), group the results by thread ID,\nonly show the latest message per thread, and include a thread_messages_count\nwhich shows the total number of messages in that thread.\n"
      remarks: "\nNote that this setting can only be used if query (`q`) is not set and\nthread_messages_count always reports the count from `any` box instead of the\nbox specified.\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowOnlyLatestMessagePerThread(bool on = false)
          VB: Public Sub ShowOnlyLatestMessagePerThread(on As Boolean = False)
        parameters:
        - id: on
          type: System.Boolean
          description: Whether to only show the latest message per thread.
      overload: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.MessageSearch.Box
    commentId: T:JoshAaronMiller.INaturalist.MessageSearch.Box
    language: CSharp
    name:
      CSharp: MessageSearch.Box
      VB: MessageSearch.Box
    nameWithType:
      CSharp: MessageSearch.Box
      VB: MessageSearch.Box
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.MessageSearch.Box
      VB: JoshAaronMiller.INaturalist.MessageSearch.Box
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Box
      path: ''
      startLine: 2857
    syntax:
      content:
        CSharp: public enum Box
        VB: Public Enum Box
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.MessageSearch.Box.Inbox
      commentId: F:JoshAaronMiller.INaturalist.MessageSearch.Box.Inbox
      language: CSharp
      name:
        CSharp: Inbox
        VB: Inbox
      nameWithType:
        CSharp: MessageSearch.Box.Inbox
        VB: MessageSearch.Box.Inbox
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.Box.Inbox
        VB: JoshAaronMiller.INaturalist.MessageSearch.Box.Inbox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Inbox
        path: ''
        startLine: 2859
      syntax:
        content:
          CSharp: Inbox = 0
          VB: Inbox = 0
        return:
          type: JoshAaronMiller.INaturalist.MessageSearch.Box
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.MessageSearch.Box.Sent
      commentId: F:JoshAaronMiller.INaturalist.MessageSearch.Box.Sent
      language: CSharp
      name:
        CSharp: Sent
        VB: Sent
      nameWithType:
        CSharp: MessageSearch.Box.Sent
        VB: MessageSearch.Box.Sent
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.Box.Sent
        VB: JoshAaronMiller.INaturalist.MessageSearch.Box.Sent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Sent
        path: ''
        startLine: 2859
      syntax:
        content:
          CSharp: Sent = 1
          VB: Sent = 1
        return:
          type: JoshAaronMiller.INaturalist.MessageSearch.Box
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.MessageSearch.Box.Any
      commentId: F:JoshAaronMiller.INaturalist.MessageSearch.Box.Any
      language: CSharp
      name:
        CSharp: Any
        VB: Any
      nameWithType:
        CSharp: MessageSearch.Box.Any
        VB: MessageSearch.Box.Any
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.MessageSearch.Box.Any
        VB: JoshAaronMiller.INaturalist.MessageSearch.Box.Any
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Any
        path: ''
        startLine: 2859
      syntax:
        content:
          CSharp: Any = 2
          VB: Any = 2
        return:
          type: JoshAaronMiller.INaturalist.MessageSearch.Box
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.ObservationSearch
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch
    language: CSharp
    name:
      CSharp: ObservationSearch
      VB: ObservationSearch
    nameWithType:
      CSharp: ObservationSearch
      VB: ObservationSearch
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSearch
      VB: JoshAaronMiller.INaturalist.ObservationSearch
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: ObservationSearch
      path: ''
      startLine: 2937
    summary: "\nAn ObservationSearch is a set of parameters for searching iNaturalist Observations.\nUsage: myINatManager.SearchObservations(myObservationSearch)\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ObservationSearch : SearchObject'
        VB: >-
          Public Class ObservationSearch

              Inherits SearchObject
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.SearchObject
    inheritedMembers:
    - JoshAaronMiller.INaturalist.SearchObject.boolParams
    - JoshAaronMiller.INaturalist.SearchObject.stringParams
    - JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
    - JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
    - JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSearch.LicenseToString
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.LicenseToString
      language: CSharp
      name:
        CSharp: LicenseToString
        VB: LicenseToString
      nameWithType:
        CSharp: ObservationSearch.LicenseToString
        VB: ObservationSearch.LicenseToString
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.LicenseToString
        VB: JoshAaronMiller.INaturalist.ObservationSearch.LicenseToString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: LicenseToString
        path: ''
        startLine: 2945
      syntax:
        content:
          CSharp: public static Dictionary<ObservationSearch.License, string> LicenseToString
          VB: Public Shared LicenseToString As Dictionary(Of ObservationSearch.License, String)
        return:
          type: System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.License,System.String}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: JoshAaronMiller.INaturalist.ObservationSearch.GeoprivacyToString
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.GeoprivacyToString
      language: CSharp
      name:
        CSharp: GeoprivacyToString
        VB: GeoprivacyToString
      nameWithType:
        CSharp: ObservationSearch.GeoprivacyToString
        VB: ObservationSearch.GeoprivacyToString
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.GeoprivacyToString
        VB: JoshAaronMiller.INaturalist.ObservationSearch.GeoprivacyToString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: GeoprivacyToString
        path: ''
        startLine: 2966
      syntax:
        content:
          CSharp: public static Dictionary<ObservationSearch.Geoprivacy, string> GeoprivacyToString
          VB: Public Shared GeoprivacyToString As Dictionary(Of ObservationSearch.Geoprivacy, String)
        return:
          type: System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy,System.String}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentAgreementToString
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IdentAgreementToString
      language: CSharp
      name:
        CSharp: IdentAgreementToString
        VB: IdentAgreementToString
      nameWithType:
        CSharp: ObservationSearch.IdentAgreementToString
        VB: ObservationSearch.IdentAgreementToString
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IdentAgreementToString
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IdentAgreementToString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IdentAgreementToString
        path: ''
        startLine: 2985
      syntax:
        content:
          CSharp: public static Dictionary<ObservationSearch.IdentificationAgreement, string> IdentAgreementToString
          VB: Public Shared IdentAgreementToString As Dictionary(Of ObservationSearch.IdentificationAgreement, String)
        return:
          type: System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement,System.String}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeIds(List<Int32>)
        VB: IncludeIds(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.IncludeIds(List<Int32>)
        VB: ObservationSearch.IncludeIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeIds
        path: ''
        startLine: 3002
      summary: "\nRequire the search to include these IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeIds(List<int> ids)
          VB: Public Sub IncludeIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: IDs to include
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: ExcludeIds(List<Int32>)
        VB: ExcludeIds(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.ExcludeIds(List<Int32>)
        VB: ObservationSearch.ExcludeIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeIds
        path: ''
        startLine: 3011
      summary: "\nRequire the search to exclude these IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void ExcludeIds(List<int> ids)
          VB: Public Sub ExcludeIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: IDs to exclude
      overload: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      language: CSharp
      name:
        CSharp: SetLicense(ObservationSearch.License)
        VB: SetLicense(ObservationSearch.License)
      nameWithType:
        CSharp: ObservationSearch.SetLicense(ObservationSearch.License)
        VB: ObservationSearch.SetLicense(ObservationSearch.License)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetLicense
        path: ''
        startLine: 3020
      summary: "\nRequire the observations returned to have this license.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetLicense(ObservationSearch.License license)
          VB: Public Sub SetLicense(license As ObservationSearch.License)
        parameters:
        - id: license
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
          description: Required license
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType
      language: CSharp
      name:
        CSharp: SetOfvDataType()
        VB: SetOfvDataType()
      nameWithType:
        CSharp: ObservationSearch.SetOfvDataType()
        VB: ObservationSearch.SetOfvDataType()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetOfvDataType
        path: ''
        startLine: 3032
      syntax:
        content:
          CSharp: public void SetOfvDataType()
          VB: Public Sub SetOfvDataType
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      language: CSharp
      name:
        CSharp: SetPhotoLicense(ObservationSearch.License)
        VB: SetPhotoLicense(ObservationSearch.License)
      nameWithType:
        CSharp: ObservationSearch.SetPhotoLicense(ObservationSearch.License)
        VB: ObservationSearch.SetPhotoLicense(ObservationSearch.License)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetPhotoLicense
        path: ''
        startLine: 3041
      summary: "\nRequire the observations to have at least one photo with this license.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPhotoLicense(ObservationSearch.License license)
          VB: Public Sub SetPhotoLicense(license As ObservationSearch.License)
        parameters:
        - id: license
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
          description: Required license
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludePlaceIds(List<Int32>)
        VB: IncludePlaceIds(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.IncludePlaceIds(List<Int32>)
        VB: ObservationSearch.IncludePlaceIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludePlaceIds
        path: ''
        startLine: 3057
      summary: "\nRequire the observations to be within these place IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludePlaceIds(List<int> ids)
          VB: Public Sub IncludePlaceIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Place IDs to require
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeProjectIds(List<Int32>)
        VB: IncludeProjectIds(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.IncludeProjectIds(List<Int32>)
        VB: ObservationSearch.IncludeProjectIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeProjectIds
        path: ''
        startLine: 3066
      summary: "\nRequire the observations to be included in these project IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeProjectIds(List<int> ids)
          VB: Public Sub IncludeProjectIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Project IDs to search
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank(JoshAaronMiller.INaturalist.TaxonRank)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank(JoshAaronMiller.INaturalist.TaxonRank)
      language: CSharp
      name:
        CSharp: SetTaxonRank(TaxonRank)
        VB: SetTaxonRank(TaxonRank)
      nameWithType:
        CSharp: ObservationSearch.SetTaxonRank(TaxonRank)
        VB: ObservationSearch.SetTaxonRank(TaxonRank)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank(JoshAaronMiller.INaturalist.TaxonRank)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank(JoshAaronMiller.INaturalist.TaxonRank)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetTaxonRank
        path: ''
        startLine: 3075
      summary: "\nRequire the observations returned to have this taxon rank.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTaxonRank(TaxonRank rank)
          VB: Public Sub SetTaxonRank(rank As TaxonRank)
        parameters:
        - id: rank
          type: JoshAaronMiller.INaturalist.TaxonRank
          description: Required taxonomic rank.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId
      language: CSharp
      name:
        CSharp: SetSiteId()
        VB: SetSiteId()
      nameWithType:
        CSharp: ObservationSearch.SetSiteId()
        VB: ObservationSearch.SetSiteId()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetSiteId
        path: ''
        startLine: 3087
      syntax:
        content:
          CSharp: public void SetSiteId()
          VB: Public Sub SetSiteId
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      language: CSharp
      name:
        CSharp: SetSoundLicense(ObservationSearch.License)
        VB: SetSoundLicense(ObservationSearch.License)
      nameWithType:
        CSharp: ObservationSearch.SetSoundLicense(ObservationSearch.License)
        VB: ObservationSearch.SetSoundLicense(ObservationSearch.License)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense(JoshAaronMiller.INaturalist.ObservationSearch.License)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetSoundLicense
        path: ''
        startLine: 3096
      summary: "\nRequire the observations to have at least one sound with this license.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetSoundLicense(ObservationSearch.License license)
          VB: Public Sub SetSoundLicense(license As ObservationSearch.License)
        parameters:
        - id: license
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
          description: Required license
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeTaxonIds(List<Int32>)
        VB: IncludeTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.IncludeTaxonIds(List<Int32>)
        VB: ObservationSearch.IncludeTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTaxonIds
        path: ''
        startLine: 3112
      summary: "\nLimit the search to these taxa IDs and their descendents.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeTaxonIds(List<int> ids)
          VB: Public Sub IncludeTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Taxa IDs to include
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: ExcludeTaxonIds(List<Int32>)
        VB: ExcludeTaxonIds(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.ExcludeTaxonIds(List<Int32>)
        VB: ObservationSearch.ExcludeTaxonIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeTaxonIds
        path: ''
        startLine: 3121
      summary: "\nLimit the search to exclude these taxa IDs and their descendents.\n"
      example: []
      syntax:
        content:
          CSharp: public void ExcludeTaxonIds(List<int> ids)
          VB: Public Sub ExcludeTaxonIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: Taxa IDs to exclude
      overload: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames(System.Collections.Generic.List{System.String})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: IncludeTaxonNames(List<String>)
        VB: IncludeTaxonNames(List(Of String))
      nameWithType:
        CSharp: ObservationSearch.IncludeTaxonNames(List<String>)
        VB: ObservationSearch.IncludeTaxonNames(List(Of String))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames(System.Collections.Generic.List<System.String>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTaxonNames
        path: ''
        startLine: 3130
      summary: "\nLimit the search to these scientific or common taxa names.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeTaxonNames(List<string> names)
          VB: Public Sub IncludeTaxonNames(names As List(Of String))
        parameters:
        - id: names
          type: System.Collections.Generic.List{System.String}
          description: Taxa names to match
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds
      language: CSharp
      name:
        CSharp: IncludeUserIds()
        VB: IncludeUserIds()
      nameWithType:
        CSharp: ObservationSearch.IncludeUserIds()
        VB: ObservationSearch.IncludeUserIds()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeUserIds
        path: ''
        startLine: 3135
      syntax:
        content:
          CSharp: public void IncludeUserIds()
          VB: Public Sub IncludeUserIds
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins
      language: CSharp
      name:
        CSharp: IncludeUserLogins()
        VB: IncludeUserLogins()
      nameWithType:
        CSharp: ObservationSearch.IncludeUserLogins()
        VB: ObservationSearch.IncludeUserLogins()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeUserLogins
        path: ''
        startLine: 3140
      syntax:
        content:
          CSharp: public void IncludeUserLogins()
          VB: Public Sub IncludeUserLogins
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId(System.Int32)
      language: CSharp
      name:
        CSharp: SetIdentifiedByUserId(Int32)
        VB: SetIdentifiedByUserId(Int32)
      nameWithType:
        CSharp: ObservationSearch.SetIdentifiedByUserId(Int32)
        VB: ObservationSearch.SetIdentifiedByUserId(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId(System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetIdentifiedByUserId
        path: ''
        startLine: 3149
      summary: "\nLimit the search to observations with identifications by the user with this ID.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetIdentifiedByUserId(int userId)
          VB: Public Sub SetIdentifiedByUserId(userId As Integer)
        parameters:
        - id: userId
          type: System.Int32
          description: The user&apos;s ID to restrict the search to.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeDays(List<Int32>)
        VB: IncludeDays(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.IncludeDays(List<Int32>)
        VB: ObservationSearch.IncludeDays(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeDays
        path: ''
        startLine: 3158
      summary: "\nLimit the search to observations on these days of the month.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeDays(List<int> days)
          VB: Public Sub IncludeDays(days As List(Of Integer))
        parameters:
        - id: days
          type: System.Collections.Generic.List{System.Int32}
          description: Days to match.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeMonths(List<Int32>)
        VB: IncludeMonths(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.IncludeMonths(List<Int32>)
        VB: ObservationSearch.IncludeMonths(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeMonths
        path: ''
        startLine: 3167
      summary: "\nLimit the search to observations on these months.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeMonths(List<int> months)
          VB: Public Sub IncludeMonths(months As List(Of Integer))
        parameters:
        - id: months
          type: System.Collections.Generic.List{System.Int32}
          description: Months to match.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeYears(List<Int32>)
        VB: IncludeYears(List(Of Int32))
      nameWithType:
        CSharp: ObservationSearch.IncludeYears(List<Int32>)
        VB: ObservationSearch.IncludeYears(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeYears
        path: ''
        startLine: 3176
      summary: "\nLimit the search to observations on these years.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeYears(List<int> years)
          VB: Public Sub IncludeYears(years As List(Of Integer))
        parameters:
        - id: years
          type: System.Collections.Generic.List{System.Int32}
          description: Years to match.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds
      language: CSharp
      name:
        CSharp: IncludeTermIds()
        VB: IncludeTermIds()
      nameWithType:
        CSharp: ObservationSearch.IncludeTermIds()
        VB: ObservationSearch.IncludeTermIds()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTermIds
        path: ''
        startLine: 3181
      syntax:
        content:
          CSharp: public void IncludeTermIds()
          VB: Public Sub IncludeTermIds
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds
      language: CSharp
      name:
        CSharp: IncludeTermValueIds()
        VB: IncludeTermValueIds()
      nameWithType:
        CSharp: ObservationSearch.IncludeTermValueIds()
        VB: ObservationSearch.IncludeTermValueIds()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTermValueIds
        path: ''
        startLine: 3186
      syntax:
        content:
          CSharp: public void IncludeTermValueIds()
          VB: Public Sub IncludeTermValueIds
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum(System.Int32)
      language: CSharp
      name:
        CSharp: SetAccuracyMinimum(Int32)
        VB: SetAccuracyMinimum(Int32)
      nameWithType:
        CSharp: ObservationSearch.SetAccuracyMinimum(Int32)
        VB: ObservationSearch.SetAccuracyMinimum(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum(System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetAccuracyMinimum
        path: ''
        startLine: 3195
      summary: "\nLimit the search to observations with a positional accuracy above this value.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAccuracyMinimum(int min)
          VB: Public Sub SetAccuracyMinimum(min As Integer)
        parameters:
        - id: min
          type: System.Int32
          description: The positional accuracy in meters.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum(System.Int32,System.Boolean)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SetAccuracyMaximum(Int32, Boolean)
        VB: SetAccuracyMaximum(Int32, Boolean)
      nameWithType:
        CSharp: ObservationSearch.SetAccuracyMaximum(Int32, Boolean)
        VB: ObservationSearch.SetAccuracyMaximum(Int32, Boolean)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum(System.Int32, System.Boolean)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetAccuracyMaximum
        path: ''
        startLine: 3205
      summary: "\nLimit the search to observations with a positional accuracy below this value.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAccuracyMaximum(int max, bool canBeUnknown = false)
          VB: Public Sub SetAccuracyMaximum(max As Integer, canBeUnknown As Boolean = False)
        parameters:
        - id: max
          type: System.Int32
          description: The positional accuracy in meters.
        - id: canBeUnknown
          type: System.Boolean
          description: Whether the positional accuracy can be unknown.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits(System.String,System.String)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetObservedOnDateLimits(String, String)
        VB: SetObservedOnDateLimits(String, String)
      nameWithType:
        CSharp: ObservationSearch.SetObservedOnDateLimits(String, String)
        VB: ObservationSearch.SetObservedOnDateLimits(String, String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits(System.String, System.String)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetObservedOnDateLimits
        path: ''
        startLine: 3222
      summary: "\nLimit the search to observations observed within a timeframe. Both start and end dates are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetObservedOnDateLimits(string start = "", string end = "")
          VB: Public Sub SetObservedOnDateLimits(start As String = "", end As String = "")
        parameters:
        - id: start
          type: System.String
          description: The start date, formatted as YYYY-MM-DD. Limit observations to on or after this date.
        - id: end
          type: System.String
          description: The end date, formatted as YYYY-MM-DD. Limit observations to on or before this date.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits(System.String,System.String)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetCreatedOnDateTimeLimits(String, String)
        VB: SetCreatedOnDateTimeLimits(String, String)
      nameWithType:
        CSharp: ObservationSearch.SetCreatedOnDateTimeLimits(String, String)
        VB: ObservationSearch.SetCreatedOnDateTimeLimits(String, String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits(System.String, System.String)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetCreatedOnDateTimeLimits
        path: ''
        startLine: 3246
      summary: "\nLimit the search to observations created within a timeframe. Both start and end dates are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCreatedOnDateTimeLimits(string start = "", string end = "")
          VB: Public Sub SetCreatedOnDateTimeLimits(start As String = "", end As String = "")
        parameters:
        - id: start
          type: System.String
          description: 'The start datetime, formatted as ISO-8601 datetime format: YYYY-MM-DDTHH:MMSS.mmmZ. Limit observations to created on or after this date.'
        - id: end
          type: System.String
          description: 'The end datetime, formatted as ISO-8601 datetime format: YYYY-MM-DDTHH:MMSS.mmmZ. Limit observations to created on or before this date.'
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId(System.Int32)
      language: CSharp
      name:
        CSharp: SetUnobservedByUserId(Int32)
        VB: SetUnobservedByUserId(Int32)
      nameWithType:
        CSharp: ObservationSearch.SetUnobservedByUserId(Int32)
        VB: ObservationSearch.SetUnobservedByUserId(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId(System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetUnobservedByUserId
        path: ''
        startLine: 3269
      summary: "\nLimit the search to taxa that this user has not previously observed.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetUnobservedByUserId(int userId)
          VB: Public Sub SetUnobservedByUserId(userId As Integer)
        parameters:
        - id: userId
          type: System.Int32
          description: The user ID to base this restriction on.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor(System.Int32)
      language: CSharp
      name:
        CSharp: ApplyProjectRulesFor(Int32)
        VB: ApplyProjectRulesFor(Int32)
      nameWithType:
        CSharp: ObservationSearch.ApplyProjectRulesFor(Int32)
        VB: ObservationSearch.ApplyProjectRulesFor(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor(System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ApplyProjectRulesFor
        path: ''
        startLine: 3278
      summary: "\nLimit the search to the project restrictions of the given project ID.\n"
      example: []
      syntax:
        content:
          CSharp: public void ApplyProjectRulesFor(int projectId)
          VB: Public Sub ApplyProjectRulesFor(projectId As Integer)
        parameters:
        - id: projectId
          type: System.Int32
          description: The project ID to base this restriction on.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode(System.String)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode(System.String)
      language: CSharp
      name:
        CSharp: SetConservationStatusCode(String)
        VB: SetConservationStatusCode(String)
      nameWithType:
        CSharp: ObservationSearch.SetConservationStatusCode(String)
        VB: ObservationSearch.SetConservationStatusCode(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode(System.String)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetConservationStatusCode
        path: ''
        startLine: 3287
      summary: "\nLimit the search to taxa of this conservation status code. If PlaceId is also set, only consider statuses specific to those places.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetConservationStatusCode(string code)
          VB: Public Sub SetConservationStatusCode(code As String)
        parameters:
        - id: code
          type: System.String
          description: The conservation status code.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority(System.String)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority(System.String)
      language: CSharp
      name:
        CSharp: SetConservationStatusAuthority(String)
        VB: SetConservationStatusAuthority(String)
      nameWithType:
        CSharp: ObservationSearch.SetConservationStatusAuthority(String)
        VB: ObservationSearch.SetConservationStatusAuthority(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority(System.String)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetConservationStatusAuthority
        path: ''
        startLine: 3296
      summary: "\nLimit the search to taxa with a conservation status from this authority. If PlaceId is also set, only consider statuses specific to those places.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetConservationStatusAuthority(string auth)
          VB: Public Sub SetConservationStatusAuthority(auth As String)
        parameters:
        - id: auth
          type: System.String
          description: The conservation status authority.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus})
      language: CSharp
      name:
        CSharp: IncludeIUCNConservationStatuses(List<ObservationSearch.IucnConservationStatus>)
        VB: IncludeIUCNConservationStatuses(List(Of ObservationSearch.IucnConservationStatus))
      nameWithType:
        CSharp: ObservationSearch.IncludeIUCNConservationStatuses(List<ObservationSearch.IucnConservationStatus>)
        VB: ObservationSearch.IncludeIUCNConservationStatuses(List(Of ObservationSearch.IucnConservationStatus))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses(System.Collections.Generic.List<JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses(System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeIUCNConservationStatuses
        path: ''
        startLine: 3305
      summary: "\nLimit the search to taxa with these IUCN conservation statuses. If PlaceId is also set, only consider statuses specific to those places.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeIUCNConservationStatuses(List<ObservationSearch.IucnConservationStatus> statuses)
          VB: Public Sub IncludeIUCNConservationStatuses(statuses As List(Of ObservationSearch.IucnConservationStatus))
        parameters:
        - id: statuses
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus}
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy})
      language: CSharp
      name:
        CSharp: SetGeoprivacy(List<ObservationSearch.Geoprivacy>)
        VB: SetGeoprivacy(List(Of ObservationSearch.Geoprivacy))
      nameWithType:
        CSharp: ObservationSearch.SetGeoprivacy(List<ObservationSearch.Geoprivacy>)
        VB: ObservationSearch.SetGeoprivacy(List(Of ObservationSearch.Geoprivacy))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy(System.Collections.Generic.List<JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy(System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetGeoprivacy
        path: ''
        startLine: 3326
      summary: "\nLimit the search to observations with these geoprivacy settings.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetGeoprivacy(List<ObservationSearch.Geoprivacy> geos)
          VB: Public Sub SetGeoprivacy(geos As List(Of ObservationSearch.Geoprivacy))
        parameters:
        - id: geos
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy}
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy})
      language: CSharp
      name:
        CSharp: IncludeTaxonGeoprivacy(List<ObservationSearch.Geoprivacy>)
        VB: IncludeTaxonGeoprivacy(List(Of ObservationSearch.Geoprivacy))
      nameWithType:
        CSharp: ObservationSearch.IncludeTaxonGeoprivacy(List<ObservationSearch.Geoprivacy>)
        VB: ObservationSearch.IncludeTaxonGeoprivacy(List(Of ObservationSearch.Geoprivacy))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy(System.Collections.Generic.List<JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy(System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTaxonGeoprivacy
        path: ''
        startLine: 3347
      summary: "\nFilter observations by the most conservative geoprivacy applied by a conservation status associated with one of the taxa proposed in the current identifications.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeTaxonGeoprivacy(List<ObservationSearch.Geoprivacy> geos)
          VB: Public Sub IncludeTaxonGeoprivacy(geos As List(Of ObservationSearch.Geoprivacy))
        parameters:
        - id: geos
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy}
          description: The geoprivacy settings.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank,JoshAaronMiller.INaturalist.TaxonRank)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank,JoshAaronMiller.INaturalist.TaxonRank)
      language: CSharp
      name:
        CSharp: SetTaxonRankLimits(TaxonRank, TaxonRank)
        VB: SetTaxonRankLimits(TaxonRank, TaxonRank)
      nameWithType:
        CSharp: ObservationSearch.SetTaxonRankLimits(TaxonRank, TaxonRank)
        VB: ObservationSearch.SetTaxonRankLimits(TaxonRank, TaxonRank)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank, JoshAaronMiller.INaturalist.TaxonRank)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits(JoshAaronMiller.INaturalist.TaxonRank, JoshAaronMiller.INaturalist.TaxonRank)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetTaxonRankLimits
        path: ''
        startLine: 3369
      summary: "\nLimit the search to taxa between these limits.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTaxonRankLimits(TaxonRank lowest = TaxonRank.None, TaxonRank highest = TaxonRank.None)
          VB: Public Sub SetTaxonRankLimits(lowest As TaxonRank = TaxonRank.None, highest As TaxonRank = TaxonRank.None)
        parameters:
        - id: lowest
          type: JoshAaronMiller.INaturalist.TaxonRank
          description: The lowest taxon rank to include in the search (include this and higher).
        - id: highest
          type: JoshAaronMiller.INaturalist.TaxonRank
          description: The highest taxon rank to include in the search (include this and lower).
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon})
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa(System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon})
      language: CSharp
      name:
        CSharp: SetIconicTaxa(List<ObservationSearch.IconicTaxon>)
        VB: SetIconicTaxa(List(Of ObservationSearch.IconicTaxon))
      nameWithType:
        CSharp: ObservationSearch.SetIconicTaxa(List<ObservationSearch.IconicTaxon>)
        VB: ObservationSearch.SetIconicTaxa(List(Of ObservationSearch.IconicTaxon))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa(System.Collections.Generic.List<JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon>)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa(System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetIconicTaxa
        path: ''
        startLine: 3394
      summary: "\nLimit the search to observations with these iconic taxa.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetIconicTaxa(List<ObservationSearch.IconicTaxon> iconicTaxa)
          VB: Public Sub SetIconicTaxa(iconicTaxa As List(Of ObservationSearch.IconicTaxon))
        parameters:
        - id: iconicTaxa
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon}
          description: The iconic taxa to include.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits(System.Int32,System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetObservationIdLimits(Int32, Int32)
        VB: SetObservationIdLimits(Int32, Int32)
      nameWithType:
        CSharp: ObservationSearch.SetObservationIdLimits(Int32, Int32)
        VB: ObservationSearch.SetObservationIdLimits(Int32, Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits(System.Int32, System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetObservationIdLimits
        path: ''
        startLine: 3424
      summary: "\nLimit the search to observations with IDs within this range. Both min and max are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetObservationIdLimits(int min = -1, int max = -1)
          VB: Public Sub SetObservationIdLimits(min As Integer = -1, max As Integer = -1)
        parameters:
        - id: min
          type: System.Int32
          description: Include this ID and higher.
        - id: max
          type: System.Int32
          description: Include this ID and lower.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement(JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement(JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement)
      language: CSharp
      name:
        CSharp: SetIdentificationAgreement(ObservationSearch.IdentificationAgreement)
        VB: SetIdentificationAgreement(ObservationSearch.IdentificationAgreement)
      nameWithType:
        CSharp: ObservationSearch.SetIdentificationAgreement(ObservationSearch.IdentificationAgreement)
        VB: ObservationSearch.SetIdentificationAgreement(ObservationSearch.IdentificationAgreement)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement(JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement(JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetIdentificationAgreement
        path: ''
        startLine: 3436
      syntax:
        content:
          CSharp: public void SetIdentificationAgreement(ObservationSearch.IdentificationAgreement agreement)
          VB: Public Sub SetIdentificationAgreement(agreement As ObservationSearch.IdentificationAgreement)
        parameters:
        - id: agreement
          type: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle(System.Double,System.Double,System.Double)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle(System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: SetBoundingCircle(Double, Double, Double)
        VB: SetBoundingCircle(Double, Double, Double)
      nameWithType:
        CSharp: ObservationSearch.SetBoundingCircle(Double, Double, Double)
        VB: ObservationSearch.SetBoundingCircle(Double, Double, Double)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle(System.Double, System.Double, System.Double)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle(System.Double, System.Double, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetBoundingCircle
        path: ''
        startLine: 3454
      summary: "\nLimit the search to a circle of [radius] kilometers around the specified latitude and longitude.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBoundingCircle(double lat, double lng, double radius)
          VB: Public Sub SetBoundingCircle(lat As Double, lng As Double, radius As Double)
        parameters:
        - id: lat
          type: System.Double
          description: The latitude of the search&apos;s center.
        - id: lng
          type: System.Double
          description: The longitude of the search&apos;s center.
        - id: radius
          type: System.Double
          description: The radius of search in kilometers.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox(System.Double,System.Double,System.Double,System.Double)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox(System.Double,System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: SetBoundingBox(Double, Double, Double, Double)
        VB: SetBoundingBox(Double, Double, Double, Double)
      nameWithType:
        CSharp: ObservationSearch.SetBoundingBox(Double, Double, Double, Double)
        VB: ObservationSearch.SetBoundingBox(Double, Double, Double, Double)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox(System.Double, System.Double, System.Double, System.Double)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox(System.Double, System.Double, System.Double, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetBoundingBox
        path: ''
        startLine: 3468
      summary: "\nLimit the search within a bounding box specified by northeast and southwest corners given in latitude and longitude.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBoundingBox(double nelat, double nelng, double swlat, double swlng)
          VB: Public Sub SetBoundingBox(nelat As Double, nelng As Double, swlat As Double, swlng As Double)
        parameters:
        - id: nelat
          type: System.Double
          description: The northeast latitude.
        - id: nelng
          type: System.Double
          description: The northeast longitude.
        - id: swlat
          type: System.Double
          description: The southwest latitude.
        - id: swlng
          type: System.Double
          description: The southwest longitude.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetListId
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetListId
      language: CSharp
      name:
        CSharp: SetListId()
        VB: SetListId()
      nameWithType:
        CSharp: ObservationSearch.SetListId()
        VB: ObservationSearch.SetListId()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetListId()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetListId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetListId
        path: ''
        startLine: 3477
      syntax:
        content:
          CSharp: public void SetListId()
          VB: Public Sub SetListId
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetListId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId(System.Int32)
      language: CSharp
      name:
        CSharp: ExcludeProjectId(Int32)
        VB: ExcludeProjectId(Int32)
      nameWithType:
        CSharp: ObservationSearch.ExcludeProjectId(Int32)
        VB: ObservationSearch.ExcludeProjectId(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId(System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeProjectId
        path: ''
        startLine: 3487
      summary: "\nRequire the observations to be not in this project ID.\n"
      example: []
      syntax:
        content:
          CSharp: public void ExcludeProjectId(int id)
          VB: Public Sub ExcludeProjectId(id As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Project ID to exclude
      overload: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor(System.Int32)
      language: CSharp
      name:
        CSharp: ExcludeProjectRulesFor(Int32)
        VB: ExcludeProjectRulesFor(Int32)
      nameWithType:
        CSharp: ObservationSearch.ExcludeProjectRulesFor(Int32)
        VB: ObservationSearch.ExcludeProjectRulesFor(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor(System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeProjectRulesFor
        path: ''
        startLine: 3496
      summary: "\nLimit the search to observations that don&apos;t match the rules of the given project ID.\n"
      example: []
      syntax:
        content:
          CSharp: public void ExcludeProjectRulesFor(int projectId)
          VB: Public Sub ExcludeProjectRulesFor(projectId As Integer)
        parameters:
        - id: projectId
          type: System.Int32
          description: The project ID to base this restriction on.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties(JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty,System.String)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties(JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty,System.String)
      language: CSharp
      name:
        CSharp: SearchOnProperties(ObservationSearch.SearchProperty, String)
        VB: SearchOnProperties(ObservationSearch.SearchProperty, String)
      nameWithType:
        CSharp: ObservationSearch.SearchOnProperties(ObservationSearch.SearchProperty, String)
        VB: ObservationSearch.SearchOnProperties(ObservationSearch.SearchProperty, String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties(JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty, System.String)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties(JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SearchOnProperties
        path: ''
        startLine: 3507
      summary: "\nSearch observation properties matching the query.\n"
      example: []
      syntax:
        content:
          CSharp: public void SearchOnProperties(ObservationSearch.SearchProperty property, string query)
          VB: Public Sub SearchOnProperties(property As ObservationSearch.SearchProperty, query As String)
        parameters:
        - id: property
          type: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
          description: The search property to apply the query to.
        - id: query
          type: System.String
          description: The search query.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
      language: CSharp
      name:
        CSharp: SetQualityGrade(QualityGrade)
        VB: SetQualityGrade(QualityGrade)
      nameWithType:
        CSharp: ObservationSearch.SetQualityGrade(QualityGrade)
        VB: ObservationSearch.SetQualityGrade(QualityGrade)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade(JoshAaronMiller.INaturalist.QualityGrade)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetQualityGrade
        path: ''
        startLine: 3520
      summary: "\nLimit the search to observations of this quality grade.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetQualityGrade(QualityGrade quality)
          VB: Public Sub SetQualityGrade(quality As QualityGrade)
        parameters:
        - id: quality
          type: JoshAaronMiller.INaturalist.QualityGrade
          description: The quality grade to search for.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince
      language: CSharp
      name:
        CSharp: SetUpdatedSince()
        VB: SetUpdatedSince()
      nameWithType:
        CSharp: ObservationSearch.SetUpdatedSince()
        VB: ObservationSearch.SetUpdatedSince()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetUpdatedSince
        path: ''
        startLine: 3532
      syntax:
        content:
          CSharp: public void SetUpdatedSince()
          VB: Public Sub SetUpdatedSince
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser(System.Int32,System.Boolean)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SetReviewedByUser(Int32, Boolean)
        VB: SetReviewedByUser(Int32, Boolean)
      nameWithType:
        CSharp: ObservationSearch.SetReviewedByUser(Int32, Boolean)
        VB: ObservationSearch.SetReviewedByUser(Int32, Boolean)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser(System.Int32, System.Boolean)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetReviewedByUser
        path: ''
        startLine: 3542
      summary: "\nLimit the search to observations that [have / have not] been reviewed by a given user.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetReviewedByUser(int userId, bool hasReviewed)
          VB: Public Sub SetReviewedByUser(userId As Integer, hasReviewed As Boolean)
        parameters:
        - id: userId
          type: System.Int32
          description: The user ID to consider their review.
        - id: hasReviewed
          type: System.Boolean
          description: If true, only include observations they have reviewed. If false, only include observations they have not reviewed.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference
      language: CSharp
      name:
        CSharp: SetLocalePreference()
        VB: SetLocalePreference()
      nameWithType:
        CSharp: ObservationSearch.SetLocalePreference()
        VB: ObservationSearch.SetLocalePreference()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetLocalePreference
        path: ''
        startLine: 3548
      syntax:
        content:
          CSharp: public void SetLocalePreference()
          VB: Public Sub SetLocalePreference
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId
      language: CSharp
      name:
        CSharp: SetPreferredPlaceId()
        VB: SetPreferredPlaceId()
      nameWithType:
        CSharp: ObservationSearch.SetPreferredPlaceId()
        VB: ObservationSearch.SetPreferredPlaceId()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId()
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetPreferredPlaceId
        path: ''
        startLine: 3553
      syntax:
        content:
          CSharp: public void SetPreferredPlaceId()
          VB: Public Sub SetPreferredPlaceId
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl(System.Int32)
      language: CSharp
      name:
        CSharp: SetCacheControl(Int32)
        VB: SetCacheControl(Int32)
      nameWithType:
        CSharp: ObservationSearch.SetCacheControl(Int32)
        VB: ObservationSearch.SetCacheControl(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl(System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetCacheControl
        path: ''
        startLine: 3562
      summary: "\nSet the Cache-Control HTTP header with this value as max-age, in seconds.This means subsequent identical requests will be cached on iNaturalist servers, and commonly within web browsers\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCacheControl(int timeToLive)
          VB: Public Sub SetCacheControl(timeToLive As Integer)
        parameters:
        - id: timeToLive
          type: System.Int32
          description: The max-age of the request, in seconds.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination(System.Int32,System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetPagination(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetPagination(Int32, Int32)
        VB: SetPagination(Int32, Int32)
      nameWithType:
        CSharp: ObservationSearch.SetPagination(Int32, Int32)
        VB: ObservationSearch.SetPagination(Int32, Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination(System.Int32, System.Int32)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetPagination
        path: ''
        startLine: 3572
      summary: "\nSet the number of search results per page and which page to receive. For example, SetPagination(50,2) would return results 51-100.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPagination(int resultsPerPage = 30, int page = 1)
          VB: Public Sub SetPagination(resultsPerPage As Integer = 30, page As Integer = 1)
        parameters:
        - id: resultsPerPage
          type: System.Int32
          description: How many results to return per page (default 30).
        - id: page
          type: System.Int32
          description: Which page of results to return (default 1).
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy,JoshAaronMiller.INaturalist.SortOrder)
      commentId: M:JoshAaronMiller.INaturalist.ObservationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy,JoshAaronMiller.INaturalist.SortOrder)
      language: CSharp
      name:
        CSharp: SetOrder(OrderBy, SortOrder)
        VB: SetOrder(OrderBy, SortOrder)
      nameWithType:
        CSharp: ObservationSearch.SetOrder(OrderBy, SortOrder)
        VB: ObservationSearch.SetOrder(OrderBy, SortOrder)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy, JoshAaronMiller.INaturalist.SortOrder)
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder(JoshAaronMiller.INaturalist.OrderBy, JoshAaronMiller.INaturalist.SortOrder)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetOrder
        path: ''
        startLine: 3583
      summary: "\nSet how the results are ordered. Defaults to created at date, descending.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetOrder(OrderBy orderBy, SortOrder sortOrder)
          VB: Public Sub SetOrder(orderBy As OrderBy, sortOrder As SortOrder)
        parameters:
        - id: orderBy
          type: JoshAaronMiller.INaturalist.OrderBy
          description: The parameter to sort the order by.
        - id: sortOrder
          type: JoshAaronMiller.INaturalist.SortOrder
          description: Whether to sort ascending or descending.
      overload: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.ObservationSearch.License
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.License
    language: CSharp
    name:
      CSharp: ObservationSearch.License
      VB: ObservationSearch.License
    nameWithType:
      CSharp: ObservationSearch.License
      VB: ObservationSearch.License
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License
      VB: JoshAaronMiller.INaturalist.ObservationSearch.License
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: License
      path: ''
      startLine: 2939
    syntax:
      content:
        CSharp: public enum License
        VB: Public Enum License
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.None
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: ObservationSearch.License.None
        VB: ObservationSearch.License.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.None
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 2941
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttr
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttr
      language: CSharp
      name:
        CSharp: CcAttr
        VB: CcAttr
      nameWithType:
        CSharp: ObservationSearch.License.CcAttr
        VB: ObservationSearch.License.CcAttr
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttr
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttr
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CcAttr
        path: ''
        startLine: 2941
      syntax:
        content:
          CSharp: CcAttr = 1
          VB: CcAttr = 1
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercial
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercial
      language: CSharp
      name:
        CSharp: CcAttrNonCommercial
        VB: CcAttrNonCommercial
      nameWithType:
        CSharp: ObservationSearch.License.CcAttrNonCommercial
        VB: ObservationSearch.License.CcAttrNonCommercial
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercial
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CcAttrNonCommercial
        path: ''
        startLine: 2941
      syntax:
        content:
          CSharp: CcAttrNonCommercial = 2
          VB: CcAttrNonCommercial = 2
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNoDerivs
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNoDerivs
      language: CSharp
      name:
        CSharp: CcAttrNoDerivs
        VB: CcAttrNoDerivs
      nameWithType:
        CSharp: ObservationSearch.License.CcAttrNoDerivs
        VB: ObservationSearch.License.CcAttrNoDerivs
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNoDerivs
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNoDerivs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CcAttrNoDerivs
        path: ''
        startLine: 2941
      syntax:
        content:
          CSharp: CcAttrNoDerivs = 3
          VB: CcAttrNoDerivs = 3
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.CcShareAlike
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.CcShareAlike
      language: CSharp
      name:
        CSharp: CcShareAlike
        VB: CcShareAlike
      nameWithType:
        CSharp: ObservationSearch.License.CcShareAlike
        VB: ObservationSearch.License.CcShareAlike
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.CcShareAlike
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.CcShareAlike
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CcShareAlike
        path: ''
        startLine: 2941
      syntax:
        content:
          CSharp: CcShareAlike = 4
          VB: CcShareAlike = 4
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialNoDerivs
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialNoDerivs
      language: CSharp
      name:
        CSharp: CcAttrNonCommercialNoDerivs
        VB: CcAttrNonCommercialNoDerivs
      nameWithType:
        CSharp: ObservationSearch.License.CcAttrNonCommercialNoDerivs
        VB: ObservationSearch.License.CcAttrNonCommercialNoDerivs
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialNoDerivs
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialNoDerivs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CcAttrNonCommercialNoDerivs
        path: ''
        startLine: 2942
      syntax:
        content:
          CSharp: CcAttrNonCommercialNoDerivs = 5
          VB: CcAttrNonCommercialNoDerivs = 5
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialShareAlike
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialShareAlike
      language: CSharp
      name:
        CSharp: CcAttrNonCommercialShareAlike
        VB: CcAttrNonCommercialShareAlike
      nameWithType:
        CSharp: ObservationSearch.License.CcAttrNonCommercialShareAlike
        VB: ObservationSearch.License.CcAttrNonCommercialShareAlike
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialShareAlike
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.CcAttrNonCommercialShareAlike
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CcAttrNonCommercialShareAlike
        path: ''
        startLine: 2942
      syntax:
        content:
          CSharp: CcAttrNonCommercialShareAlike = 6
          VB: CcAttrNonCommercialShareAlike = 6
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.License.Cc0
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.License.Cc0
      language: CSharp
      name:
        CSharp: Cc0
        VB: Cc0
      nameWithType:
        CSharp: ObservationSearch.License.Cc0
        VB: ObservationSearch.License.Cc0
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.License.Cc0
        VB: JoshAaronMiller.INaturalist.ObservationSearch.License.Cc0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Cc0
        path: ''
        startLine: 2942
      syntax:
        content:
          CSharp: Cc0 = 7
          VB: Cc0 = 7
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.License
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
    language: CSharp
    name:
      CSharp: ObservationSearch.IucnConservationStatus
      VB: ObservationSearch.IucnConservationStatus
    nameWithType:
      CSharp: ObservationSearch.IucnConservationStatus
      VB: ObservationSearch.IucnConservationStatus
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: IucnConservationStatus
      path: ''
      startLine: 2956
    syntax:
      content:
        CSharp: public enum IucnConservationStatus
        VB: Public Enum IucnConservationStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.None
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.None
        VB: ObservationSearch.IucnConservationStatus.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.None
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Lc
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Lc
      language: CSharp
      name:
        CSharp: Lc
        VB: Lc
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.Lc
        VB: ObservationSearch.IucnConservationStatus.Lc
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Lc
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Lc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Lc
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: Lc = 1
          VB: Lc = 1
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Nt
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Nt
      language: CSharp
      name:
        CSharp: Nt
        VB: Nt
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.Nt
        VB: ObservationSearch.IucnConservationStatus.Nt
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Nt
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Nt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Nt
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: Nt = 2
          VB: Nt = 2
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Vu
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Vu
      language: CSharp
      name:
        CSharp: Vu
        VB: Vu
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.Vu
        VB: ObservationSearch.IucnConservationStatus.Vu
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Vu
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Vu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Vu
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: Vu = 3
          VB: Vu = 3
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.En
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.En
      language: CSharp
      name:
        CSharp: En
        VB: En
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.En
        VB: ObservationSearch.IucnConservationStatus.En
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.En
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.En
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: En
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: En = 4
          VB: En = 4
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Cr
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Cr
      language: CSharp
      name:
        CSharp: Cr
        VB: Cr
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.Cr
        VB: ObservationSearch.IucnConservationStatus.Cr
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Cr
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Cr
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Cr
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: Cr = 5
          VB: Cr = 5
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ew
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ew
      language: CSharp
      name:
        CSharp: Ew
        VB: Ew
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.Ew
        VB: ObservationSearch.IucnConservationStatus.Ew
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ew
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ew
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Ew
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: Ew = 6
          VB: Ew = 6
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ex
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ex
      language: CSharp
      name:
        CSharp: Ex
        VB: Ex
      nameWithType:
        CSharp: ObservationSearch.IucnConservationStatus.Ex
        VB: ObservationSearch.IucnConservationStatus.Ex
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ex
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus.Ex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Ex
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: Ex = 7
          VB: Ex = 7
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
    language: CSharp
    name:
      CSharp: ObservationSearch.Geoprivacy
      VB: ObservationSearch.Geoprivacy
    nameWithType:
      CSharp: ObservationSearch.Geoprivacy
      VB: ObservationSearch.Geoprivacy
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      VB: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: Geoprivacy
      path: ''
      startLine: 2961
    syntax:
      content:
        CSharp: public enum Geoprivacy
        VB: Public Enum Geoprivacy
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.None
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: ObservationSearch.Geoprivacy.None
        VB: ObservationSearch.Geoprivacy.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.None
        VB: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 2963
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Obscured
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Obscured
      language: CSharp
      name:
        CSharp: Obscured
        VB: Obscured
      nameWithType:
        CSharp: ObservationSearch.Geoprivacy.Obscured
        VB: ObservationSearch.Geoprivacy.Obscured
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Obscured
        VB: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Obscured
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Obscured
        path: ''
        startLine: 2963
      syntax:
        content:
          CSharp: Obscured = 1
          VB: Obscured = 1
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.ObscuredPrivate
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.ObscuredPrivate
      language: CSharp
      name:
        CSharp: ObscuredPrivate
        VB: ObscuredPrivate
      nameWithType:
        CSharp: ObservationSearch.Geoprivacy.ObscuredPrivate
        VB: ObservationSearch.Geoprivacy.ObscuredPrivate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.ObscuredPrivate
        VB: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.ObscuredPrivate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObscuredPrivate
        path: ''
        startLine: 2963
      syntax:
        content:
          CSharp: ObscuredPrivate = 2
          VB: ObscuredPrivate = 2
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Open
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Open
      language: CSharp
      name:
        CSharp: Open
        VB: Open
      nameWithType:
        CSharp: ObservationSearch.Geoprivacy.Open
        VB: ObservationSearch.Geoprivacy.Open
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Open
        VB: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Open
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Open
        path: ''
        startLine: 2963
      syntax:
        content:
          CSharp: Open = 3
          VB: Open = 3
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Private
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Private
      language: CSharp
      name:
        CSharp: Private
        VB: Private
      nameWithType:
        CSharp: ObservationSearch.Geoprivacy.Private
        VB: ObservationSearch.Geoprivacy.Private
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Private
        VB: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy.Private
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Private
        path: ''
        startLine: 2963
      syntax:
        content:
          CSharp: Private = 4
          VB: Private = 4
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
    language: CSharp
    name:
      CSharp: ObservationSearch.IconicTaxon
      VB: ObservationSearch.IconicTaxon
    nameWithType:
      CSharp: ObservationSearch.IconicTaxon
      VB: ObservationSearch.IconicTaxon
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: IconicTaxon
      path: ''
      startLine: 2974
    syntax:
      content:
        CSharp: public enum IconicTaxon
        VB: Public Enum IconicTaxon
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.None
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.None
        VB: ObservationSearch.IconicTaxon.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.None
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Actinopterygii
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Actinopterygii
      language: CSharp
      name:
        CSharp: Actinopterygii
        VB: Actinopterygii
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Actinopterygii
        VB: ObservationSearch.IconicTaxon.Actinopterygii
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Actinopterygii
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Actinopterygii
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Actinopterygii
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: Actinopterygii = 1
          VB: Actinopterygii = 1
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Animalia
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Animalia
      language: CSharp
      name:
        CSharp: Animalia
        VB: Animalia
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Animalia
        VB: ObservationSearch.IconicTaxon.Animalia
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Animalia
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Animalia
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Animalia
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: Animalia = 2
          VB: Animalia = 2
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Amphibia
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Amphibia
      language: CSharp
      name:
        CSharp: Amphibia
        VB: Amphibia
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Amphibia
        VB: ObservationSearch.IconicTaxon.Amphibia
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Amphibia
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Amphibia
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Amphibia
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: Amphibia = 3
          VB: Amphibia = 3
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Arachnida
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Arachnida
      language: CSharp
      name:
        CSharp: Arachnida
        VB: Arachnida
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Arachnida
        VB: ObservationSearch.IconicTaxon.Arachnida
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Arachnida
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Arachnida
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Arachnida
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: Arachnida = 4
          VB: Arachnida = 4
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Aves
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Aves
      language: CSharp
      name:
        CSharp: Aves
        VB: Aves
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Aves
        VB: ObservationSearch.IconicTaxon.Aves
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Aves
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Aves
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Aves
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: Aves = 5
          VB: Aves = 5
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Chromista
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Chromista
      language: CSharp
      name:
        CSharp: Chromista
        VB: Chromista
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Chromista
        VB: ObservationSearch.IconicTaxon.Chromista
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Chromista
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Chromista
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Chromista
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: Chromista = 6
          VB: Chromista = 6
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Fungi
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Fungi
      language: CSharp
      name:
        CSharp: Fungi
        VB: Fungi
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Fungi
        VB: ObservationSearch.IconicTaxon.Fungi
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Fungi
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Fungi
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Fungi
        path: ''
        startLine: 2976
      syntax:
        content:
          CSharp: Fungi = 7
          VB: Fungi = 7
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Insecta
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Insecta
      language: CSharp
      name:
        CSharp: Insecta
        VB: Insecta
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Insecta
        VB: ObservationSearch.IconicTaxon.Insecta
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Insecta
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Insecta
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Insecta
        path: ''
        startLine: 2977
      syntax:
        content:
          CSharp: Insecta = 8
          VB: Insecta = 8
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mammalia
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mammalia
      language: CSharp
      name:
        CSharp: Mammalia
        VB: Mammalia
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Mammalia
        VB: ObservationSearch.IconicTaxon.Mammalia
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mammalia
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mammalia
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Mammalia
        path: ''
        startLine: 2977
      syntax:
        content:
          CSharp: Mammalia = 9
          VB: Mammalia = 9
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mollusca
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mollusca
      language: CSharp
      name:
        CSharp: Mollusca
        VB: Mollusca
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Mollusca
        VB: ObservationSearch.IconicTaxon.Mollusca
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mollusca
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Mollusca
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Mollusca
        path: ''
        startLine: 2977
      syntax:
        content:
          CSharp: Mollusca = 10
          VB: Mollusca = 10
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Reptilia
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Reptilia
      language: CSharp
      name:
        CSharp: Reptilia
        VB: Reptilia
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Reptilia
        VB: ObservationSearch.IconicTaxon.Reptilia
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Reptilia
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Reptilia
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Reptilia
        path: ''
        startLine: 2977
      syntax:
        content:
          CSharp: Reptilia = 11
          VB: Reptilia = 11
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Plantae
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Plantae
      language: CSharp
      name:
        CSharp: Plantae
        VB: Plantae
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Plantae
        VB: ObservationSearch.IconicTaxon.Plantae
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Plantae
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Plantae
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Plantae
        path: ''
        startLine: 2977
      syntax:
        content:
          CSharp: Plantae = 12
          VB: Plantae = 12
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Protozoa
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Protozoa
      language: CSharp
      name:
        CSharp: Protozoa
        VB: Protozoa
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Protozoa
        VB: ObservationSearch.IconicTaxon.Protozoa
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Protozoa
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Protozoa
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Protozoa
        path: ''
        startLine: 2977
      syntax:
        content:
          CSharp: Protozoa = 13
          VB: Protozoa = 13
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Unknown
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Unknown
      language: CSharp
      name:
        CSharp: Unknown
        VB: Unknown
      nameWithType:
        CSharp: ObservationSearch.IconicTaxon.Unknown
        VB: ObservationSearch.IconicTaxon.Unknown
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Unknown
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon.Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Unknown
        path: ''
        startLine: 2977
      syntax:
        content:
          CSharp: Unknown = 14
          VB: Unknown = 14
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
    language: CSharp
    name:
      CSharp: ObservationSearch.IdentificationAgreement
      VB: ObservationSearch.IdentificationAgreement
    nameWithType:
      CSharp: ObservationSearch.IdentificationAgreement
      VB: ObservationSearch.IdentificationAgreement
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      VB: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: IdentificationAgreement
      path: ''
      startLine: 2980
    syntax:
      content:
        CSharp: public enum IdentificationAgreement
        VB: Public Enum IdentificationAgreement
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.None
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: ObservationSearch.IdentificationAgreement.None
        VB: ObservationSearch.IdentificationAgreement.None
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.None
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: None
        path: ''
        startLine: 2982
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostAgree
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostAgree
      language: CSharp
      name:
        CSharp: MostAgree
        VB: MostAgree
      nameWithType:
        CSharp: ObservationSearch.IdentificationAgreement.MostAgree
        VB: ObservationSearch.IdentificationAgreement.MostAgree
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostAgree
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostAgree
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: MostAgree
        path: ''
        startLine: 2982
      syntax:
        content:
          CSharp: MostAgree = 1
          VB: MostAgree = 1
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostDisagree
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostDisagree
      language: CSharp
      name:
        CSharp: MostDisagree
        VB: MostDisagree
      nameWithType:
        CSharp: ObservationSearch.IdentificationAgreement.MostDisagree
        VB: ObservationSearch.IdentificationAgreement.MostDisagree
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostDisagree
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.MostDisagree
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: MostDisagree
        path: ''
        startLine: 2982
      syntax:
        content:
          CSharp: MostDisagree = 2
          VB: MostDisagree = 2
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.SomeAgree
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.SomeAgree
      language: CSharp
      name:
        CSharp: SomeAgree
        VB: SomeAgree
      nameWithType:
        CSharp: ObservationSearch.IdentificationAgreement.SomeAgree
        VB: ObservationSearch.IdentificationAgreement.SomeAgree
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.SomeAgree
        VB: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement.SomeAgree
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SomeAgree
        path: ''
        startLine: 2982
      syntax:
        content:
          CSharp: SomeAgree = 3
          VB: SomeAgree = 3
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
    language: CSharp
    name:
      CSharp: ObservationSearch.SearchProperty
      VB: ObservationSearch.SearchProperty
    nameWithType:
      CSharp: ObservationSearch.SearchProperty
      VB: ObservationSearch.SearchProperty
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
      VB: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: SearchProperty
      path: ''
      startLine: 2993
    syntax:
      content:
        CSharp: public enum SearchProperty
        VB: Public Enum SearchProperty
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.All
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.All
      language: CSharp
      name:
        CSharp: All
        VB: All
      nameWithType:
        CSharp: ObservationSearch.SearchProperty.All
        VB: ObservationSearch.SearchProperty.All
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.All
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.All
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: All
        path: ''
        startLine: 2995
      syntax:
        content:
          CSharp: All = 0
          VB: All = 0
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Names
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Names
      language: CSharp
      name:
        CSharp: Names
        VB: Names
      nameWithType:
        CSharp: ObservationSearch.SearchProperty.Names
        VB: ObservationSearch.SearchProperty.Names
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Names
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Names
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Names
        path: ''
        startLine: 2995
      syntax:
        content:
          CSharp: Names = 1
          VB: Names = 1
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Tags
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Tags
      language: CSharp
      name:
        CSharp: Tags
        VB: Tags
      nameWithType:
        CSharp: ObservationSearch.SearchProperty.Tags
        VB: ObservationSearch.SearchProperty.Tags
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Tags
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Tags
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Tags
        path: ''
        startLine: 2995
      syntax:
        content:
          CSharp: Tags = 2
          VB: Tags = 2
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Description
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: ObservationSearch.SearchProperty.Description
        VB: ObservationSearch.SearchProperty.Description
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Description
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Description
        path: ''
        startLine: 2995
      syntax:
        content:
          CSharp: Description = 3
          VB: Description = 3
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Place
      commentId: F:JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Place
      language: CSharp
      name:
        CSharp: Place
        VB: Place
      nameWithType:
        CSharp: ObservationSearch.SearchProperty.Place
        VB: ObservationSearch.SearchProperty.Place
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Place
        VB: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty.Place
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Place
        path: ''
        startLine: 2995
      syntax:
        content:
          CSharp: Place = 4
          VB: Place = 4
        return:
          type: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.SearchObject
    commentId: T:JoshAaronMiller.INaturalist.SearchObject
    language: CSharp
    name:
      CSharp: SearchObject
      VB: SearchObject
    nameWithType:
      CSharp: SearchObject
      VB: SearchObject
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.SearchObject
      VB: JoshAaronMiller.INaturalist.SearchObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: SearchObject
      path: ''
      startLine: 3599
    summary: "\nA search object has a set of bool and string parameters for conducting a query using the INatManager.\n"
    example: []
    syntax:
      content:
        CSharp: public abstract class SearchObject
        VB: Public MustInherit Class SearchObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.SearchObject.boolParams
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.boolParams
      language: CSharp
      name:
        CSharp: boolParams
        VB: boolParams
      nameWithType:
        CSharp: SearchObject.boolParams
        VB: SearchObject.boolParams
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.boolParams
        VB: JoshAaronMiller.INaturalist.SearchObject.boolParams
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: boolParams
        path: ''
        startLine: 3601
      syntax:
        content:
          CSharp: protected Dictionary<string, bool> boolParams
          VB: Protected boolParams As Dictionary(Of String, Boolean)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Boolean}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: JoshAaronMiller.INaturalist.SearchObject.stringParams
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.stringParams
      language: CSharp
      name:
        CSharp: stringParams
        VB: stringParams
      nameWithType:
        CSharp: SearchObject.stringParams
        VB: SearchObject.stringParams
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.stringParams
        VB: JoshAaronMiller.INaturalist.SearchObject.stringParams
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: stringParams
        path: ''
        startLine: 3602
      syntax:
        content:
          CSharp: protected Dictionary<string, string> stringParams
          VB: Protected stringParams As Dictionary(Of String, String)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
      commentId: M:JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
      language: CSharp
      name:
        CSharp: SetBooleanParameter(SearchObject.BooleanParameter, Boolean)
        VB: SetBooleanParameter(SearchObject.BooleanParameter, Boolean)
      nameWithType:
        CSharp: SearchObject.SetBooleanParameter(SearchObject.BooleanParameter, Boolean)
        VB: SearchObject.SetBooleanParameter(SearchObject.BooleanParameter, Boolean)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter, System.Boolean)
        VB: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetBooleanParameter
        path: ''
        startLine: 3738
      summary: "\nAdd a parameter from the search.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBooleanParameter(SearchObject.BooleanParameter key, bool value)
          VB: Public Sub SetBooleanParameter(key As SearchObject.BooleanParameter, value As Boolean)
        parameters:
        - id: key
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
          description: The key to add.
        - id: value
          type: System.Boolean
          description: The value to add.
      overload: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
      commentId: M:JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
      language: CSharp
      name:
        CSharp: RemoveBooleanParameter(SearchObject.BooleanParameter)
        VB: RemoveBooleanParameter(SearchObject.BooleanParameter)
      nameWithType:
        CSharp: SearchObject.RemoveBooleanParameter(SearchObject.BooleanParameter)
        VB: SearchObject.RemoveBooleanParameter(SearchObject.BooleanParameter)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
        VB: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: RemoveBooleanParameter
        path: ''
        startLine: 3747
      summary: "\nRemove a parameter from the search.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveBooleanParameter(SearchObject.BooleanParameter key)
          VB: Public Sub RemoveBooleanParameter(key As SearchObject.BooleanParameter)
        parameters:
        - id: key
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
          description: The key to remove.
      overload: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
      commentId: M:JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
      language: CSharp
      name:
        CSharp: SetStringParameter(SearchObject.StringParameter, String)
        VB: SetStringParameter(SearchObject.StringParameter, String)
      nameWithType:
        CSharp: SearchObject.SetStringParameter(SearchObject.StringParameter, String)
        VB: SearchObject.SetStringParameter(SearchObject.StringParameter, String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter, System.String)
        VB: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetStringParameter
        path: ''
        startLine: 3757
      summary: "\nAdd a parameter from the search.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetStringParameter(SearchObject.StringParameter key, string value)
          VB: Public Sub SetStringParameter(key As SearchObject.StringParameter, value As String)
        parameters:
        - id: key
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
          description: The key to add.
        - id: value
          type: System.String
          description: The value to add.
      overload: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
      commentId: M:JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
      language: CSharp
      name:
        CSharp: RemoveStringParameter(SearchObject.StringParameter)
        VB: RemoveStringParameter(SearchObject.StringParameter)
      nameWithType:
        CSharp: SearchObject.RemoveStringParameter(SearchObject.StringParameter)
        VB: SearchObject.RemoveStringParameter(SearchObject.StringParameter)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
        VB: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: RemoveStringParameter
        path: ''
        startLine: 3766
      summary: "\nRemove a parameter from the search.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveStringParameter(SearchObject.StringParameter key)
          VB: Public Sub RemoveStringParameter(key As SearchObject.StringParameter)
        parameters:
        - id: key
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
          description: The key to remove.
      overload: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
      commentId: M:JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
      language: CSharp
      name:
        CSharp: ToUrlParameters()
        VB: ToUrlParameters()
      nameWithType:
        CSharp: SearchObject.ToUrlParameters()
        VB: SearchObject.ToUrlParameters()
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters()
        VB: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ToUrlParameters
        path: ''
        startLine: 3775
      summary: "\nReturns this search object as a string of URL parameters.\n"
      example: []
      syntax:
        content:
          CSharp: public string ToUrlParameters()
          VB: Public Function ToUrlParameters As String
        return:
          type: System.String
          description: A string of URL parameters
      overload: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
    commentId: T:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
    language: CSharp
    name:
      CSharp: SearchObject.BooleanParameter
      VB: SearchObject.BooleanParameter
    nameWithType:
      CSharp: SearchObject.BooleanParameter
      VB: SearchObject.BooleanParameter
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: BooleanParameter
      path: ''
      startLine: 3604
    syntax:
      content:
        CSharp: public enum BooleanParameter
        VB: Public Enum BooleanParameter
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPhotos
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPhotos
      language: CSharp
      name:
        CSharp: HasPhotos
        VB: HasPhotos
      nameWithType:
        CSharp: SearchObject.BooleanParameter.HasPhotos
        VB: SearchObject.BooleanParameter.HasPhotos
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPhotos
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPhotos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: HasPhotos
        path: ''
        startLine: 3606
      syntax:
        content:
          CSharp: HasPhotos = 0
          VB: HasPhotos = 0
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPositionalAccuracy
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPositionalAccuracy
      language: CSharp
      name:
        CSharp: HasPositionalAccuracy
        VB: HasPositionalAccuracy
      nameWithType:
        CSharp: SearchObject.BooleanParameter.HasPositionalAccuracy
        VB: SearchObject.BooleanParameter.HasPositionalAccuracy
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPositionalAccuracy
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasPositionalAccuracy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: HasPositionalAccuracy
        path: ''
        startLine: 3606
      syntax:
        content:
          CSharp: HasPositionalAccuracy = 1
          VB: HasPositionalAccuracy = 1
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasProjectId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasProjectId
      language: CSharp
      name:
        CSharp: HasProjectId
        VB: HasProjectId
      nameWithType:
        CSharp: SearchObject.BooleanParameter.HasProjectId
        VB: SearchObject.BooleanParameter.HasProjectId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasProjectId
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasProjectId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: HasProjectId
        path: ''
        startLine: 3606
      syntax:
        content:
          CSharp: HasProjectId = 2
          VB: HasProjectId = 2
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasSounds
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasSounds
      language: CSharp
      name:
        CSharp: HasSounds
        VB: HasSounds
      nameWithType:
        CSharp: SearchObject.BooleanParameter.HasSounds
        VB: SearchObject.BooleanParameter.HasSounds
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasSounds
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.HasSounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: HasSounds
        path: ''
        startLine: 3606
      syntax:
        content:
          CSharp: HasSounds = 3
          VB: HasSounds = 3
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IncludeAllTaxonNames
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IncludeAllTaxonNames
      language: CSharp
      name:
        CSharp: IncludeAllTaxonNames
        VB: IncludeAllTaxonNames
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IncludeAllTaxonNames
        VB: SearchObject.BooleanParameter.IncludeAllTaxonNames
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IncludeAllTaxonNames
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IncludeAllTaxonNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeAllTaxonNames
        path: ''
        startLine: 3606
      syntax:
        content:
          CSharp: IncludeAllTaxonNames = 4
          VB: IncludeAllTaxonNames = 4
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsActive
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsActive
      language: CSharp
      name:
        CSharp: IsActive
        VB: IsActive
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsActive
        VB: SearchObject.BooleanParameter.IsActive
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsActive
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsActive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsActive
        path: ''
        startLine: 3606
      syntax:
        content:
          CSharp: IsActive = 5
          VB: IsActive = 5
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCaptive
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCaptive
      language: CSharp
      name:
        CSharp: IsCaptive
        VB: IsCaptive
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsCaptive
        VB: SearchObject.BooleanParameter.IsCaptive
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCaptive
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCaptive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsCaptive
        path: ''
        startLine: 3606
      syntax:
        content:
          CSharp: IsCaptive = 6
          VB: IsCaptive = 6
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCurrent
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCurrent
      language: CSharp
      name:
        CSharp: IsCurrent
        VB: IsCurrent
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsCurrent
        VB: SearchObject.BooleanParameter.IsCurrent
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCurrent
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsCurrent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsCurrent
        path: ''
        startLine: 3607
      syntax:
        content:
          CSharp: IsCurrent = 7
          VB: IsCurrent = 7
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsEndemic
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsEndemic
      language: CSharp
      name:
        CSharp: IsEndemic
        VB: IsEndemic
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsEndemic
        VB: SearchObject.BooleanParameter.IsEndemic
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsEndemic
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsEndemic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsEndemic
        path: ''
        startLine: 3607
      syntax:
        content:
          CSharp: IsEndemic = 8
          VB: IsEndemic = 8
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsFromTaxonChange
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsFromTaxonChange
      language: CSharp
      name:
        CSharp: IsFromTaxonChange
        VB: IsFromTaxonChange
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsFromTaxonChange
        VB: SearchObject.BooleanParameter.IsFromTaxonChange
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsFromTaxonChange
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsFromTaxonChange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsFromTaxonChange
        path: ''
        startLine: 3607
      syntax:
        content:
          CSharp: IsFromTaxonChange = 9
          VB: IsFromTaxonChange = 9
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsGeoreferenced
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsGeoreferenced
      language: CSharp
      name:
        CSharp: IsGeoreferenced
        VB: IsGeoreferenced
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsGeoreferenced
        VB: SearchObject.BooleanParameter.IsGeoreferenced
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsGeoreferenced
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsGeoreferenced
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsGeoreferenced
        path: ''
        startLine: 3607
      syntax:
        content:
          CSharp: IsGeoreferenced = 10
          VB: IsGeoreferenced = 10
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentificationTaxonActive
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentificationTaxonActive
      language: CSharp
      name:
        CSharp: IsIdentificationTaxonActive
        VB: IsIdentificationTaxonActive
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsIdentificationTaxonActive
        VB: SearchObject.BooleanParameter.IsIdentificationTaxonActive
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentificationTaxonActive
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentificationTaxonActive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsIdentificationTaxonActive
        path: ''
        startLine: 3607
      syntax:
        content:
          CSharp: IsIdentificationTaxonActive = 11
          VB: IsIdentificationTaxonActive = 11
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentified
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentified
      language: CSharp
      name:
        CSharp: IsIdentified
        VB: IsIdentified
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsIdentified
        VB: SearchObject.BooleanParameter.IsIdentified
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentified
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsIdentified
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsIdentified
        path: ''
        startLine: 3608
      syntax:
        content:
          CSharp: IsIdentified = 12
          VB: IsIdentified = 12
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsLicensed
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsLicensed
      language: CSharp
      name:
        CSharp: IsLicensed
        VB: IsLicensed
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsLicensed
        VB: SearchObject.BooleanParameter.IsLicensed
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsLicensed
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsLicensed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsLicensed
        path: ''
        startLine: 3608
      syntax:
        content:
          CSharp: IsLicensed = 13
          VB: IsLicensed = 13
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsMappable
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsMappable
      language: CSharp
      name:
        CSharp: IsMappable
        VB: IsMappable
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsMappable
        VB: SearchObject.BooleanParameter.IsMappable
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsMappable
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsMappable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsMappable
        path: ''
        startLine: 3608
      syntax:
        content:
          CSharp: IsMappable = 14
          VB: IsMappable = 14
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsNative
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsNative
      language: CSharp
      name:
        CSharp: IsNative
        VB: IsNative
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsNative
        VB: SearchObject.BooleanParameter.IsNative
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsNative
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsNative
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsNative
        path: ''
        startLine: 3608
      syntax:
        content:
          CSharp: IsNative = 15
          VB: IsNative = 15
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActive
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActive
      language: CSharp
      name:
        CSharp: IsObservationTaxonActive
        VB: IsObservationTaxonActive
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsObservationTaxonActive
        VB: SearchObject.BooleanParameter.IsObservationTaxonActive
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActive
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsObservationTaxonActive
        path: ''
        startLine: 3608
      syntax:
        content:
          CSharp: IsObservationTaxonActive = 16
          VB: IsObservationTaxonActive = 16
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActiveForIdentification
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActiveForIdentification
      language: CSharp
      name:
        CSharp: IsObservationTaxonActiveForIdentification
        VB: IsObservationTaxonActiveForIdentification
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsObservationTaxonActiveForIdentification
        VB: SearchObject.BooleanParameter.IsObservationTaxonActiveForIdentification
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActiveForIdentification
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObservationTaxonActiveForIdentification
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsObservationTaxonActiveForIdentification
        path: ''
        startLine: 3609
      syntax:
        content:
          CSharp: IsObservationTaxonActiveForIdentification = 17
          VB: IsObservationTaxonActiveForIdentification = 17
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObserversIdentification
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObserversIdentification
      language: CSharp
      name:
        CSharp: IsObserversIdentification
        VB: IsObserversIdentification
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsObserversIdentification
        VB: SearchObject.BooleanParameter.IsObserversIdentification
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObserversIdentification
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsObserversIdentification
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsObserversIdentification
        path: ''
        startLine: 3609
      syntax:
        content:
          CSharp: IsObserversIdentification = 18
          VB: IsObserversIdentification = 18
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsOutOfRange
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsOutOfRange
      language: CSharp
      name:
        CSharp: IsOutOfRange
        VB: IsOutOfRange
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsOutOfRange
        VB: SearchObject.BooleanParameter.IsOutOfRange
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsOutOfRange
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsOutOfRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsOutOfRange
        path: ''
        startLine: 3609
      syntax:
        content:
          CSharp: IsOutOfRange = 19
          VB: IsOutOfRange = 19
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPhotoLicensed
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPhotoLicensed
      language: CSharp
      name:
        CSharp: IsPhotoLicensed
        VB: IsPhotoLicensed
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsPhotoLicensed
        VB: SearchObject.BooleanParameter.IsPhotoLicensed
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPhotoLicensed
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPhotoLicensed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsPhotoLicensed
        path: ''
        startLine: 3610
      syntax:
        content:
          CSharp: IsPhotoLicensed = 20
          VB: IsPhotoLicensed = 20
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPopular
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPopular
      language: CSharp
      name:
        CSharp: IsPopular
        VB: IsPopular
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsPopular
        VB: SearchObject.BooleanParameter.IsPopular
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPopular
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsPopular
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsPopular
        path: ''
        startLine: 3610
      syntax:
        content:
          CSharp: IsPopular = 21
          VB: IsPopular = 21
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsThreatened
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsThreatened
      language: CSharp
      name:
        CSharp: IsThreatened
        VB: IsThreatened
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsThreatened
        VB: SearchObject.BooleanParameter.IsThreatened
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsThreatened
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsThreatened
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsThreatened
        path: ''
        startLine: 3610
      syntax:
        content:
          CSharp: IsThreatened = 22
          VB: IsThreatened = 22
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsVerifiable
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsVerifiable
      language: CSharp
      name:
        CSharp: IsVerifiable
        VB: IsVerifiable
      nameWithType:
        CSharp: SearchObject.BooleanParameter.IsVerifiable
        VB: SearchObject.BooleanParameter.IsVerifiable
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsVerifiable
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.IsVerifiable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IsVerifiable
        path: ''
        startLine: 3610
      syntax:
        content:
          CSharp: IsVerifiable = 23
          VB: IsVerifiable = 23
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.MatchesObservationTaxon
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.MatchesObservationTaxon
      language: CSharp
      name:
        CSharp: MatchesObservationTaxon
        VB: MatchesObservationTaxon
      nameWithType:
        CSharp: SearchObject.BooleanParameter.MatchesObservationTaxon
        VB: SearchObject.BooleanParameter.MatchesObservationTaxon
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.MatchesObservationTaxon
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.MatchesObservationTaxon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: MatchesObservationTaxon
        path: ''
        startLine: 3610
      syntax:
        content:
          CSharp: MatchesObservationTaxon = 24
          VB: MatchesObservationTaxon = 24
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.ReturnIdOnly
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.ReturnIdOnly
      language: CSharp
      name:
        CSharp: ReturnIdOnly
        VB: ReturnIdOnly
      nameWithType:
        CSharp: SearchObject.BooleanParameter.ReturnIdOnly
        VB: SearchObject.BooleanParameter.ReturnIdOnly
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.ReturnIdOnly
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.ReturnIdOnly
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ReturnIdOnly
        path: ''
        startLine: 3611
      syntax:
        content:
          CSharp: ReturnIdOnly = 25
          VB: ReturnIdOnly = 25
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.WasIntroduced
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.WasIntroduced
      language: CSharp
      name:
        CSharp: WasIntroduced
        VB: WasIntroduced
      nameWithType:
        CSharp: SearchObject.BooleanParameter.WasIntroduced
        VB: SearchObject.BooleanParameter.WasIntroduced
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.WasIntroduced
        VB: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter.WasIntroduced
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: WasIntroduced
        path: ''
        startLine: 3611
      syntax:
        content:
          CSharp: WasIntroduced = 26
          VB: WasIntroduced = 26
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter
    commentId: T:JoshAaronMiller.INaturalist.SearchObject.StringParameter
    language: CSharp
    name:
      CSharp: SearchObject.StringParameter
      VB: SearchObject.StringParameter
    nameWithType:
      CSharp: SearchObject.StringParameter
      VB: SearchObject.StringParameter
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: StringParameter
      path: ''
      startLine: 3643
    syntax:
      content:
        CSharp: public enum StringParameter
        VB: Public Enum StringParameter
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMax
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMax
      language: CSharp
      name:
        CSharp: AccMax
        VB: AccMax
      nameWithType:
        CSharp: SearchObject.StringParameter.AccMax
        VB: SearchObject.StringParameter.AccMax
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMax
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: AccMax
        path: ''
        startLine: 3645
      syntax:
        content:
          CSharp: AccMax = 0
          VB: AccMax = 0
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMaxOrUnknown
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMaxOrUnknown
      language: CSharp
      name:
        CSharp: AccMaxOrUnknown
        VB: AccMaxOrUnknown
      nameWithType:
        CSharp: SearchObject.StringParameter.AccMaxOrUnknown
        VB: SearchObject.StringParameter.AccMaxOrUnknown
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMaxOrUnknown
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMaxOrUnknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: AccMaxOrUnknown
        path: ''
        startLine: 3645
      syntax:
        content:
          CSharp: AccMaxOrUnknown = 1
          VB: AccMaxOrUnknown = 1
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMin
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMin
      language: CSharp
      name:
        CSharp: AccMin
        VB: AccMin
      nameWithType:
        CSharp: SearchObject.StringParameter.AccMin
        VB: SearchObject.StringParameter.AccMin
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMin
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.AccMin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: AccMin
        path: ''
        startLine: 3645
      syntax:
        content:
          CSharp: AccMin = 2
          VB: AccMin = 2
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ApplyProjectRules
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ApplyProjectRules
      language: CSharp
      name:
        CSharp: ApplyProjectRules
        VB: ApplyProjectRules
      nameWithType:
        CSharp: SearchObject.StringParameter.ApplyProjectRules
        VB: SearchObject.StringParameter.ApplyProjectRules
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ApplyProjectRules
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ApplyProjectRules
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ApplyProjectRules
        path: ''
        startLine: 3645
      syntax:
        content:
          CSharp: ApplyProjectRules = 3
          VB: ApplyProjectRules = 3
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Box
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Box
      language: CSharp
      name:
        CSharp: Box
        VB: Box
      nameWithType:
        CSharp: SearchObject.StringParameter.Box
        VB: SearchObject.StringParameter.Box
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Box
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Box
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Box
        path: ''
        startLine: 3645
      syntax:
        content:
          CSharp: Box = 4
          VB: Box = 4
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Category
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Category
      language: CSharp
      name:
        CSharp: Category
        VB: Category
      nameWithType:
        CSharp: SearchObject.StringParameter.Category
        VB: SearchObject.StringParameter.Category
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Category
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Category
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Category
        path: ''
        startLine: 3645
      syntax:
        content:
          CSharp: Category = 5
          VB: Category = 5
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatus
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatus
      language: CSharp
      name:
        CSharp: ConservationStatus
        VB: ConservationStatus
      nameWithType:
        CSharp: SearchObject.StringParameter.ConservationStatus
        VB: SearchObject.StringParameter.ConservationStatus
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatus
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ConservationStatus
        path: ''
        startLine: 3645
      syntax:
        content:
          CSharp: ConservationStatus = 6
          VB: ConservationStatus = 6
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatusAuthority
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatusAuthority
      language: CSharp
      name:
        CSharp: ConservationStatusAuthority
        VB: ConservationStatusAuthority
      nameWithType:
        CSharp: SearchObject.StringParameter.ConservationStatusAuthority
        VB: SearchObject.StringParameter.ConservationStatusAuthority
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatusAuthority
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ConservationStatusAuthority
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ConservationStatusAuthority
        path: ''
        startLine: 3646
      syntax:
        content:
          CSharp: ConservationStatusAuthority = 7
          VB: ConservationStatusAuthority = 7
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedEndDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedEndDate
      language: CSharp
      name:
        CSharp: CreatedEndDate
        VB: CreatedEndDate
      nameWithType:
        CSharp: SearchObject.StringParameter.CreatedEndDate
        VB: SearchObject.StringParameter.CreatedEndDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedEndDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedEndDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreatedEndDate
        path: ''
        startLine: 3646
      syntax:
        content:
          CSharp: CreatedEndDate = 8
          VB: CreatedEndDate = 8
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedOn
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedOn
      language: CSharp
      name:
        CSharp: CreatedOn
        VB: CreatedOn
      nameWithType:
        CSharp: SearchObject.StringParameter.CreatedOn
        VB: SearchObject.StringParameter.CreatedOn
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedOn
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedOn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreatedOn
        path: ''
        startLine: 3646
      syntax:
        content:
          CSharp: CreatedOn = 9
          VB: CreatedOn = 9
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedStartDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedStartDate
      language: CSharp
      name:
        CSharp: CreatedStartDate
        VB: CreatedStartDate
      nameWithType:
        CSharp: SearchObject.StringParameter.CreatedStartDate
        VB: SearchObject.StringParameter.CreatedStartDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedStartDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.CreatedStartDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: CreatedStartDate
        path: ''
        startLine: 3646
      syntax:
        content:
          CSharp: CreatedStartDate = 10
          VB: CreatedStartDate = 10
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Day
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Day
      language: CSharp
      name:
        CSharp: Day
        VB: Day
      nameWithType:
        CSharp: SearchObject.StringParameter.Day
        VB: SearchObject.StringParameter.Day
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Day
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Day
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Day
        path: ''
        startLine: 3646
      syntax:
        content:
          CSharp: Day = 11
          VB: Day = 11
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.EndDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.EndDate
      language: CSharp
      name:
        CSharp: EndDate
        VB: EndDate
      nameWithType:
        CSharp: SearchObject.StringParameter.EndDate
        VB: SearchObject.StringParameter.EndDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.EndDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.EndDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: EndDate
        path: ''
        startLine: 3646
      syntax:
        content:
          CSharp: EndDate = 12
          VB: EndDate = 12
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeId
      language: CSharp
      name:
        CSharp: ExcludeId
        VB: ExcludeId
      nameWithType:
        CSharp: SearchObject.StringParameter.ExcludeId
        VB: SearchObject.StringParameter.ExcludeId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeId
        path: ''
        startLine: 3647
      syntax:
        content:
          CSharp: ExcludeId = 13
          VB: ExcludeId = 13
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeObservationTaxonId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeObservationTaxonId
      language: CSharp
      name:
        CSharp: ExcludeObservationTaxonId
        VB: ExcludeObservationTaxonId
      nameWithType:
        CSharp: SearchObject.StringParameter.ExcludeObservationTaxonId
        VB: SearchObject.StringParameter.ExcludeObservationTaxonId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeObservationTaxonId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeObservationTaxonId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeObservationTaxonId
        path: ''
        startLine: 3647
      syntax:
        content:
          CSharp: ExcludeObservationTaxonId = 14
          VB: ExcludeObservationTaxonId = 14
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectId
      language: CSharp
      name:
        CSharp: ExcludeProjectId
        VB: ExcludeProjectId
      nameWithType:
        CSharp: SearchObject.StringParameter.ExcludeProjectId
        VB: SearchObject.StringParameter.ExcludeProjectId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeProjectId
        path: ''
        startLine: 3647
      syntax:
        content:
          CSharp: ExcludeProjectId = 15
          VB: ExcludeProjectId = 15
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectRules
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectRules
      language: CSharp
      name:
        CSharp: ExcludeProjectRules
        VB: ExcludeProjectRules
      nameWithType:
        CSharp: SearchObject.StringParameter.ExcludeProjectRules
        VB: SearchObject.StringParameter.ExcludeProjectRules
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectRules
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeProjectRules
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeProjectRules
        path: ''
        startLine: 3647
      syntax:
        content:
          CSharp: ExcludeProjectRules = 16
          VB: ExcludeProjectRules = 16
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeTaxonId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeTaxonId
      language: CSharp
      name:
        CSharp: ExcludeTaxonId
        VB: ExcludeTaxonId
      nameWithType:
        CSharp: SearchObject.StringParameter.ExcludeTaxonId
        VB: SearchObject.StringParameter.ExcludeTaxonId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeTaxonId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ExcludeTaxonId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ExcludeTaxonId
        path: ''
        startLine: 3647
      syntax:
        content:
          CSharp: ExcludeTaxonId = 17
          VB: ExcludeTaxonId = 17
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Geoprivacy
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Geoprivacy
      language: CSharp
      name:
        CSharp: Geoprivacy
        VB: Geoprivacy
      nameWithType:
        CSharp: SearchObject.StringParameter.Geoprivacy
        VB: SearchObject.StringParameter.Geoprivacy
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Geoprivacy
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Geoprivacy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Geoprivacy
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: Geoprivacy = 18
          VB: Geoprivacy = 18
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.HighestRank
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.HighestRank
      language: CSharp
      name:
        CSharp: HighestRank
        VB: HighestRank
      nameWithType:
        CSharp: SearchObject.StringParameter.HighestRank
        VB: SearchObject.StringParameter.HighestRank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.HighestRank
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.HighestRank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: HighestRank
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: HighestRank = 19
          VB: HighestRank = 19
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxa
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxa
      language: CSharp
      name:
        CSharp: IconicTaxa
        VB: IconicTaxa
      nameWithType:
        CSharp: SearchObject.StringParameter.IconicTaxa
        VB: SearchObject.StringParameter.IconicTaxa
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxa
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxa
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IconicTaxa
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: IconicTaxa = 20
          VB: IconicTaxa = 20
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxonId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxonId
      language: CSharp
      name:
        CSharp: IconicTaxonId
        VB: IconicTaxonId
      nameWithType:
        CSharp: SearchObject.StringParameter.IconicTaxonId
        VB: SearchObject.StringParameter.IconicTaxonId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxonId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IconicTaxonId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IconicTaxonId
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: IconicTaxonId = 21
          VB: IconicTaxonId = 21
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedEndDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedEndDate
      language: CSharp
      name:
        CSharp: IdentificationObservedEndDate
        VB: IdentificationObservedEndDate
      nameWithType:
        CSharp: SearchObject.StringParameter.IdentificationObservedEndDate
        VB: SearchObject.StringParameter.IdentificationObservedEndDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedEndDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedEndDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IdentificationObservedEndDate
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: IdentificationObservedEndDate = 22
          VB: IdentificationObservedEndDate = 22
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedStartDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedStartDate
      language: CSharp
      name:
        CSharp: IdentificationObservedStartDate
        VB: IdentificationObservedStartDate
      nameWithType:
        CSharp: SearchObject.StringParameter.IdentificationObservedStartDate
        VB: SearchObject.StringParameter.IdentificationObservedStartDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedStartDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationObservedStartDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IdentificationObservedStartDate
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: IdentificationObservedStartDate = 23
          VB: IdentificationObservedStartDate = 23
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMax
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMax
      language: CSharp
      name:
        CSharp: IdMax
        VB: IdMax
      nameWithType:
        CSharp: SearchObject.StringParameter.IdMax
        VB: SearchObject.StringParameter.IdMax
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMax
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IdMax
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: IdMax = 24
          VB: IdMax = 24
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMin
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMin
      language: CSharp
      name:
        CSharp: IdMin
        VB: IdMin
      nameWithType:
        CSharp: SearchObject.StringParameter.IdMin
        VB: SearchObject.StringParameter.IdMin
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMin
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdMin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IdMin
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: IdMin = 25
          VB: IdMin = 25
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationAgreement
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationAgreement
      language: CSharp
      name:
        CSharp: IdentificationAgreement
        VB: IdentificationAgreement
      nameWithType:
        CSharp: SearchObject.StringParameter.IdentificationAgreement
        VB: SearchObject.StringParameter.IdentificationAgreement
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationAgreement
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentificationAgreement
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IdentificationAgreement
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: IdentificationAgreement = 26
          VB: IdentificationAgreement = 26
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentifiedByUserId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentifiedByUserId
      language: CSharp
      name:
        CSharp: IdentifiedByUserId
        VB: IdentifiedByUserId
      nameWithType:
        CSharp: SearchObject.StringParameter.IdentifiedByUserId
        VB: SearchObject.StringParameter.IdentifiedByUserId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentifiedByUserId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IdentifiedByUserId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IdentifiedByUserId
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: IdentifiedByUserId = 27
          VB: IdentifiedByUserId = 27
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeId
      language: CSharp
      name:
        CSharp: IncludeId
        VB: IncludeId
      nameWithType:
        CSharp: SearchObject.StringParameter.IncludeId
        VB: SearchObject.StringParameter.IncludeId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeId
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: IncludeId = 28
          VB: IncludeId = 28
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeObservationTaxonId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeObservationTaxonId
      language: CSharp
      name:
        CSharp: IncludeObservationTaxonId
        VB: IncludeObservationTaxonId
      nameWithType:
        CSharp: SearchObject.StringParameter.IncludeObservationTaxonId
        VB: SearchObject.StringParameter.IncludeObservationTaxonId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeObservationTaxonId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeObservationTaxonId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeObservationTaxonId
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: IncludeObservationTaxonId = 29
          VB: IncludeObservationTaxonId = 29
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludePlaceId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludePlaceId
      language: CSharp
      name:
        CSharp: IncludePlaceId
        VB: IncludePlaceId
      nameWithType:
        CSharp: SearchObject.StringParameter.IncludePlaceId
        VB: SearchObject.StringParameter.IncludePlaceId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludePlaceId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludePlaceId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludePlaceId
        path: ''
        startLine: 3650
      syntax:
        content:
          CSharp: IncludePlaceId = 30
          VB: IncludePlaceId = 30
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeProjectId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeProjectId
      language: CSharp
      name:
        CSharp: IncludeProjectId
        VB: IncludeProjectId
      nameWithType:
        CSharp: SearchObject.StringParameter.IncludeProjectId
        VB: SearchObject.StringParameter.IncludeProjectId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeProjectId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeProjectId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeProjectId
        path: ''
        startLine: 3650
      syntax:
        content:
          CSharp: IncludeProjectId = 31
          VB: IncludeProjectId = 31
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeTaxonId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeTaxonId
      language: CSharp
      name:
        CSharp: IncludeTaxonId
        VB: IncludeTaxonId
      nameWithType:
        CSharp: SearchObject.StringParameter.IncludeTaxonId
        VB: SearchObject.StringParameter.IncludeTaxonId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeTaxonId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IncludeTaxonId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTaxonId
        path: ''
        startLine: 3650
      syntax:
        content:
          CSharp: IncludeTaxonId = 32
          VB: IncludeTaxonId = 32
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IucnConservationStatus
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.IucnConservationStatus
      language: CSharp
      name:
        CSharp: IucnConservationStatus
        VB: IucnConservationStatus
      nameWithType:
        CSharp: SearchObject.StringParameter.IucnConservationStatus
        VB: SearchObject.StringParameter.IucnConservationStatus
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IucnConservationStatus
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.IucnConservationStatus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IucnConservationStatus
        path: ''
        startLine: 3650
      syntax:
        content:
          CSharp: IucnConservationStatus = 33
          VB: IucnConservationStatus = 33
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Latitude
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Latitude
      language: CSharp
      name:
        CSharp: Latitude
        VB: Latitude
      nameWithType:
        CSharp: SearchObject.StringParameter.Latitude
        VB: SearchObject.StringParameter.Latitude
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Latitude
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Latitude
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Latitude
        path: ''
        startLine: 3650
      syntax:
        content:
          CSharp: Latitude = 34
          VB: Latitude = 34
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.License
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.License
      language: CSharp
      name:
        CSharp: License
        VB: License
      nameWithType:
        CSharp: SearchObject.StringParameter.License
        VB: SearchObject.StringParameter.License
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.License
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.License
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: License
        path: ''
        startLine: 3650
      syntax:
        content:
          CSharp: License = 35
          VB: License = 35
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Longitude
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Longitude
      language: CSharp
      name:
        CSharp: Longitude
        VB: Longitude
      nameWithType:
        CSharp: SearchObject.StringParameter.Longitude
        VB: SearchObject.StringParameter.Longitude
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Longitude
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Longitude
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Longitude
        path: ''
        startLine: 3651
      syntax:
        content:
          CSharp: Longitude = 36
          VB: Longitude = 36
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.LowestRank
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.LowestRank
      language: CSharp
      name:
        CSharp: LowestRank
        VB: LowestRank
      nameWithType:
        CSharp: SearchObject.StringParameter.LowestRank
        VB: SearchObject.StringParameter.LowestRank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.LowestRank
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.LowestRank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: LowestRank
        path: ''
        startLine: 3651
      syntax:
        content:
          CSharp: LowestRank = 37
          VB: LowestRank = 37
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Month
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Month
      language: CSharp
      name:
        CSharp: Month
        VB: Month
      nameWithType:
        CSharp: SearchObject.StringParameter.Month
        VB: SearchObject.StringParameter.Month
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Month
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Month
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Month
        path: ''
        startLine: 3651
      syntax:
        content:
          CSharp: Month = 38
          VB: Month = 38
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLatitudeBound
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLatitudeBound
      language: CSharp
      name:
        CSharp: NortheastLatitudeBound
        VB: NortheastLatitudeBound
      nameWithType:
        CSharp: SearchObject.StringParameter.NortheastLatitudeBound
        VB: SearchObject.StringParameter.NortheastLatitudeBound
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLatitudeBound
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLatitudeBound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: NortheastLatitudeBound
        path: ''
        startLine: 3651
      syntax:
        content:
          CSharp: NortheastLatitudeBound = 39
          VB: NortheastLatitudeBound = 39
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLongitudeBound
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLongitudeBound
      language: CSharp
      name:
        CSharp: NortheastLongitudeBound
        VB: NortheastLongitudeBound
      nameWithType:
        CSharp: SearchObject.StringParameter.NortheastLongitudeBound
        VB: SearchObject.StringParameter.NortheastLongitudeBound
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLongitudeBound
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.NortheastLongitudeBound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: NortheastLongitudeBound
        path: ''
        startLine: 3651
      syntax:
        content:
          CSharp: NortheastLongitudeBound = 40
          VB: NortheastLongitudeBound = 40
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedEndDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedEndDate
      language: CSharp
      name:
        CSharp: ObservationCreatedEndDate
        VB: ObservationCreatedEndDate
      nameWithType:
        CSharp: SearchObject.StringParameter.ObservationCreatedEndDate
        VB: SearchObject.StringParameter.ObservationCreatedEndDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedEndDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedEndDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservationCreatedEndDate
        path: ''
        startLine: 3652
      syntax:
        content:
          CSharp: ObservationCreatedEndDate = 41
          VB: ObservationCreatedEndDate = 41
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedStartDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedStartDate
      language: CSharp
      name:
        CSharp: ObservationCreatedStartDate
        VB: ObservationCreatedStartDate
      nameWithType:
        CSharp: SearchObject.StringParameter.ObservationCreatedStartDate
        VB: SearchObject.StringParameter.ObservationCreatedStartDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedStartDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationCreatedStartDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservationCreatedStartDate
        path: ''
        startLine: 3652
      syntax:
        content:
          CSharp: ObservationCreatedStartDate = 42
          VB: ObservationCreatedStartDate = 42
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationHighestRank
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationHighestRank
      language: CSharp
      name:
        CSharp: ObservationHighestRank
        VB: ObservationHighestRank
      nameWithType:
        CSharp: SearchObject.StringParameter.ObservationHighestRank
        VB: SearchObject.StringParameter.ObservationHighestRank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationHighestRank
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationHighestRank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservationHighestRank
        path: ''
        startLine: 3652
      syntax:
        content:
          CSharp: ObservationHighestRank = 43
          VB: ObservationHighestRank = 43
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationIconicTaxonId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationIconicTaxonId
      language: CSharp
      name:
        CSharp: ObservationIconicTaxonId
        VB: ObservationIconicTaxonId
      nameWithType:
        CSharp: SearchObject.StringParameter.ObservationIconicTaxonId
        VB: SearchObject.StringParameter.ObservationIconicTaxonId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationIconicTaxonId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationIconicTaxonId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservationIconicTaxonId
        path: ''
        startLine: 3652
      syntax:
        content:
          CSharp: ObservationIconicTaxonId = 44
          VB: ObservationIconicTaxonId = 44
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationLowestRank
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationLowestRank
      language: CSharp
      name:
        CSharp: ObservationLowestRank
        VB: ObservationLowestRank
      nameWithType:
        CSharp: SearchObject.StringParameter.ObservationLowestRank
        VB: SearchObject.StringParameter.ObservationLowestRank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationLowestRank
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationLowestRank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservationLowestRank
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: ObservationLowestRank = 45
          VB: ObservationLowestRank = 45
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationTaxonRank
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationTaxonRank
      language: CSharp
      name:
        CSharp: ObservationTaxonRank
        VB: ObservationTaxonRank
      nameWithType:
        CSharp: SearchObject.StringParameter.ObservationTaxonRank
        VB: SearchObject.StringParameter.ObservationTaxonRank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationTaxonRank
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservationTaxonRank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservationTaxonRank
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: ObservationTaxonRank = 46
          VB: ObservationTaxonRank = 46
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservedOn
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservedOn
      language: CSharp
      name:
        CSharp: ObservedOn
        VB: ObservedOn
      nameWithType:
        CSharp: SearchObject.StringParameter.ObservedOn
        VB: SearchObject.StringParameter.ObservedOn
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservedOn
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ObservedOn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ObservedOn
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: ObservedOn = 47
          VB: ObservedOn = 47
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.OrderBy
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.OrderBy
      language: CSharp
      name:
        CSharp: OrderBy
        VB: OrderBy
      nameWithType:
        CSharp: SearchObject.StringParameter.OrderBy
        VB: SearchObject.StringParameter.OrderBy
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.OrderBy
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.OrderBy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: OrderBy
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: OrderBy = 48
          VB: OrderBy = 48
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Page
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Page
      language: CSharp
      name:
        CSharp: Page
        VB: Page
      nameWithType:
        CSharp: SearchObject.StringParameter.Page
        VB: SearchObject.StringParameter.Page
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Page
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Page
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Page
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: Page = 49
          VB: Page = 49
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.PerPage
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.PerPage
      language: CSharp
      name:
        CSharp: PerPage
        VB: PerPage
      nameWithType:
        CSharp: SearchObject.StringParameter.PerPage
        VB: SearchObject.StringParameter.PerPage
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.PerPage
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.PerPage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: PerPage
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: PerPage = 50
          VB: PerPage = 50
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.PhotoLicense
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.PhotoLicense
      language: CSharp
      name:
        CSharp: PhotoLicense
        VB: PhotoLicense
      nameWithType:
        CSharp: SearchObject.StringParameter.PhotoLicense
        VB: SearchObject.StringParameter.PhotoLicense
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.PhotoLicense
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.PhotoLicense
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: PhotoLicense
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: PhotoLicense = 51
          VB: PhotoLicense = 51
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.QualityGrade
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.QualityGrade
      language: CSharp
      name:
        CSharp: QualityGrade
        VB: QualityGrade
      nameWithType:
        CSharp: SearchObject.StringParameter.QualityGrade
        VB: SearchObject.StringParameter.QualityGrade
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.QualityGrade
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.QualityGrade
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: QualityGrade
        path: ''
        startLine: 3653
      syntax:
        content:
          CSharp: QualityGrade = 52
          VB: QualityGrade = 52
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Query
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Query
      language: CSharp
      name:
        CSharp: Query
        VB: Query
      nameWithType:
        CSharp: SearchObject.StringParameter.Query
        VB: SearchObject.StringParameter.Query
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Query
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Query
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Query
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: Query = 53
          VB: Query = 53
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Radius
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Radius
      language: CSharp
      name:
        CSharp: Radius
        VB: Radius
      nameWithType:
        CSharp: SearchObject.StringParameter.Radius
        VB: SearchObject.StringParameter.Radius
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Radius
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Radius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Radius
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: Radius = 54
          VB: Radius = 54
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Reviewed
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Reviewed
      language: CSharp
      name:
        CSharp: Reviewed
        VB: Reviewed
      nameWithType:
        CSharp: SearchObject.StringParameter.Reviewed
        VB: SearchObject.StringParameter.Reviewed
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Reviewed
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Reviewed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Reviewed
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: Reviewed = 55
          VB: Reviewed = 55
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ReviewerId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.ReviewerId
      language: CSharp
      name:
        CSharp: ReviewerId
        VB: ReviewerId
      nameWithType:
        CSharp: SearchObject.StringParameter.ReviewerId
        VB: SearchObject.StringParameter.ReviewerId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ReviewerId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.ReviewerId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: ReviewerId
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: ReviewerId = 56
          VB: ReviewerId = 56
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SearchOnProperty
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.SearchOnProperty
      language: CSharp
      name:
        CSharp: SearchOnProperty
        VB: SearchOnProperty
      nameWithType:
        CSharp: SearchObject.StringParameter.SearchOnProperty
        VB: SearchObject.StringParameter.SearchOnProperty
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SearchOnProperty
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SearchOnProperty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SearchOnProperty
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: SearchOnProperty = 57
          VB: SearchOnProperty = 57
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SortOrder
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.SortOrder
      language: CSharp
      name:
        CSharp: SortOrder
        VB: SortOrder
      nameWithType:
        CSharp: SearchObject.StringParameter.SortOrder
        VB: SearchObject.StringParameter.SortOrder
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SortOrder
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SortOrder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SortOrder
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: SortOrder = 58
          VB: SortOrder = 58
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SoundLicense
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.SoundLicense
      language: CSharp
      name:
        CSharp: SoundLicense
        VB: SoundLicense
      nameWithType:
        CSharp: SearchObject.StringParameter.SoundLicense
        VB: SearchObject.StringParameter.SoundLicense
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SoundLicense
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SoundLicense
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SoundLicense
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: SoundLicense = 59
          VB: SoundLicense = 59
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLatitudeBound
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLatitudeBound
      language: CSharp
      name:
        CSharp: SouthwestLatitudeBound
        VB: SouthwestLatitudeBound
      nameWithType:
        CSharp: SearchObject.StringParameter.SouthwestLatitudeBound
        VB: SearchObject.StringParameter.SouthwestLatitudeBound
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLatitudeBound
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLatitudeBound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SouthwestLatitudeBound
        path: ''
        startLine: 3654
      syntax:
        content:
          CSharp: SouthwestLatitudeBound = 60
          VB: SouthwestLatitudeBound = 60
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLongitudeBound
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLongitudeBound
      language: CSharp
      name:
        CSharp: SouthwestLongitudeBound
        VB: SouthwestLongitudeBound
      nameWithType:
        CSharp: SearchObject.StringParameter.SouthwestLongitudeBound
        VB: SearchObject.StringParameter.SouthwestLongitudeBound
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLongitudeBound
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.SouthwestLongitudeBound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SouthwestLongitudeBound
        path: ''
        startLine: 3655
      syntax:
        content:
          CSharp: SouthwestLongitudeBound = 61
          VB: SouthwestLongitudeBound = 61
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.StartDate
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.StartDate
      language: CSharp
      name:
        CSharp: StartDate
        VB: StartDate
      nameWithType:
        CSharp: SearchObject.StringParameter.StartDate
        VB: SearchObject.StringParameter.StartDate
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.StartDate
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.StartDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: StartDate
        path: ''
        startLine: 3655
      syntax:
        content:
          CSharp: StartDate = 62
          VB: StartDate = 62
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonGeoprivacy
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonGeoprivacy
      language: CSharp
      name:
        CSharp: TaxonGeoprivacy
        VB: TaxonGeoprivacy
      nameWithType:
        CSharp: SearchObject.StringParameter.TaxonGeoprivacy
        VB: SearchObject.StringParameter.TaxonGeoprivacy
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonGeoprivacy
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonGeoprivacy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: TaxonGeoprivacy
        path: ''
        startLine: 3655
      syntax:
        content:
          CSharp: TaxonGeoprivacy = 63
          VB: TaxonGeoprivacy = 63
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonName
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonName
      language: CSharp
      name:
        CSharp: TaxonName
        VB: TaxonName
      nameWithType:
        CSharp: SearchObject.StringParameter.TaxonName
        VB: SearchObject.StringParameter.TaxonName
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonName
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: TaxonName
        path: ''
        startLine: 3655
      syntax:
        content:
          CSharp: TaxonName = 64
          VB: TaxonName = 64
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonRank
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonRank
      language: CSharp
      name:
        CSharp: TaxonRank
        VB: TaxonRank
      nameWithType:
        CSharp: SearchObject.StringParameter.TaxonRank
        VB: SearchObject.StringParameter.TaxonRank
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonRank
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TaxonRank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: TaxonRank
        path: ''
        startLine: 3655
      syntax:
        content:
          CSharp: TaxonRank = 65
          VB: TaxonRank = 65
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TimeToLive
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.TimeToLive
      language: CSharp
      name:
        CSharp: TimeToLive
        VB: TimeToLive
      nameWithType:
        CSharp: SearchObject.StringParameter.TimeToLive
        VB: SearchObject.StringParameter.TimeToLive
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TimeToLive
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.TimeToLive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: TimeToLive
        path: ''
        startLine: 3655
      syntax:
        content:
          CSharp: TimeToLive = 66
          VB: TimeToLive = 66
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UnobservedByUser
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.UnobservedByUser
      language: CSharp
      name:
        CSharp: UnobservedByUser
        VB: UnobservedByUser
      nameWithType:
        CSharp: SearchObject.StringParameter.UnobservedByUser
        VB: SearchObject.StringParameter.UnobservedByUser
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UnobservedByUser
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UnobservedByUser
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UnobservedByUser
        path: ''
        startLine: 3655
      syntax:
        content:
          CSharp: UnobservedByUser = 67
          VB: UnobservedByUser = 67
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserId
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserId
      language: CSharp
      name:
        CSharp: UserId
        VB: UserId
      nameWithType:
        CSharp: SearchObject.StringParameter.UserId
        VB: SearchObject.StringParameter.UserId
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserId
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UserId
        path: ''
        startLine: 3656
      syntax:
        content:
          CSharp: UserId = 68
          VB: UserId = 68
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserLogin
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserLogin
      language: CSharp
      name:
        CSharp: UserLogin
        VB: UserLogin
      nameWithType:
        CSharp: SearchObject.StringParameter.UserLogin
        VB: SearchObject.StringParameter.UserLogin
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserLogin
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.UserLogin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: UserLogin
        path: ''
        startLine: 3656
      syntax:
        content:
          CSharp: UserLogin = 69
          VB: UserLogin = 69
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Year
      commentId: F:JoshAaronMiller.INaturalist.SearchObject.StringParameter.Year
      language: CSharp
      name:
        CSharp: Year
        VB: Year
      nameWithType:
        CSharp: SearchObject.StringParameter.Year
        VB: SearchObject.StringParameter.Year
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Year
        VB: JoshAaronMiller.INaturalist.SearchObject.StringParameter.Year
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: Year
        path: ''
        startLine: 3656
      syntax:
        content:
          CSharp: Year = 70
          VB: Year = 70
        return:
          type: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: JoshAaronMiller.INaturalist.TaxonSearch
    commentId: T:JoshAaronMiller.INaturalist.TaxonSearch
    language: CSharp
    name:
      CSharp: TaxonSearch
      VB: TaxonSearch
    nameWithType:
      CSharp: TaxonSearch
      VB: TaxonSearch
    qualifiedName:
      CSharp: JoshAaronMiller.INaturalist.TaxonSearch
      VB: JoshAaronMiller.INaturalist.TaxonSearch
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JoshAaronMiller.INaturalist
    source:
      id: TaxonSearch
      path: ''
      startLine: 3807
    summary: "\nA TaxonSearch is a set of parameters for searching iNaturalist Taxa.\nUsage: myINatManager.SearchTaxa(myTaxonSearch)\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TaxonSearch : SearchObject'
        VB: >-
          Public Class TaxonSearch

              Inherits SearchObject
    inheritance:
    - System.Object
    - JoshAaronMiller.INaturalist.SearchObject
    inheritedMembers:
    - JoshAaronMiller.INaturalist.SearchObject.boolParams
    - JoshAaronMiller.INaturalist.SearchObject.stringParams
    - JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
    - JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
    - JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
    - JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith(System.String)
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith(System.String)
      language: CSharp
      name:
        CSharp: SetNameBeginsWith(String)
        VB: SetNameBeginsWith(String)
      nameWithType:
        CSharp: TaxonSearch.SetNameBeginsWith(String)
        VB: TaxonSearch.SetNameBeginsWith(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith(System.String)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetNameBeginsWith
        path: ''
        startLine: 3813
      summary: "\nLimit the search to taxa that begin with this substring\n"
      example: []
      syntax:
        content:
          CSharp: public void SetNameBeginsWith(string query)
          VB: Public Sub SetNameBeginsWith(query As String)
        parameters:
        - id: query
          type: System.String
          description: The start of the taxa names
      overload: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds(System.Collections.Generic.List{System.Int32})
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: IncludeIds(List<Int32>)
        VB: IncludeIds(List(Of Int32))
      nameWithType:
        CSharp: TaxonSearch.IncludeIds(List<Int32>)
        VB: TaxonSearch.IncludeIds(List(Of Int32))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds(System.Collections.Generic.List<System.Int32>)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds(System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeIds
        path: ''
        startLine: 3822
      summary: "\nRequire the search to include these IDs.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeIds(List<int> ids)
          VB: Public Sub IncludeIds(ids As List(Of Integer))
        parameters:
        - id: ids
          type: System.Collections.Generic.List{System.Int32}
          description: IDs to include
      overload: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.SetParentId(System.Int32)
      language: CSharp
      name:
        CSharp: SetParentId(Int32)
        VB: SetParentId(Int32)
      nameWithType:
        CSharp: TaxonSearch.SetParentId(Int32)
        VB: TaxonSearch.SetParentId(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId(System.Int32)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetParentId
        path: ''
        startLine: 3831
      summary: "\nLimit the search to children of this taxon ID.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetParentId(int parentId)
          VB: Public Sub SetParentId(parentId As Integer)
        parameters:
        - id: parentId
          type: System.Int32
          description: The parent taxon&apos;s ID
      overload: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks(System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank})
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks(System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank})
      language: CSharp
      name:
        CSharp: IncludeTaxonRanks(List<TaxonRank>)
        VB: IncludeTaxonRanks(List(Of TaxonRank))
      nameWithType:
        CSharp: TaxonSearch.IncludeTaxonRanks(List<TaxonRank>)
        VB: TaxonSearch.IncludeTaxonRanks(List(Of TaxonRank))
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks(System.Collections.Generic.List<JoshAaronMiller.INaturalist.TaxonRank>)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks(System.Collections.Generic.List(Of JoshAaronMiller.INaturalist.TaxonRank))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: IncludeTaxonRanks
        path: ''
        startLine: 3840
      summary: "\nLimit the search to taxa of these ranks.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncludeTaxonRanks(List<TaxonRank> ranks)
          VB: Public Sub IncludeTaxonRanks(ranks As List(Of TaxonRank))
        parameters:
        - id: ranks
          type: System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank}
          description: The list of taxon ranks to include in the search.
      overload: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel(JoshAaronMiller.INaturalist.TaxonRankLevel)
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel(JoshAaronMiller.INaturalist.TaxonRankLevel)
      language: CSharp
      name:
        CSharp: SetTaxonRankLevel(TaxonRankLevel)
        VB: SetTaxonRankLevel(TaxonRankLevel)
      nameWithType:
        CSharp: TaxonSearch.SetTaxonRankLevel(TaxonRankLevel)
        VB: TaxonSearch.SetTaxonRankLevel(TaxonRankLevel)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel(JoshAaronMiller.INaturalist.TaxonRankLevel)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel(JoshAaronMiller.INaturalist.TaxonRankLevel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetTaxonRankLevel
        path: ''
        startLine: 3849
      summary: "\nLimit the search to taxa of this rank level.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTaxonRankLevel(TaxonRankLevel rankLevel)
          VB: Public Sub SetTaxonRankLevel(rankLevel As TaxonRankLevel)
        parameters:
        - id: rankLevel
          type: JoshAaronMiller.INaturalist.TaxonRankLevel
          description: The rank level to limit the search to.
      overload: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits(System.Int32,System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetTaxonIdLimits(Int32, Int32)
        VB: SetTaxonIdLimits(Int32, Int32)
      nameWithType:
        CSharp: TaxonSearch.SetTaxonIdLimits(Int32, Int32)
        VB: TaxonSearch.SetTaxonIdLimits(Int32, Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits(System.Int32, System.Int32)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetTaxonIdLimits
        path: ''
        startLine: 3863
      summary: "\nLimit the search to taxa with IDs within this range. Both min and max are optional.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTaxonIdLimits(int min = -1, int max = -1)
          VB: Public Sub SetTaxonIdLimits(min As Integer = -1, max As Integer = -1)
        parameters:
        - id: min
          type: System.Int32
          description: Include this ID and higher.
        - id: max
          type: System.Int32
          description: Include this ID and lower.
      overload: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination(System.Int32,System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.SetPagination(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetPagination(Int32, Int32)
        VB: SetPagination(Int32, Int32)
      nameWithType:
        CSharp: TaxonSearch.SetPagination(Int32, Int32)
        VB: TaxonSearch.SetPagination(Int32, Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination(System.Int32, System.Int32)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetPagination
        path: ''
        startLine: 3880
      summary: "\nSet the number of search results per page and which page to receive. For example, SetPagination(50,2) would return results 51-100.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPagination(int resultsPerPage = 30, int page = 1)
          VB: Public Sub SetPagination(resultsPerPage As Integer = 30, page As Integer = 1)
        parameters:
        - id: resultsPerPage
          type: System.Int32
          description: How many results to return per page (default 30).
        - id: page
          type: System.Int32
          description: Which page of results to return (default 1).
      overload: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference(System.String)
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference(System.String)
      language: CSharp
      name:
        CSharp: SetLocalePreference(String)
        VB: SetLocalePreference(String)
      nameWithType:
        CSharp: TaxonSearch.SetLocalePreference(String)
        VB: TaxonSearch.SetLocalePreference(String)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference(System.String)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetLocalePreference
        path: ''
        startLine: 3894
      summary: "\nSet the locale preference for taxon common names.\n"
      remarks: "\nI&apos;m not really sure what a valid input looks like.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetLocalePreference(string locale)
          VB: Public Sub SetLocalePreference(locale As String)
        parameters:
        - id: locale
          type: System.String
          description: The locale preference.
      overload: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId(System.Int32)
      commentId: M:JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId(System.Int32)
      language: CSharp
      name:
        CSharp: SetPreferredPlaceId(Int32)
        VB: SetPreferredPlaceId(Int32)
      nameWithType:
        CSharp: TaxonSearch.SetPreferredPlaceId(Int32)
        VB: TaxonSearch.SetPreferredPlaceId(Int32)
      qualifiedName:
        CSharp: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId(System.Int32)
        VB: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JoshAaronMiller.INaturalist
      source:
        id: SetPreferredPlaceId
        path: ''
        startLine: 3906
      summary: "\nSet a place preference for regional taxon common names.\n"
      remarks: "\nI think this means that taxon common names will be based on the place specified.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPreferredPlaceId(int placeId)
          VB: Public Sub SetPreferredPlaceId(placeId As Integer)
        parameters:
        - id: placeId
          type: System.Int32
          description: The place ID of the preference.
      overload: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Global.Demo.CitySelectDropdownCallback*:
    name:
      CSharp:
      - id: Global.Demo.CitySelectDropdownCallback*
        name: CitySelectDropdownCallback
        nameWithType: Demo.CitySelectDropdownCallback
        qualifiedName: Demo.CitySelectDropdownCallback
      VB:
      - id: Global.Demo.CitySelectDropdownCallback*
        name: CitySelectDropdownCallback
        nameWithType: Demo.CitySelectDropdownCallback
        qualifiedName: Demo.CitySelectDropdownCallback
    isDefinition: true
    commentId: Overload:Global.Demo.CitySelectDropdownCallback
  Global.Demo.TaxonSelectDropdownCallback*:
    name:
      CSharp:
      - id: Global.Demo.TaxonSelectDropdownCallback*
        name: TaxonSelectDropdownCallback
        nameWithType: Demo.TaxonSelectDropdownCallback
        qualifiedName: Demo.TaxonSelectDropdownCallback
      VB:
      - id: Global.Demo.TaxonSelectDropdownCallback*
        name: TaxonSelectDropdownCallback
        nameWithType: Demo.TaxonSelectDropdownCallback
        qualifiedName: Demo.TaxonSelectDropdownCallback
    isDefinition: true
    commentId: Overload:Global.Demo.TaxonSelectDropdownCallback
  Global.Demo.YearSelectDropdownCallback*:
    name:
      CSharp:
      - id: Global.Demo.YearSelectDropdownCallback*
        name: YearSelectDropdownCallback
        nameWithType: Demo.YearSelectDropdownCallback
        qualifiedName: Demo.YearSelectDropdownCallback
      VB:
      - id: Global.Demo.YearSelectDropdownCallback*
        name: YearSelectDropdownCallback
        nameWithType: Demo.YearSelectDropdownCallback
        qualifiedName: Demo.YearSelectDropdownCallback
    isDefinition: true
    commentId: Overload:Global.Demo.YearSelectDropdownCallback
  Global.Demo.QualityGradeSelectDropdownCallback*:
    name:
      CSharp:
      - id: Global.Demo.QualityGradeSelectDropdownCallback*
        name: QualityGradeSelectDropdownCallback
        nameWithType: Demo.QualityGradeSelectDropdownCallback
        qualifiedName: Demo.QualityGradeSelectDropdownCallback
      VB:
      - id: Global.Demo.QualityGradeSelectDropdownCallback*
        name: QualityGradeSelectDropdownCallback
        nameWithType: Demo.QualityGradeSelectDropdownCallback
        qualifiedName: Demo.QualityGradeSelectDropdownCallback
    isDefinition: true
    commentId: Overload:Global.Demo.QualityGradeSelectDropdownCallback
  Global.Demo.ToggleThreatened*:
    name:
      CSharp:
      - id: Global.Demo.ToggleThreatened*
        name: ToggleThreatened
        nameWithType: Demo.ToggleThreatened
        qualifiedName: Demo.ToggleThreatened
      VB:
      - id: Global.Demo.ToggleThreatened*
        name: ToggleThreatened
        nameWithType: Demo.ToggleThreatened
        qualifiedName: Demo.ToggleThreatened
    isDefinition: true
    commentId: Overload:Global.Demo.ToggleThreatened
  Global.Demo.ToggleCaptive*:
    name:
      CSharp:
      - id: Global.Demo.ToggleCaptive*
        name: ToggleCaptive
        nameWithType: Demo.ToggleCaptive
        qualifiedName: Demo.ToggleCaptive
      VB:
      - id: Global.Demo.ToggleCaptive*
        name: ToggleCaptive
        nameWithType: Demo.ToggleCaptive
        qualifiedName: Demo.ToggleCaptive
    isDefinition: true
    commentId: Overload:Global.Demo.ToggleCaptive
  Global.Demo.TogglePublicDomain*:
    name:
      CSharp:
      - id: Global.Demo.TogglePublicDomain*
        name: TogglePublicDomain
        nameWithType: Demo.TogglePublicDomain
        qualifiedName: Demo.TogglePublicDomain
      VB:
      - id: Global.Demo.TogglePublicDomain*
        name: TogglePublicDomain
        nameWithType: Demo.TogglePublicDomain
        qualifiedName: Demo.TogglePublicDomain
    isDefinition: true
    commentId: Overload:Global.Demo.TogglePublicDomain
  Global.Demo.ToggleSpeciesSpecific*:
    name:
      CSharp:
      - id: Global.Demo.ToggleSpeciesSpecific*
        name: ToggleSpeciesSpecific
        nameWithType: Demo.ToggleSpeciesSpecific
        qualifiedName: Demo.ToggleSpeciesSpecific
      VB:
      - id: Global.Demo.ToggleSpeciesSpecific*
        name: ToggleSpeciesSpecific
        nameWithType: Demo.ToggleSpeciesSpecific
        qualifiedName: Demo.ToggleSpeciesSpecific
    isDefinition: true
    commentId: Overload:Global.Demo.ToggleSpeciesSpecific
  Global.Demo.DoSearch*:
    name:
      CSharp:
      - id: Global.Demo.DoSearch*
        name: DoSearch
        nameWithType: Demo.DoSearch
        qualifiedName: Demo.DoSearch
      VB:
      - id: Global.Demo.DoSearch*
        name: DoSearch
        nameWithType: Demo.DoSearch
        qualifiedName: Demo.DoSearch
    isDefinition: true
    commentId: Overload:Global.Demo.DoSearch
  JoshAaronMiller.INaturalist:
    name:
      CSharp:
      - name: JoshAaronMiller.INaturalist
        nameWithType: JoshAaronMiller.INaturalist
        qualifiedName: JoshAaronMiller.INaturalist
      VB:
      - name: JoshAaronMiller.INaturalist
        nameWithType: JoshAaronMiller.INaturalist
        qualifiedName: JoshAaronMiller.INaturalist
    isDefinition: true
    commentId: N:JoshAaronMiller.INaturalist
  JoshAaronMiller.INaturalist.Error:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
      VB:
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.Error
  Global.Demo.HandleError*:
    name:
      CSharp:
      - id: Global.Demo.HandleError*
        name: HandleError
        nameWithType: Demo.HandleError
        qualifiedName: Demo.HandleError
      VB:
      - id: Global.Demo.HandleError*
        name: HandleError
        nameWithType: Demo.HandleError
        qualifiedName: Demo.HandleError
    isDefinition: true
    commentId: Overload:Global.Demo.HandleError
  Global.Demo.ClickLoginButton*:
    name:
      CSharp:
      - id: Global.Demo.ClickLoginButton*
        name: ClickLoginButton
        nameWithType: Demo.ClickLoginButton
        qualifiedName: Demo.ClickLoginButton
      VB:
      - id: Global.Demo.ClickLoginButton*
        name: ClickLoginButton
        nameWithType: Demo.ClickLoginButton
        qualifiedName: Demo.ClickLoginButton
    isDefinition: true
    commentId: Overload:Global.Demo.ClickLoginButton
  Global.Demo.CheckApiToken*:
    name:
      CSharp:
      - id: Global.Demo.CheckApiToken*
        name: CheckApiToken
        nameWithType: Demo.CheckApiToken
        qualifiedName: Demo.CheckApiToken
      VB:
      - id: Global.Demo.CheckApiToken*
        name: CheckApiToken
        nameWithType: Demo.CheckApiToken
        qualifiedName: Demo.CheckApiToken
    isDefinition: true
    commentId: Overload:Global.Demo.CheckApiToken
  JoshAaronMiller.INaturalist.User:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
      VB:
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.User
  Global.Demo.SetUser*:
    name:
      CSharp:
      - id: Global.Demo.SetUser*
        name: SetUser
        nameWithType: Demo.SetUser
        qualifiedName: Demo.SetUser
      VB:
      - id: Global.Demo.SetUser*
        name: SetUser
        nameWithType: Demo.SetUser
        qualifiedName: Demo.SetUser
    isDefinition: true
    commentId: Overload:Global.Demo.SetUser
  Global.Demo.SetUserError*:
    name:
      CSharp:
      - id: Global.Demo.SetUserError*
        name: SetUserError
        nameWithType: Demo.SetUserError
        qualifiedName: Demo.SetUserError
      VB:
      - id: Global.Demo.SetUserError*
        name: SetUserError
        nameWithType: Demo.SetUserError
        qualifiedName: Demo.SetUserError
    isDefinition: true
    commentId: Overload:Global.Demo.SetUserError
  Global.Demo.MoveCarouselLeft*:
    name:
      CSharp:
      - id: Global.Demo.MoveCarouselLeft*
        name: MoveCarouselLeft
        nameWithType: Demo.MoveCarouselLeft
        qualifiedName: Demo.MoveCarouselLeft
      VB:
      - id: Global.Demo.MoveCarouselLeft*
        name: MoveCarouselLeft
        nameWithType: Demo.MoveCarouselLeft
        qualifiedName: Demo.MoveCarouselLeft
    isDefinition: true
    commentId: Overload:Global.Demo.MoveCarouselLeft
  Global.Demo.MoveCarouselRight*:
    name:
      CSharp:
      - id: Global.Demo.MoveCarouselRight*
        name: MoveCarouselRight
        nameWithType: Demo.MoveCarouselRight
        qualifiedName: Demo.MoveCarouselRight
      VB:
      - id: Global.Demo.MoveCarouselRight*
        name: MoveCarouselRight
        nameWithType: Demo.MoveCarouselRight
        qualifiedName: Demo.MoveCarouselRight
    isDefinition: true
    commentId: Overload:Global.Demo.MoveCarouselRight
  Global.Demo.TryShowVotingButtons*:
    name:
      CSharp:
      - id: Global.Demo.TryShowVotingButtons*
        name: TryShowVotingButtons
        nameWithType: Demo.TryShowVotingButtons
        qualifiedName: Demo.TryShowVotingButtons
      VB:
      - id: Global.Demo.TryShowVotingButtons*
        name: TryShowVotingButtons
        nameWithType: Demo.TryShowVotingButtons
        qualifiedName: Demo.TryShowVotingButtons
    isDefinition: true
    commentId: Overload:Global.Demo.TryShowVotingButtons
  Global.Demo.VoteOptionOne*:
    name:
      CSharp:
      - id: Global.Demo.VoteOptionOne*
        name: VoteOptionOne
        nameWithType: Demo.VoteOptionOne
        qualifiedName: Demo.VoteOptionOne
      VB:
      - id: Global.Demo.VoteOptionOne*
        name: VoteOptionOne
        nameWithType: Demo.VoteOptionOne
        qualifiedName: Demo.VoteOptionOne
    isDefinition: true
    commentId: Overload:Global.Demo.VoteOptionOne
  Global.Demo.VoteOptionTwo*:
    name:
      CSharp:
      - id: Global.Demo.VoteOptionTwo*
        name: VoteOptionTwo
        nameWithType: Demo.VoteOptionTwo
        qualifiedName: Demo.VoteOptionTwo
      VB:
      - id: Global.Demo.VoteOptionTwo*
        name: VoteOptionTwo
        nameWithType: Demo.VoteOptionTwo
        qualifiedName: Demo.VoteOptionTwo
    isDefinition: true
    commentId: Overload:Global.Demo.VoteOptionTwo
  JoshAaronMiller.INaturalist.Identification:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      VB:
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.Identification
  Global.Demo.CreateIdentificationCallback*:
    name:
      CSharp:
      - id: Global.Demo.CreateIdentificationCallback*
        name: CreateIdentificationCallback
        nameWithType: Demo.CreateIdentificationCallback
        qualifiedName: Demo.CreateIdentificationCallback
      VB:
      - id: Global.Demo.CreateIdentificationCallback*
        name: CreateIdentificationCallback
        nameWithType: Demo.CreateIdentificationCallback
        qualifiedName: Demo.CreateIdentificationCallback
    isDefinition: true
    commentId: Overload:Global.Demo.CreateIdentificationCallback
  Global.Demo.RemoveObservation*:
    name:
      CSharp:
      - id: Global.Demo.RemoveObservation*
        name: RemoveObservation
        nameWithType: Demo.RemoveObservation
        qualifiedName: Demo.RemoveObservation
      VB:
      - id: Global.Demo.RemoveObservation*
        name: RemoveObservation
        nameWithType: Demo.RemoveObservation
        qualifiedName: Demo.RemoveObservation
    isDefinition: true
    commentId: Overload:Global.Demo.RemoveObservation
  Global.Demo.RemoveLoading*:
    name:
      CSharp:
      - id: Global.Demo.RemoveLoading*
        name: RemoveLoading
        nameWithType: Demo.RemoveLoading
        qualifiedName: Demo.RemoveLoading
      VB:
      - id: Global.Demo.RemoveLoading*
        name: RemoveLoading
        nameWithType: Demo.RemoveLoading
        qualifiedName: Demo.RemoveLoading
    isDefinition: true
    commentId: Overload:Global.Demo.RemoveLoading
  Global.Demo:
    name:
      CSharp:
      - id: Global.Demo
        name: Demo
        nameWithType: Demo
        qualifiedName: Demo
      VB:
      - id: Global.Demo
        name: Demo
        nameWithType: Demo
        qualifiedName: Demo
    isDefinition: true
    commentId: T:Global.Demo
  Global:
    name:
      CSharp:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
      VB:
      - name: ''
        nameWithType: ''
        qualifiedName: ''
    isDefinition: true
  JoshAaronMiller.INaturalist.TaxonRank:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonRank
        name: TaxonRank
        nameWithType: TaxonRank
        qualifiedName: JoshAaronMiller.INaturalist.TaxonRank
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonRank
        name: TaxonRank
        nameWithType: TaxonRank
        qualifiedName: JoshAaronMiller.INaturalist.TaxonRank
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.TaxonRank
  JoshAaronMiller.INaturalist.QualityGrade:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.QualityGrade
        name: QualityGrade
        nameWithType: QualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.QualityGrade
      VB:
      - id: JoshAaronMiller.INaturalist.QualityGrade
        name: QualityGrade
        nameWithType: QualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.QualityGrade
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.QualityGrade
  JoshAaronMiller.INaturalist.OrderBy:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.OrderBy
        name: OrderBy
        nameWithType: OrderBy
        qualifiedName: JoshAaronMiller.INaturalist.OrderBy
      VB:
      - id: JoshAaronMiller.INaturalist.OrderBy
        name: OrderBy
        nameWithType: OrderBy
        qualifiedName: JoshAaronMiller.INaturalist.OrderBy
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.OrderBy
  JoshAaronMiller.INaturalist.SortOrder:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SortOrder
        name: SortOrder
        nameWithType: SortOrder
        qualifiedName: JoshAaronMiller.INaturalist.SortOrder
      VB:
      - id: JoshAaronMiller.INaturalist.SortOrder
        name: SortOrder
        nameWithType: SortOrder
        qualifiedName: JoshAaronMiller.INaturalist.SortOrder
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.SortOrder
  JoshAaronMiller.INaturalist.TaxonRankLevel:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonRankLevel
        name: TaxonRankLevel
        nameWithType: TaxonRankLevel
        qualifiedName: JoshAaronMiller.INaturalist.TaxonRankLevel
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonRankLevel
        name: TaxonRankLevel
        nameWithType: TaxonRankLevel
        qualifiedName: JoshAaronMiller.INaturalist.TaxonRankLevel
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.TaxonRankLevel
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.QualityGrade,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.QualityGrade
        name: QualityGrade
        nameWithType: QualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.QualityGrade
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.QualityGrade
        name: QualityGrade
        nameWithType: QualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.QualityGrade
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.QualityGrade,System.String}
  System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.OrderBy,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.OrderBy
        name: OrderBy
        nameWithType: OrderBy
        qualifiedName: JoshAaronMiller.INaturalist.OrderBy
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.OrderBy
        name: OrderBy
        nameWithType: OrderBy
        qualifiedName: JoshAaronMiller.INaturalist.OrderBy
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.OrderBy,System.String}
  JoshAaronMiller.INaturalist.Enums:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Enums
        name: Enums
        nameWithType: Enums
        qualifiedName: JoshAaronMiller.INaturalist.Enums
      VB:
      - id: JoshAaronMiller.INaturalist.Enums
        name: Enums
        nameWithType: Enums
        qualifiedName: JoshAaronMiller.INaturalist.Enums
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Enums
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  JoshAaronMiller.INaturalist.INatManager.GetApiToken*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetApiToken*
        name: GetApiToken
        nameWithType: INatManager.GetApiToken
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetApiToken
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetApiToken*
        name: GetApiToken
        nameWithType: INatManager.GetApiToken
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetApiToken
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetApiToken
  JoshAaronMiller.INaturalist.INatManager.SetApiToken*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.SetApiToken*
        name: SetApiToken
        nameWithType: INatManager.SetApiToken
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SetApiToken
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.SetApiToken*
        name: SetApiToken
        nameWithType: INatManager.SetApiToken
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SetApiToken
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.SetApiToken
  Global.Action`1:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.ControlledTerm}}'
  Global.Action{JoshAaronMiller.INaturalist.Error}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Error}'
  JoshAaronMiller.INaturalist.INatManager.GetTermsIndex*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex*
        name: GetTermsIndex
        nameWithType: INatManager.GetTermsIndex
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex*
        name: GetTermsIndex
        nameWithType: INatManager.GetTermsIndex
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetTermsIndex
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetTermsIndex
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon*
        name: GetTermsForTaxon
        nameWithType: INatManager.GetTermsForTaxon
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon*
        name: GetTermsForTaxon
        nameWithType: INatManager.GetTermsForTaxon
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetTermsForTaxon
  JoshAaronMiller.INaturalist.WrappedFlag:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.WrappedFlag
        name: WrappedFlag
        nameWithType: WrappedFlag
        qualifiedName: JoshAaronMiller.INaturalist.WrappedFlag
      VB:
      - id: JoshAaronMiller.INaturalist.WrappedFlag
        name: WrappedFlag
        nameWithType: WrappedFlag
        qualifiedName: JoshAaronMiller.INaturalist.WrappedFlag
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.WrappedFlag
  Global.Action{JoshAaronMiller.INaturalist.Identification}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Identification}'
  JoshAaronMiller.INaturalist.INatManager.CreateFlag*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateFlag*
        name: CreateFlag
        nameWithType: INatManager.CreateFlag
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateFlag
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateFlag*
        name: CreateFlag
        nameWithType: INatManager.CreateFlag
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateFlag
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.CreateFlag
  Global.Action:
    name:
      CSharp:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  JoshAaronMiller.INaturalist.INatManager.DeleteFlag*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteFlag*
        name: DeleteFlag
        nameWithType: INatManager.DeleteFlag
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteFlag
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteFlag*
        name: DeleteFlag
        nameWithType: INatManager.DeleteFlag
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteFlag
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.DeleteFlag
  JoshAaronMiller.INaturalist.INatManager.UpdateFlag*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateFlag*
        name: UpdateFlag
        nameWithType: INatManager.UpdateFlag
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateFlag
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateFlag*
        name: UpdateFlag
        nameWithType: INatManager.UpdateFlag
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateFlag
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.UpdateFlag
  Global.Action{System.String}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.String}'
  JoshAaronMiller.INaturalist.INatManager.DeleteIdentification*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification*
        name: DeleteIdentification
        nameWithType: INatManager.DeleteIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification*
        name: DeleteIdentification
        nameWithType: INatManager.DeleteIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteIdentification
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.DeleteIdentification
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Identification}}'
  JoshAaronMiller.INaturalist.INatManager.GetIdentifications*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentifications*
        name: GetIdentifications
        nameWithType: INatManager.GetIdentifications
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentifications
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentifications*
        name: GetIdentifications
        nameWithType: INatManager.GetIdentifications
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentifications
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetIdentifications
  JoshAaronMiller.INaturalist.INatManager.GetIdentification*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentification*
        name: GetIdentification
        nameWithType: INatManager.GetIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentification
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentification*
        name: GetIdentification
        nameWithType: INatManager.GetIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentification
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetIdentification
  JoshAaronMiller.INaturalist.IdentificationSubmission:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSubmission
        name: IdentificationSubmission
        nameWithType: IdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSubmission
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSubmission
        name: IdentificationSubmission
        nameWithType: IdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSubmission
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.IdentificationSubmission
  JoshAaronMiller.INaturalist.INatManager.UpdateIdentification*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification*
        name: UpdateIdentification
        nameWithType: INatManager.UpdateIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification*
        name: UpdateIdentification
        nameWithType: INatManager.UpdateIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateIdentification
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.UpdateIdentification
  JoshAaronMiller.INaturalist.IdentificationSearch:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch
        name: IdentificationSearch
        nameWithType: IdentificationSearch
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch
        name: IdentificationSearch
        nameWithType: IdentificationSearch
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.IdentificationSearch
  JoshAaronMiller.INaturalist.INatManager.SearchIdentifications*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications*
        name: SearchIdentifications
        nameWithType: INatManager.SearchIdentifications
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications*
        name: SearchIdentifications
        nameWithType: INatManager.SearchIdentifications
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchIdentifications
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.SearchIdentifications
  JoshAaronMiller.INaturalist.INatManager.CreateIdentification*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateIdentification*
        name: CreateIdentification
        nameWithType: INatManager.CreateIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateIdentification
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateIdentification*
        name: CreateIdentification
        nameWithType: INatManager.CreateIdentification
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateIdentification
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.CreateIdentification
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.IdentificationCategoryCount}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.IdentificationCategoryCount}}'
  JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories*
        name: GetIdentificationCategories
        nameWithType: INatManager.GetIdentificationCategories
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories*
        name: GetIdentificationCategories
        nameWithType: INatManager.GetIdentificationCategories
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetIdentificationCategories
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.SpeciesCount}}'
  JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts*
        name: GetIdentificationSpeciesCounts
        nameWithType: INatManager.GetIdentificationSpeciesCounts
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts*
        name: GetIdentificationSpeciesCounts
        nameWithType: INatManager.GetIdentificationSpeciesCounts
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetIdentificationSpeciesCounts
  JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies*
        name: GetSimilarSpecies
        nameWithType: INatManager.GetSimilarSpecies
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies*
        name: GetSimilarSpecies
        nameWithType: INatManager.GetSimilarSpecies
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetSimilarSpecies
  JoshAaronMiller.INaturalist.ObservationSearch:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch
        name: ObservationSearch
        nameWithType: ObservationSearch
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch
        name: ObservationSearch
        nameWithType: ObservationSearch
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch
  JoshAaronMiller.INaturalist.MessageSearch:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.MessageSearch
        name: MessageSearch
        nameWithType: MessageSearch
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch
      VB:
      - id: JoshAaronMiller.INaturalist.MessageSearch
        name: MessageSearch
        nameWithType: MessageSearch
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.MessageSearch
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.UserMessage}}'
  JoshAaronMiller.INaturalist.INatManager.SearchUserMessages*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages*
        name: SearchUserMessages
        nameWithType: INatManager.SearchUserMessages
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages*
        name: SearchUserMessages
        nameWithType: INatManager.SearchUserMessages
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchUserMessages
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.SearchUserMessages
  JoshAaronMiller.INaturalist.UserMessage:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      VB:
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.UserMessage
  Global.Action{JoshAaronMiller.INaturalist.UserMessage}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.UserMessage}'
  JoshAaronMiller.INaturalist.INatManager.CreateUserMessage*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage*
        name: CreateUserMessage
        nameWithType: INatManager.CreateUserMessage
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage*
        name: CreateUserMessage
        nameWithType: INatManager.CreateUserMessage
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateUserMessage
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.CreateUserMessage
  JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread*
        name: DeleteUserMessageThread
        nameWithType: INatManager.DeleteUserMessageThread
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread*
        name: DeleteUserMessageThread
        nameWithType: INatManager.DeleteUserMessageThread
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.DeleteUserMessageThread
  JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread*
        name: GetUserMessageThread
        nameWithType: INatManager.GetUserMessageThread
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread*
        name: GetUserMessageThread
        nameWithType: INatManager.GetUserMessageThread
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetUserMessageThread
  Global.Action{JoshAaronMiller.INaturalist.Count}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Count}'
  JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages*
        name: GetCountUnreadMessages
        nameWithType: INatManager.GetCountUnreadMessages
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages*
        name: GetCountUnreadMessages
        nameWithType: INatManager.GetCountUnreadMessages
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetCountUnreadMessages
  JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto*
        name: DeleteObservationPhoto
        nameWithType: INatManager.DeleteObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto*
        name: DeleteObservationPhoto
        nameWithType: INatManager.DeleteObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.DeleteObservationPhoto
  JoshAaronMiller.INaturalist.PhotoFile:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.PhotoFile
        name: PhotoFile
        nameWithType: PhotoFile
        qualifiedName: JoshAaronMiller.INaturalist.PhotoFile
      VB:
      - id: JoshAaronMiller.INaturalist.PhotoFile
        name: PhotoFile
        nameWithType: PhotoFile
        qualifiedName: JoshAaronMiller.INaturalist.PhotoFile
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.PhotoFile
  Global.Action{JoshAaronMiller.INaturalist.ObservationPhoto}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.ObservationPhoto}'
  JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto*
        name: UpdateObservationPhoto
        nameWithType: INatManager.UpdateObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto*
        name: UpdateObservationPhoto
        nameWithType: INatManager.UpdateObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.UpdateObservationPhoto
  JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto*
        name: CreateObservationPhoto
        nameWithType: INatManager.CreateObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto*
        name: CreateObservationPhoto
        nameWithType: INatManager.CreateObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.CreateObservationPhoto
  JoshAaronMiller.INaturalist.INatManager.DeleteObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteObservation*
        name: DeleteObservation
        nameWithType: INatManager.DeleteObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.DeleteObservation*
        name: DeleteObservation
        nameWithType: INatManager.DeleteObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.DeleteObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.DeleteObservation
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Observation}}'
  JoshAaronMiller.INaturalist.INatManager.GetObservations*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservations*
        name: GetObservations
        nameWithType: INatManager.GetObservations
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservations
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservations*
        name: GetObservations
        nameWithType: INatManager.GetObservations
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservations
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetObservations
  Global.Action{JoshAaronMiller.INaturalist.Observation}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Observation}'
  JoshAaronMiller.INaturalist.INatManager.GetObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservation*
        name: GetObservation
        nameWithType: INatManager.GetObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservation*
        name: GetObservation
        nameWithType: INatManager.GetObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetObservation
  JoshAaronMiller.INaturalist.ObservationSubmission:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSubmission
        name: ObservationSubmission
        nameWithType: ObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSubmission
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSubmission
        name: ObservationSubmission
        nameWithType: ObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSubmission
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSubmission
  JoshAaronMiller.INaturalist.INatManager.UpdateObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateObservation*
        name: UpdateObservation
        nameWithType: INatManager.UpdateObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.UpdateObservation*
        name: UpdateObservation
        nameWithType: INatManager.UpdateObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UpdateObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.UpdateObservation
  JoshAaronMiller.INaturalist.INatManager.FaveObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.FaveObservation*
        name: FaveObservation
        nameWithType: INatManager.FaveObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.FaveObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.FaveObservation*
        name: FaveObservation
        nameWithType: INatManager.FaveObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.FaveObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.FaveObservation
  JoshAaronMiller.INaturalist.INatManager.UnfaveObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation*
        name: UnfaveObservation
        nameWithType: INatManager.UnfaveObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation*
        name: UnfaveObservation
        nameWithType: INatManager.UnfaveObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UnfaveObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.UnfaveObservation
  JoshAaronMiller.INaturalist.INatManager.ReviewObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.ReviewObservation*
        name: ReviewObservation
        nameWithType: INatManager.ReviewObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.ReviewObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.ReviewObservation*
        name: ReviewObservation
        nameWithType: INatManager.ReviewObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.ReviewObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.ReviewObservation
  JoshAaronMiller.INaturalist.INatManager.UnreviewObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation*
        name: UnreviewObservation
        nameWithType: INatManager.UnreviewObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation*
        name: UnreviewObservation
        nameWithType: INatManager.UnreviewObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UnreviewObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.UnreviewObservation
  Global.Action{JoshAaronMiller.INaturalist.TaxonSummary}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.TaxonSummary}'
  JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary*
        name: GetObservationTaxonSummary
        nameWithType: INatManager.GetObservationTaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary*
        name: GetObservationTaxonSummary
        nameWithType: INatManager.GetObservationTaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetObservationTaxonSummary
  JoshAaronMiller.INaturalist.Vote:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Vote
        name: Vote
        nameWithType: Vote
        qualifiedName: JoshAaronMiller.INaturalist.Vote
      VB:
      - id: JoshAaronMiller.INaturalist.Vote
        name: Vote
        nameWithType: Vote
        qualifiedName: JoshAaronMiller.INaturalist.Vote
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.Vote
  JoshAaronMiller.INaturalist.INatManager.VoteObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.VoteObservation*
        name: VoteObservation
        nameWithType: INatManager.VoteObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.VoteObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.VoteObservation*
        name: VoteObservation
        nameWithType: INatManager.VoteObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.VoteObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.VoteObservation
  JoshAaronMiller.INaturalist.INatManager.UnvoteObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation*
        name: UnvoteObservation
        nameWithType: INatManager.UnvoteObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation*
        name: UnvoteObservation
        nameWithType: INatManager.UnvoteObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.UnvoteObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.UnvoteObservation
  JoshAaronMiller.INaturalist.INatManager.SearchObservations*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchObservations*
        name: SearchObservations
        nameWithType: INatManager.SearchObservations
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchObservations
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchObservations*
        name: SearchObservations
        nameWithType: INatManager.SearchObservations
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchObservations
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.SearchObservations
  JoshAaronMiller.INaturalist.INatManager.CreateObservation*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateObservation*
        name: CreateObservation
        nameWithType: INatManager.CreateObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateObservation
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.CreateObservation*
        name: CreateObservation
        nameWithType: INatManager.CreateObservation
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreateObservation
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.CreateObservation
  JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts*
        name: GetObservationSpeciesCounts
        nameWithType: INatManager.GetObservationSpeciesCounts
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts*
        name: GetObservationSpeciesCounts
        nameWithType: INatManager.GetObservationSpeciesCounts
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetObservationSpeciesCounts
  Global.Action{JoshAaronMiller.INaturalist.Place}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Place}'
  JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
        name: INatManager.PlaceAdminLevel
        nameWithType: INatManager.PlaceAdminLevel
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
        name: INatManager.PlaceAdminLevel
        nameWithType: INatManager.PlaceAdminLevel
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.INatManager.PlaceAdminLevel
  JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails*
        name: GetPlaceDetails
        nameWithType: INatManager.GetPlaceDetails
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails*
        name: GetPlaceDetails
        nameWithType: INatManager.GetPlaceDetails
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetPlaceDetails
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Place}}'
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete*
        name: GetPlacesAutocomplete
        nameWithType: INatManager.GetPlacesAutocomplete
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete*
        name: GetPlacesAutocomplete
        nameWithType: INatManager.GetPlacesAutocomplete
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetPlacesAutocomplete
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  Global.Action{JoshAaronMiller.INaturalist.PlacesByCuration}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.PlacesByCuration}'
  JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby*
        name: GetPlacesNearby
        nameWithType: INatManager.GetPlacesNearby
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby*
        name: GetPlacesNearby
        nameWithType: INatManager.GetPlacesNearby
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetPlacesNearby
  Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Results{JoshAaronMiller.INaturalist.Taxon}}'
  JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails*
        name: GetTaxonDetails
        nameWithType: INatManager.GetTaxonDetails
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails*
        name: GetTaxonDetails
        nameWithType: INatManager.GetTaxonDetails
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetTaxonDetails
  Global.Action{JoshAaronMiller.INaturalist.Taxon}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.Taxon}'
  JoshAaronMiller.INaturalist.TaxonSearch:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch
        name: TaxonSearch
        nameWithType: TaxonSearch
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch
        name: TaxonSearch
        nameWithType: TaxonSearch
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.TaxonSearch
  JoshAaronMiller.INaturalist.INatManager.SearchTaxa*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchTaxa*
        name: SearchTaxa
        nameWithType: INatManager.SearchTaxa
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchTaxa
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.SearchTaxa*
        name: SearchTaxa
        nameWithType: INatManager.SearchTaxa
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.SearchTaxa
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.SearchTaxa
  Global.Action{JoshAaronMiller.INaturalist.User}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.User}'
  JoshAaronMiller.INaturalist.INatManager.GetUserMe*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.GetUserMe*
        name: GetUserMe
        nameWithType: INatManager.GetUserMe
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetUserMe
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.GetUserMe*
        name: GetUserMe
        nameWithType: INatManager.GetUserMe
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.GetUserMe
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.GetUserMe
  Global.Action{JoshAaronMiller.INaturalist.PhotoJson}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{JoshAaronMiller.INaturalist.PhotoJson}'
  JoshAaronMiller.INaturalist.INatManager.CreatePhoto*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager.CreatePhoto*
        name: CreatePhoto
        nameWithType: INatManager.CreatePhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreatePhoto
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager.CreatePhoto*
        name: CreatePhoto
        nameWithType: INatManager.CreatePhoto
        qualifiedName: JoshAaronMiller.INaturalist.INatManager.CreatePhoto
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.INatManager.CreatePhoto
  JoshAaronMiller.INaturalist.INatManager:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.INatManager
        name: INatManager
        nameWithType: INatManager
        qualifiedName: JoshAaronMiller.INaturalist.INatManager
      VB:
      - id: JoshAaronMiller.INaturalist.INatManager
        name: INatManager
        nameWithType: INatManager
        qualifiedName: JoshAaronMiller.INaturalist.INatManager
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.INatManager
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  JoshAaronMiller.INaturalist.PhotoFile.ToBytes*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.PhotoFile.ToBytes*
        name: ToBytes
        nameWithType: PhotoFile.ToBytes
        qualifiedName: JoshAaronMiller.INaturalist.PhotoFile.ToBytes
      VB:
      - id: JoshAaronMiller.INaturalist.PhotoFile.ToBytes*
        name: ToBytes
        nameWithType: PhotoFile.ToBytes
        qualifiedName: JoshAaronMiller.INaturalist.PhotoFile.ToBytes
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.PhotoFile.ToBytes
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  System.Action:
    name:
      CSharp:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      VB:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Action
  JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath*
        name: LoadImageFromPath
        nameWithType: Utilities.LoadImageFromPath
        qualifiedName: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath
      VB:
      - id: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath*
        name: LoadImageFromPath
        nameWithType: Utilities.LoadImageFromPath
        qualifiedName: JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.Utilities.LoadImageFromPath
  JoshAaronMiller.INaturalist.Utilities:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Utilities
        name: Utilities
        nameWithType: Utilities
        qualifiedName: JoshAaronMiller.INaturalist.Utilities
      VB:
      - id: JoshAaronMiller.INaturalist.Utilities
        name: Utilities
        nameWithType: Utilities
        qualifiedName: JoshAaronMiller.INaturalist.Utilities
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Utilities
  System.Collections.Generic.Dictionary{{Key},{Value}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: Key
        nameWithType: Key
        qualifiedName: Key
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: Value
        nameWithType: Value
        qualifiedName: Value
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: Key
        nameWithType: Key
        qualifiedName: Key
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: Value
        nameWithType: Value
        qualifiedName: Value
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{`0,`1}
  Key:
    name:
      CSharp:
      - name: Key
        nameWithType: Key
        qualifiedName: Key
      VB:
      - name: Key
        nameWithType: Key
        qualifiedName: Key
    isDefinition: true
    commentId: '!:Key'
  '{Key}':
    name:
      CSharp:
      - name: Key
        nameWithType: Key
        qualifiedName: Key
      VB:
      - name: Key
        nameWithType: Key
        qualifiedName: Key
    isDefinition: false
    definition: Key
    commentId: '!:Key'
  Value:
    name:
      CSharp:
      - name: Value
        nameWithType: Value
        qualifiedName: Value
      VB:
      - name: Value
        nameWithType: Value
        qualifiedName: Value
    isDefinition: true
    commentId: '!:Value'
  '{Value}':
    name:
      CSharp:
      - name: Value
        nameWithType: Value
        qualifiedName: Value
      VB:
      - name: Value
        nameWithType: Value
        qualifiedName: Value
    isDefinition: false
    definition: Value
    commentId: '!:Value'
  JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2.Item*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2.Item*
        name: Item
        nameWithType: Utilities.DefaultDictionary<Key, Value>.Item
        qualifiedName: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary<Key, Value>.Item
      VB:
      - id: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2.Item*
        name: Item
        nameWithType: Utilities.DefaultDictionary(Of Key, Value).Item
        qualifiedName: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary(Of Key, Value).Item
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2.Item
  JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2
        name: Utilities.DefaultDictionary
        nameWithType: Utilities.DefaultDictionary
        qualifiedName: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: Key
        nameWithType: Key
        qualifiedName: Key
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: Value
        nameWithType: Value
        qualifiedName: Value
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2
        name: Utilities.DefaultDictionary
        nameWithType: Utilities.DefaultDictionary
        qualifiedName: JoshAaronMiller.INaturalist.Utilities.DefaultDictionary
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: Key
        nameWithType: Key
        qualifiedName: Key
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: Value
        nameWithType: Value
        qualifiedName: Value
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Utilities.DefaultDictionary`2
  JoshAaronMiller.INaturalist.JsonObject`1:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.JsonObject`1
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}
  JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<T>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of T).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Annotation>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Annotation>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Annotation).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Annotation).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<T>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of T).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}.ToJson(JoshAaronMiller.INaturalist.Annotation):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Annotation>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Annotation>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Annotation).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Annotation).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Annotation}.ToJson(JoshAaronMiller.INaturalist.Annotation)
  JoshAaronMiller.INaturalist.Annotation:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
      VB:
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Annotation
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
        name: BoundingBoxGeoJson
        nameWithType: BoundingBoxGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
        name: BoundingBoxGeoJson
        nameWithType: BoundingBoxGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<BoundingBoxGeoJson>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.BoundingBoxGeoJson>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of BoundingBoxGeoJson).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.BoundingBoxGeoJson).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}.ToJson(JoshAaronMiller.INaturalist.BoundingBoxGeoJson)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<BoundingBoxGeoJson>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.BoundingBoxGeoJson>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
        name: BoundingBoxGeoJson
        nameWithType: BoundingBoxGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of BoundingBoxGeoJson).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.BoundingBoxGeoJson).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
        name: BoundingBoxGeoJson
        nameWithType: BoundingBoxGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.BoundingBoxGeoJson}.ToJson(JoshAaronMiller.INaturalist.BoundingBoxGeoJson)
  System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}
  JoshAaronMiller.INaturalist.BoundingBoxGeoJson:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
        name: BoundingBoxGeoJson
        nameWithType: BoundingBoxGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
      VB:
      - id: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
        name: BoundingBoxGeoJson
        nameWithType: BoundingBoxGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.BoundingBoxGeoJson
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.BoundingBoxGeoJson
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<ControlledTerm>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTerm>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of ControlledTerm).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTerm).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<ControlledTerm>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTerm>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of ControlledTerm).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTerm).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTerm}.ToJson(JoshAaronMiller.INaturalist.ControlledTerm)
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.ControlledTermValue}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.ControlledTermValue}
  JoshAaronMiller.INaturalist.ControlledTerm:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
      VB:
      - id: JoshAaronMiller.INaturalist.ControlledTerm
        name: ControlledTerm
        nameWithType: ControlledTerm
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTerm
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.ControlledTerm
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<ControlledTermValue>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTermValue>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of ControlledTermValue).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTermValue).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<ControlledTermValue>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ControlledTermValue>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of ControlledTermValue).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ControlledTermValue).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ControlledTermValue}.ToJson(JoshAaronMiller.INaturalist.ControlledTermValue)
  JoshAaronMiller.INaturalist.ControlledTermValue:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
      VB:
      - id: JoshAaronMiller.INaturalist.ControlledTermValue
        name: ControlledTermValue
        nameWithType: ControlledTermValue
        qualifiedName: JoshAaronMiller.INaturalist.ControlledTermValue
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.ControlledTermValue
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Count>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Count>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Count).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Count).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}.ToJson(JoshAaronMiller.INaturalist.Count):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Count>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Count>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Count).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Count).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Count}.ToJson(JoshAaronMiller.INaturalist.Count)
  JoshAaronMiller.INaturalist.Count:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
      VB:
      - id: JoshAaronMiller.INaturalist.Count
        name: Count
        nameWithType: Count
        qualifiedName: JoshAaronMiller.INaturalist.Count
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Count
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Dimensions
        name: Dimensions
        nameWithType: Dimensions
        qualifiedName: JoshAaronMiller.INaturalist.Dimensions
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Dimensions
        name: Dimensions
        nameWithType: Dimensions
        qualifiedName: JoshAaronMiller.INaturalist.Dimensions
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Dimensions>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Dimensions>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Dimensions).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Dimensions).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}.ToJson(JoshAaronMiller.INaturalist.Dimensions):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Dimensions>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Dimensions>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Dimensions
        name: Dimensions
        nameWithType: Dimensions
        qualifiedName: JoshAaronMiller.INaturalist.Dimensions
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Dimensions).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Dimensions).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Dimensions
        name: Dimensions
        nameWithType: Dimensions
        qualifiedName: JoshAaronMiller.INaturalist.Dimensions
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Dimensions}.ToJson(JoshAaronMiller.INaturalist.Dimensions)
  JoshAaronMiller.INaturalist.Dimensions:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Dimensions
        name: Dimensions
        nameWithType: Dimensions
        qualifiedName: JoshAaronMiller.INaturalist.Dimensions
      VB:
      - id: JoshAaronMiller.INaturalist.Dimensions
        name: Dimensions
        nameWithType: Dimensions
        qualifiedName: JoshAaronMiller.INaturalist.Dimensions
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.Dimensions
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Error>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Error>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Error).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Error).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}.ToJson(JoshAaronMiller.INaturalist.Error):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Error>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Error>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Error).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Error).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Error
        name: Error
        nameWithType: Error
        qualifiedName: JoshAaronMiller.INaturalist.Error
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Error}.ToJson(JoshAaronMiller.INaturalist.Error)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Flag>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Flag>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Flag).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Flag).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}.ToJson(JoshAaronMiller.INaturalist.Flag):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Flag>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Flag>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Flag).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Flag).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Flag}.ToJson(JoshAaronMiller.INaturalist.Flag)
  JoshAaronMiller.INaturalist.Flag:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
      VB:
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.Flag
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.WrappedFlag
        name: WrappedFlag
        nameWithType: WrappedFlag
        qualifiedName: JoshAaronMiller.INaturalist.WrappedFlag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.WrappedFlag
        name: WrappedFlag
        nameWithType: WrappedFlag
        qualifiedName: JoshAaronMiller.INaturalist.WrappedFlag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<WrappedFlag>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.WrappedFlag>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of WrappedFlag).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.WrappedFlag).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}.ToJson(JoshAaronMiller.INaturalist.WrappedFlag):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<WrappedFlag>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.WrappedFlag>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.WrappedFlag
        name: WrappedFlag
        nameWithType: WrappedFlag
        qualifiedName: JoshAaronMiller.INaturalist.WrappedFlag
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of WrappedFlag).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.WrappedFlag).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.WrappedFlag
        name: WrappedFlag
        nameWithType: WrappedFlag
        qualifiedName: JoshAaronMiller.INaturalist.WrappedFlag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedFlag}.ToJson(JoshAaronMiller.INaturalist.WrappedFlag)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.FlagCounts
        name: FlagCounts
        nameWithType: FlagCounts
        qualifiedName: JoshAaronMiller.INaturalist.FlagCounts
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.FlagCounts
        name: FlagCounts
        nameWithType: FlagCounts
        qualifiedName: JoshAaronMiller.INaturalist.FlagCounts
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<FlagCounts>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.FlagCounts>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of FlagCounts).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.FlagCounts).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}.ToJson(JoshAaronMiller.INaturalist.FlagCounts):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<FlagCounts>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.FlagCounts>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.FlagCounts
        name: FlagCounts
        nameWithType: FlagCounts
        qualifiedName: JoshAaronMiller.INaturalist.FlagCounts
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of FlagCounts).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.FlagCounts).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.FlagCounts
        name: FlagCounts
        nameWithType: FlagCounts
        qualifiedName: JoshAaronMiller.INaturalist.FlagCounts
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.FlagCounts}.ToJson(JoshAaronMiller.INaturalist.FlagCounts)
  JoshAaronMiller.INaturalist.FlagCounts:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.FlagCounts
        name: FlagCounts
        nameWithType: FlagCounts
        qualifiedName: JoshAaronMiller.INaturalist.FlagCounts
      VB:
      - id: JoshAaronMiller.INaturalist.FlagCounts
        name: FlagCounts
        nameWithType: FlagCounts
        qualifiedName: JoshAaronMiller.INaturalist.FlagCounts
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.FlagCounts
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.GeoJson
        name: GeoJson
        nameWithType: GeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeoJson
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.GeoJson
        name: GeoJson
        nameWithType: GeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<GeoJson>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeoJson>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of GeoJson).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeoJson).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}.ToJson(JoshAaronMiller.INaturalist.GeoJson):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<GeoJson>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeoJson>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.GeoJson
        name: GeoJson
        nameWithType: GeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of GeoJson).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeoJson).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.GeoJson
        name: GeoJson
        nameWithType: GeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeoJson}.ToJson(JoshAaronMiller.INaturalist.GeoJson)
  JoshAaronMiller.INaturalist.GeoJson:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.GeoJson
        name: GeoJson
        nameWithType: GeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeoJson
      VB:
      - id: JoshAaronMiller.INaturalist.GeoJson
        name: GeoJson
        nameWithType: GeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeoJson
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.GeoJson
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.GeometryGeoJson
        name: GeometryGeoJson
        nameWithType: GeometryGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeometryGeoJson
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.GeometryGeoJson
        name: GeometryGeoJson
        nameWithType: GeometryGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeometryGeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<GeometryGeoJson>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeometryGeoJson>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of GeometryGeoJson).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeometryGeoJson).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<GeometryGeoJson>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.GeometryGeoJson>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.GeometryGeoJson
        name: GeometryGeoJson
        nameWithType: GeometryGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeometryGeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of GeometryGeoJson).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.GeometryGeoJson).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.GeometryGeoJson
        name: GeometryGeoJson
        nameWithType: GeometryGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeometryGeoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.GeometryGeoJson}.ToJson(JoshAaronMiller.INaturalist.GeometryGeoJson)
  System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}}
  JoshAaronMiller.INaturalist.GeometryGeoJson:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.GeometryGeoJson
        name: GeometryGeoJson
        nameWithType: GeometryGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeometryGeoJson
      VB:
      - id: JoshAaronMiller.INaturalist.GeometryGeoJson
        name: GeometryGeoJson
        nameWithType: GeometryGeoJson
        qualifiedName: JoshAaronMiller.INaturalist.GeometryGeoJson
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.GeometryGeoJson
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Identification>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Identification>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Identification).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Identification).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}.ToJson(JoshAaronMiller.INaturalist.Identification)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Identification>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Identification>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Identification).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Identification).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Identification}.ToJson(JoshAaronMiller.INaturalist.Identification)
  JoshAaronMiller.INaturalist.TimeDetails:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TimeDetails
        name: TimeDetails
        nameWithType: TimeDetails
        qualifiedName: JoshAaronMiller.INaturalist.TimeDetails
      VB:
      - id: JoshAaronMiller.INaturalist.TimeDetails
        name: TimeDetails
        nameWithType: TimeDetails
        qualifiedName: JoshAaronMiller.INaturalist.TimeDetails
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.TimeDetails
  JoshAaronMiller.INaturalist.Taxon:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      VB:
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.Taxon
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<IdentificationCategoryCount>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.IdentificationCategoryCount>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of IdentificationCategoryCount).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.IdentificationCategoryCount).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}.ToJson(JoshAaronMiller.INaturalist.IdentificationCategoryCount)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<IdentificationCategoryCount>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.IdentificationCategoryCount>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of IdentificationCategoryCount).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.IdentificationCategoryCount).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationCategoryCount}.ToJson(JoshAaronMiller.INaturalist.IdentificationCategoryCount)
  JoshAaronMiller.INaturalist.IdentificationCategoryCount:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationCategoryCount
        name: IdentificationCategoryCount
        nameWithType: IdentificationCategoryCount
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationCategoryCount
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.IdentificationCategoryCount
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<SpeciesCount>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.SpeciesCount>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of SpeciesCount).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.SpeciesCount).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}.ToJson(JoshAaronMiller.INaturalist.SpeciesCount)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<SpeciesCount>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.SpeciesCount>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of SpeciesCount).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.SpeciesCount).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.SpeciesCount}.ToJson(JoshAaronMiller.INaturalist.SpeciesCount)
  JoshAaronMiller.INaturalist.SpeciesCount:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
      VB:
      - id: JoshAaronMiller.INaturalist.SpeciesCount
        name: SpeciesCount
        nameWithType: SpeciesCount
        qualifiedName: JoshAaronMiller.INaturalist.SpeciesCount
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.SpeciesCount
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.IdentificationSubmission
        name: IdentificationSubmission
        nameWithType: IdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSubmission
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.IdentificationSubmission
        name: IdentificationSubmission
        nameWithType: IdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<IdentificationSubmission>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.IdentificationSubmission>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of IdentificationSubmission).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.IdentificationSubmission).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}.ToJson(JoshAaronMiller.INaturalist.IdentificationSubmission)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<IdentificationSubmission>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.IdentificationSubmission>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.IdentificationSubmission
        name: IdentificationSubmission
        nameWithType: IdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of IdentificationSubmission).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.IdentificationSubmission).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.IdentificationSubmission
        name: IdentificationSubmission
        nameWithType: IdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.IdentificationSubmission}.ToJson(JoshAaronMiller.INaturalist.IdentificationSubmission)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
        name: WrappedIdentificationSubmission
        nameWithType: WrappedIdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
        name: WrappedIdentificationSubmission
        nameWithType: WrappedIdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}.CreateFromJson(System.String)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<WrappedIdentificationSubmission>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.WrappedIdentificationSubmission>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of WrappedIdentificationSubmission).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.WrappedIdentificationSubmission).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}.ToJson(JoshAaronMiller.INaturalist.WrappedIdentificationSubmission)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<WrappedIdentificationSubmission>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.WrappedIdentificationSubmission>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
        name: WrappedIdentificationSubmission
        nameWithType: WrappedIdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of WrappedIdentificationSubmission).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.WrappedIdentificationSubmission).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
        name: WrappedIdentificationSubmission
        nameWithType: WrappedIdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedIdentificationSubmission}.ToJson(JoshAaronMiller.INaturalist.WrappedIdentificationSubmission)
  JoshAaronMiller.INaturalist.WrappedIdentificationSubmission:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
        name: WrappedIdentificationSubmission
        nameWithType: WrappedIdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
      VB:
      - id: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
        name: WrappedIdentificationSubmission
        nameWithType: WrappedIdentificationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.WrappedIdentificationSubmission
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson*
        name: CreateFromJson
        nameWithType: JsonObject<T>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<T>.CreateFromJson
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson*
        name: CreateFromJson
        nameWithType: JsonObject(Of T).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of T).CreateFromJson
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson
  JoshAaronMiller.INaturalist.JsonObject`1.ToJson*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson*
        name: ToJson
        nameWithType: JsonObject<T>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<T>.ToJson
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson*
        name: ToJson
        nameWithType: JsonObject(Of T).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of T).ToJson
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.JsonObject`1.ToJson
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Observation>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Observation>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Observation).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Observation).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}.ToJson(JoshAaronMiller.INaturalist.Observation):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Observation>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Observation>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Observation).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Observation).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Observation}.ToJson(JoshAaronMiller.INaturalist.Observation)
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.Annotation}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Annotation
        name: Annotation
        nameWithType: Annotation
        qualifiedName: JoshAaronMiller.INaturalist.Annotation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.Annotation}
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.PhotoJson}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.PhotoJson}
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.Sound}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.Sound}
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.Outlink}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.Outlink}
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.Identification}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Identification
        name: Identification
        nameWithType: Identification
        qualifiedName: JoshAaronMiller.INaturalist.Identification
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.Identification}
  JoshAaronMiller.INaturalist.Observation.ImageSize:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Observation.ImageSize
        name: Observation.ImageSize
        nameWithType: Observation.ImageSize
        qualifiedName: JoshAaronMiller.INaturalist.Observation.ImageSize
      VB:
      - id: JoshAaronMiller.INaturalist.Observation.ImageSize
        name: Observation.ImageSize
        nameWithType: Observation.ImageSize
        qualifiedName: JoshAaronMiller.INaturalist.Observation.ImageSize
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.Observation.ImageSize
  JoshAaronMiller.INaturalist.Observation.GetPhotoUrls*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls*
        name: GetPhotoUrls
        nameWithType: Observation.GetPhotoUrls
        qualifiedName: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls
      VB:
      - id: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls*
        name: GetPhotoUrls
        nameWithType: Observation.GetPhotoUrls
        qualifiedName: JoshAaronMiller.INaturalist.Observation.GetPhotoUrls
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.Observation.GetPhotoUrls
  JoshAaronMiller.INaturalist.Observation.DownloadPhotos*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Observation.DownloadPhotos*
        name: DownloadPhotos
        nameWithType: Observation.DownloadPhotos
        qualifiedName: JoshAaronMiller.INaturalist.Observation.DownloadPhotos
      VB:
      - id: JoshAaronMiller.INaturalist.Observation.DownloadPhotos*
        name: DownloadPhotos
        nameWithType: Observation.DownloadPhotos
        qualifiedName: JoshAaronMiller.INaturalist.Observation.DownloadPhotos
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.Observation.DownloadPhotos
  JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
        name: ObservationSearch.IdentificationAgreement
        nameWithType: ObservationSearch.IdentificationAgreement
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
        name: ObservationSearch.IdentificationAgreement
        nameWithType: ObservationSearch.IdentificationAgreement
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
  JoshAaronMiller.INaturalist.Observation.GetAgreementRate*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Observation.GetAgreementRate*
        name: GetAgreementRate
        nameWithType: Observation.GetAgreementRate
        qualifiedName: JoshAaronMiller.INaturalist.Observation.GetAgreementRate
      VB:
      - id: JoshAaronMiller.INaturalist.Observation.GetAgreementRate*
        name: GetAgreementRate
        nameWithType: Observation.GetAgreementRate
        qualifiedName: JoshAaronMiller.INaturalist.Observation.GetAgreementRate
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.Observation.GetAgreementRate
  System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.Taxon,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.Taxon,System.Int32}
  JoshAaronMiller.INaturalist.Observation.CountIdentifications*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Observation.CountIdentifications*
        name: CountIdentifications
        nameWithType: Observation.CountIdentifications
        qualifiedName: JoshAaronMiller.INaturalist.Observation.CountIdentifications
      VB:
      - id: JoshAaronMiller.INaturalist.Observation.CountIdentifications*
        name: CountIdentifications
        nameWithType: Observation.CountIdentifications
        qualifiedName: JoshAaronMiller.INaturalist.Observation.CountIdentifications
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.Observation.CountIdentifications
  JoshAaronMiller.INaturalist.Observation:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
      VB:
      - id: JoshAaronMiller.INaturalist.Observation
        name: Observation
        nameWithType: Observation
        qualifiedName: JoshAaronMiller.INaturalist.Observation
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Observation
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<ObservationPhoto>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ObservationPhoto>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of ObservationPhoto).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ObservationPhoto).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}.ToJson(JoshAaronMiller.INaturalist.ObservationPhoto)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<ObservationPhoto>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ObservationPhoto>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of ObservationPhoto).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ObservationPhoto).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationPhoto}.ToJson(JoshAaronMiller.INaturalist.ObservationPhoto)
  JoshAaronMiller.INaturalist.PhotoJson:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      VB:
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.PhotoJson
  JoshAaronMiller.INaturalist.ObservationPhoto:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationPhoto
        name: ObservationPhoto
        nameWithType: ObservationPhoto
        qualifiedName: JoshAaronMiller.INaturalist.ObservationPhoto
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.ObservationPhoto
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationSubmission
        name: ObservationSubmission
        nameWithType: ObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSubmission
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationSubmission
        name: ObservationSubmission
        nameWithType: ObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<ObservationSubmission>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ObservationSubmission>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of ObservationSubmission).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ObservationSubmission).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}.ToJson(JoshAaronMiller.INaturalist.ObservationSubmission)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<ObservationSubmission>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.ObservationSubmission>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ObservationSubmission
        name: ObservationSubmission
        nameWithType: ObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of ObservationSubmission).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.ObservationSubmission).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.ObservationSubmission
        name: ObservationSubmission
        nameWithType: ObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.ObservationSubmission}.ToJson(JoshAaronMiller.INaturalist.ObservationSubmission)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission
        name: WrappedObservationSubmission
        nameWithType: WrappedObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedObservationSubmission
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission
        name: WrappedObservationSubmission
        nameWithType: WrappedObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedObservationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<WrappedObservationSubmission>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.WrappedObservationSubmission>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of WrappedObservationSubmission).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.WrappedObservationSubmission).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}.ToJson(JoshAaronMiller.INaturalist.WrappedObservationSubmission)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<WrappedObservationSubmission>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.WrappedObservationSubmission>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission
        name: WrappedObservationSubmission
        nameWithType: WrappedObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedObservationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of WrappedObservationSubmission).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.WrappedObservationSubmission).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission
        name: WrappedObservationSubmission
        nameWithType: WrappedObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedObservationSubmission
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.WrappedObservationSubmission}.ToJson(JoshAaronMiller.INaturalist.WrappedObservationSubmission)
  JoshAaronMiller.INaturalist.WrappedObservationSubmission:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission
        name: WrappedObservationSubmission
        nameWithType: WrappedObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedObservationSubmission
      VB:
      - id: JoshAaronMiller.INaturalist.WrappedObservationSubmission
        name: WrappedObservationSubmission
        nameWithType: WrappedObservationSubmission
        qualifiedName: JoshAaronMiller.INaturalist.WrappedObservationSubmission
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.WrappedObservationSubmission
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Outlink>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Outlink>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Outlink).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Outlink).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}.ToJson(JoshAaronMiller.INaturalist.Outlink):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Outlink>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Outlink>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Outlink).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Outlink).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Outlink}.ToJson(JoshAaronMiller.INaturalist.Outlink)
  JoshAaronMiller.INaturalist.Outlink:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
      VB:
      - id: JoshAaronMiller.INaturalist.Outlink
        name: Outlink
        nameWithType: Outlink
        qualifiedName: JoshAaronMiller.INaturalist.Outlink
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Outlink
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<PhotoJson>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.PhotoJson>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of PhotoJson).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.PhotoJson).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}.ToJson(JoshAaronMiller.INaturalist.PhotoJson):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<PhotoJson>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.PhotoJson>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of PhotoJson).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.PhotoJson).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.PhotoJson
        name: PhotoJson
        nameWithType: PhotoJson
        qualifiedName: JoshAaronMiller.INaturalist.PhotoJson
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PhotoJson}.ToJson(JoshAaronMiller.INaturalist.PhotoJson)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Place>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Place>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Place).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Place).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}.ToJson(JoshAaronMiller.INaturalist.Place):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Place>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Place>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Place).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Place).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Place}.ToJson(JoshAaronMiller.INaturalist.Place)
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  JoshAaronMiller.INaturalist.Place:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      VB:
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Place
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<PlacesByCuration>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.PlacesByCuration>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of PlacesByCuration).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.PlacesByCuration).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}.ToJson(JoshAaronMiller.INaturalist.PlacesByCuration)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<PlacesByCuration>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.PlacesByCuration>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of PlacesByCuration).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.PlacesByCuration).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.PlacesByCuration}.ToJson(JoshAaronMiller.INaturalist.PlacesByCuration)
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.Place}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Place
        name: Place
        nameWithType: Place
        qualifiedName: JoshAaronMiller.INaturalist.Place
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.Place}
  JoshAaronMiller.INaturalist.PlacesByCuration:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
      VB:
      - id: JoshAaronMiller.INaturalist.PlacesByCuration
        name: PlacesByCuration
        nameWithType: PlacesByCuration
        qualifiedName: JoshAaronMiller.INaturalist.PlacesByCuration
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.PlacesByCuration
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Results<T>>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Results<T>>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Results(Of T)).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Results(Of T)).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.ToJson(JoshAaronMiller.INaturalist.Results{{T}}):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Results<T>>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Results<T>>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Results(Of T)).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Results(Of T)).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Results`1}.ToJson(JoshAaronMiller.INaturalist.Results{`0})
  System.Collections.Generic.List{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{`0}
  JoshAaronMiller.INaturalist.Results`1:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.Results`1
        name: Results
        nameWithType: Results
        qualifiedName: JoshAaronMiller.INaturalist.Results
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Results`1
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Sound>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Sound>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Sound).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Sound).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}.ToJson(JoshAaronMiller.INaturalist.Sound):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Sound>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Sound>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Sound).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Sound).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Sound}.ToJson(JoshAaronMiller.INaturalist.Sound)
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.Flag}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Flag
        name: Flag
        nameWithType: Flag
        qualifiedName: JoshAaronMiller.INaturalist.Flag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.Flag}
  JoshAaronMiller.INaturalist.Sound:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
      VB:
      - id: JoshAaronMiller.INaturalist.Sound
        name: Sound
        nameWithType: Sound
        qualifiedName: JoshAaronMiller.INaturalist.Sound
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.Sound
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Taxon>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Taxon>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Taxon).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Taxon).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}.ToJson(JoshAaronMiller.INaturalist.Taxon):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Taxon>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Taxon>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Taxon).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Taxon).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Taxon
        name: Taxon
        nameWithType: Taxon
        qualifiedName: JoshAaronMiller.INaturalist.Taxon
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Taxon}.ToJson(JoshAaronMiller.INaturalist.Taxon)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<TaxonSummary>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.TaxonSummary>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of TaxonSummary).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.TaxonSummary).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}.CreateFromJson(System.String)
  ? JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}.ToJson(JoshAaronMiller.INaturalist.TaxonSummary)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<TaxonSummary>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.TaxonSummary>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of TaxonSummary).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.TaxonSummary).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TaxonSummary}.ToJson(JoshAaronMiller.INaturalist.TaxonSummary)
  JoshAaronMiller.INaturalist.TaxonSummary:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSummary
        name: TaxonSummary
        nameWithType: TaxonSummary
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSummary
    isDefinition: true
    commentId: T:JoshAaronMiller.INaturalist.TaxonSummary
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.TimeDetails
        name: TimeDetails
        nameWithType: TimeDetails
        qualifiedName: JoshAaronMiller.INaturalist.TimeDetails
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.TimeDetails
        name: TimeDetails
        nameWithType: TimeDetails
        qualifiedName: JoshAaronMiller.INaturalist.TimeDetails
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<TimeDetails>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.TimeDetails>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of TimeDetails).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.TimeDetails).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}.ToJson(JoshAaronMiller.INaturalist.TimeDetails):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<TimeDetails>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.TimeDetails>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.TimeDetails
        name: TimeDetails
        nameWithType: TimeDetails
        qualifiedName: JoshAaronMiller.INaturalist.TimeDetails
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of TimeDetails).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.TimeDetails).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.TimeDetails
        name: TimeDetails
        nameWithType: TimeDetails
        qualifiedName: JoshAaronMiller.INaturalist.TimeDetails
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.TimeDetails}.ToJson(JoshAaronMiller.INaturalist.TimeDetails)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<User>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.User>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of User).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.User).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}.ToJson(JoshAaronMiller.INaturalist.User):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<User>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.User>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of User).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.User).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.User
        name: User
        nameWithType: User
        qualifiedName: JoshAaronMiller.INaturalist.User
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.User}.ToJson(JoshAaronMiller.INaturalist.User)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<UserMessage>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.UserMessage>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of UserMessage).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.UserMessage).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}.ToJson(JoshAaronMiller.INaturalist.UserMessage):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<UserMessage>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.UserMessage>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of UserMessage).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.UserMessage).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.UserMessage
        name: UserMessage
        nameWithType: UserMessage
        qualifiedName: JoshAaronMiller.INaturalist.UserMessage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.UserMessage}.ToJson(JoshAaronMiller.INaturalist.UserMessage)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.Vote
        name: Vote
        nameWithType: Vote
        qualifiedName: JoshAaronMiller.INaturalist.Vote
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1
        name: JsonObject
        nameWithType: JsonObject
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.Vote
        name: Vote
        nameWithType: Vote
        qualifiedName: JoshAaronMiller.INaturalist.Vote
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}.CreateFromJson(System.String):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject<Vote>.CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Vote>.CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
        name: CreateFromJson
        nameWithType: JsonObject(Of Vote).CreateFromJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Vote).CreateFromJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.CreateFromJson(System.String)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}.CreateFromJson(System.String)
  JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}.ToJson(JoshAaronMiller.INaturalist.Vote):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject<Vote>.ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject<JoshAaronMiller.INaturalist.Vote>.ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Vote
        name: Vote
        nameWithType: Vote
        qualifiedName: JoshAaronMiller.INaturalist.Vote
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
        name: ToJson
        nameWithType: JsonObject(Of Vote).ToJson
        qualifiedName: JoshAaronMiller.INaturalist.JsonObject(Of JoshAaronMiller.INaturalist.Vote).ToJson
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.Vote
        name: Vote
        nameWithType: Vote
        qualifiedName: JoshAaronMiller.INaturalist.Vote
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: JoshAaronMiller.INaturalist.JsonObject`1.ToJson(`0)
    parent: JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}
    commentId: M:JoshAaronMiller.INaturalist.JsonObject{JoshAaronMiller.INaturalist.Vote}.ToJson(JoshAaronMiller.INaturalist.Vote)
  JoshAaronMiller.INaturalist.SearchObject:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject
        name: SearchObject
        nameWithType: SearchObject
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject
        name: SearchObject
        nameWithType: SearchObject
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.SearchObject
  JoshAaronMiller.INaturalist.SearchObject.boolParams:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.boolParams
        name: boolParams
        nameWithType: SearchObject.boolParams
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.boolParams
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.boolParams
        name: boolParams
        nameWithType: SearchObject.boolParams
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.boolParams
    isDefinition: true
    parent: JoshAaronMiller.INaturalist.SearchObject
    commentId: F:JoshAaronMiller.INaturalist.SearchObject.boolParams
  JoshAaronMiller.INaturalist.SearchObject.stringParams:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.stringParams
        name: stringParams
        nameWithType: SearchObject.stringParams
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.stringParams
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.stringParams
        name: stringParams
        nameWithType: SearchObject.stringParams
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.stringParams
    isDefinition: true
    parent: JoshAaronMiller.INaturalist.SearchObject
    commentId: F:JoshAaronMiller.INaturalist.SearchObject.stringParams
  ? JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
        name: SetBooleanParameter
        nameWithType: SearchObject.SetBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
        name: SearchObject.BooleanParameter
        nameWithType: SearchObject.BooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
        name: SetBooleanParameter
        nameWithType: SearchObject.SetBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
        name: SearchObject.BooleanParameter
        nameWithType: SearchObject.BooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: JoshAaronMiller.INaturalist.SearchObject
    commentId: M:JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter,System.Boolean)
  JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
        name: RemoveBooleanParameter
        nameWithType: SearchObject.RemoveBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
        name: SearchObject.BooleanParameter
        nameWithType: SearchObject.BooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
        name: RemoveBooleanParameter
        nameWithType: SearchObject.RemoveBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
        name: SearchObject.BooleanParameter
        nameWithType: SearchObject.BooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: JoshAaronMiller.INaturalist.SearchObject
    commentId: M:JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter(JoshAaronMiller.INaturalist.SearchObject.BooleanParameter)
  ? JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
  : name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
        name: SetStringParameter
        nameWithType: SearchObject.SetStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter
        name: SearchObject.StringParameter
        nameWithType: SearchObject.StringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
        name: SetStringParameter
        nameWithType: SearchObject.SetStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter
        name: SearchObject.StringParameter
        nameWithType: SearchObject.StringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: JoshAaronMiller.INaturalist.SearchObject
    commentId: M:JoshAaronMiller.INaturalist.SearchObject.SetStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter,System.String)
  JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter):
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
        name: RemoveStringParameter
        nameWithType: SearchObject.RemoveStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter
        name: SearchObject.StringParameter
        nameWithType: SearchObject.StringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
        name: RemoveStringParameter
        nameWithType: SearchObject.RemoveStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter
        name: SearchObject.StringParameter
        nameWithType: SearchObject.StringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: JoshAaronMiller.INaturalist.SearchObject
    commentId: M:JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter(JoshAaronMiller.INaturalist.SearchObject.StringParameter)
  JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
        name: ToUrlParameters
        nameWithType: SearchObject.ToUrlParameters
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
        name: ToUrlParameters
        nameWithType: SearchObject.ToUrlParameters
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: JoshAaronMiller.INaturalist.SearchObject
    commentId: M:JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds*
        name: IncludeIds
        nameWithType: IdentificationSearch.IncludeIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds*
        name: IncludeIds
        nameWithType: IdentificationSearch.IncludeIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIds
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds*
        name: IncludePlaceIds
        nameWithType: IdentificationSearch.IncludePlaceIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds*
        name: IncludePlaceIds
        nameWithType: IdentificationSearch.IncludePlaceIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludePlaceIds
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds*
        name: IncludeTaxonIds
        nameWithType: IdentificationSearch.IncludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds*
        name: IncludeTaxonIds
        nameWithType: IdentificationSearch.IncludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonIds
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds*
        name: IncludeObservationTaxonIds
        nameWithType: IdentificationSearch.IncludeObservationTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds*
        name: IncludeObservationTaxonIds
        nameWithType: IdentificationSearch.IncludeObservationTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonIds
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds*
        name: IncludeIconicTaxonIds
        nameWithType: IdentificationSearch.IncludeIconicTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds*
        name: IncludeIconicTaxonIds
        nameWithType: IdentificationSearch.IncludeIconicTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIconicTaxonIds
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds*
        name: IncludeObservationIconicTaxonIds
        nameWithType: IdentificationSearch.IncludeObservationIconicTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds*
        name: IncludeObservationIconicTaxonIds
        nameWithType: IdentificationSearch.IncludeObservationIconicTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationIconicTaxonIds
  JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds*
        name: ExcludeTaxonIds
        nameWithType: IdentificationSearch.ExcludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds*
        name: ExcludeTaxonIds
        nameWithType: IdentificationSearch.ExcludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeTaxonIds
  JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds*
        name: ExcludeObservationTaxonIds
        nameWithType: IdentificationSearch.ExcludeObservationTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds*
        name: ExcludeObservationTaxonIds
        nameWithType: IdentificationSearch.ExcludeObservationTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.ExcludeObservationTaxonIds
  JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits*
        name: SetObservedOnDateLimits
        nameWithType: IdentificationSearch.SetObservedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits*
        name: SetObservedOnDateLimits
        nameWithType: IdentificationSearch.SetObservedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetObservedOnDateLimits
  JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits*
        name: SetCreatedOnDateLimits
        nameWithType: IdentificationSearch.SetCreatedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits*
        name: SetCreatedOnDateLimits
        nameWithType: IdentificationSearch.SetCreatedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetCreatedOnDateLimits
  JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits*
        name: SetObservationCreatedOnDateLimits
        nameWithType: IdentificationSearch.SetObservationCreatedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits*
        name: SetObservationCreatedOnDateLimits
        nameWithType: IdentificationSearch.SetObservationCreatedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationCreatedOnDateLimits
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.TaxonRank
        name: TaxonRank
        nameWithType: TaxonRank
        qualifiedName: JoshAaronMiller.INaturalist.TaxonRank
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.TaxonRank
        name: TaxonRank
        nameWithType: TaxonRank
        qualifiedName: JoshAaronMiller.INaturalist.TaxonRank
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.TaxonRank}
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks*
        name: IncludeTaxonRanks
        nameWithType: IdentificationSearch.IncludeTaxonRanks
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks*
        name: IncludeTaxonRanks
        nameWithType: IdentificationSearch.IncludeTaxonRanks
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeTaxonRanks
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks*
        name: IncludeObservationTaxonRanks
        nameWithType: IdentificationSearch.IncludeObservationTaxonRanks
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks*
        name: IncludeObservationTaxonRanks
        nameWithType: IdentificationSearch.IncludeObservationTaxonRanks
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeObservationTaxonRanks
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId*
        name: IncludeIdentificationsByUserId
        nameWithType: IdentificationSearch.IncludeIdentificationsByUserId
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId*
        name: IncludeIdentificationsByUserId
        nameWithType: IdentificationSearch.IncludeIdentificationsByUserId
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserId
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin*
        name: IncludeIdentificationsByUserLogin
        nameWithType: IdentificationSearch.IncludeIdentificationsByUserLogin
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin*
        name: IncludeIdentificationsByUserLogin
        nameWithType: IdentificationSearch.IncludeIdentificationsByUserLogin
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeIdentificationsByUserLogin
  JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories*
        name: IncludeCategories
        nameWithType: IdentificationSearch.IncludeCategories
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories*
        name: IncludeCategories
        nameWithType: IdentificationSearch.IncludeCategories
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.IncludeCategories
  JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits*
        name: SetTaxonRankLimits
        nameWithType: IdentificationSearch.SetTaxonRankLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits*
        name: SetTaxonRankLimits
        nameWithType: IdentificationSearch.SetTaxonRankLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetTaxonRankLimits
  JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits*
        name: SetObservationTaxonRankLimits
        nameWithType: IdentificationSearch.SetObservationTaxonRankLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits*
        name: SetObservationTaxonRankLimits
        nameWithType: IdentificationSearch.SetObservationTaxonRankLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetObservationTaxonRankLimits
  JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade*
        name: SetQualityGrade
        nameWithType: IdentificationSearch.SetQualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade*
        name: SetQualityGrade
        nameWithType: IdentificationSearch.SetQualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetQualityGrade
  JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits*
        name: SetIdentificationnIdLimits
        nameWithType: IdentificationSearch.SetIdentificationnIdLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits*
        name: SetIdentificationnIdLimits
        nameWithType: IdentificationSearch.SetIdentificationnIdLimits
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetIdentificationnIdLimits
  JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination*
        name: SetPagination
        nameWithType: IdentificationSearch.SetPagination
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination*
        name: SetPagination
        nameWithType: IdentificationSearch.SetPagination
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetPagination
  JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder*
        name: SetOrder
        nameWithType: IdentificationSearch.SetOrder
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder*
        name: SetOrder
        nameWithType: IdentificationSearch.SetOrder
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.IdentificationSearch.SetOrder
  JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
        name: IdentificationSearch.IdentificationCategory
        nameWithType: IdentificationSearch.IdentificationCategory
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
      VB:
      - id: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
        name: IdentificationSearch.IdentificationCategory
        nameWithType: IdentificationSearch.IdentificationCategory
        qualifiedName: JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.IdentificationSearch.IdentificationCategory
  JoshAaronMiller.INaturalist.MessageSearch.SetPage*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetPage*
        name: SetPage
        nameWithType: MessageSearch.SetPage
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetPage
      VB:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetPage*
        name: SetPage
        nameWithType: MessageSearch.SetPage
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetPage
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.MessageSearch.SetPage
  JoshAaronMiller.INaturalist.MessageSearch.Box:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.MessageSearch.Box
        name: MessageSearch.Box
        nameWithType: MessageSearch.Box
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.Box
      VB:
      - id: JoshAaronMiller.INaturalist.MessageSearch.Box
        name: MessageSearch.Box
        nameWithType: MessageSearch.Box
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.Box
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.MessageSearch.Box
  JoshAaronMiller.INaturalist.MessageSearch.SetBox*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetBox*
        name: SetBox
        nameWithType: MessageSearch.SetBox
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetBox
      VB:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetBox*
        name: SetBox
        nameWithType: MessageSearch.SetBox
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetBox
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.MessageSearch.SetBox
  JoshAaronMiller.INaturalist.MessageSearch.SetQuery*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetQuery*
        name: SetQuery
        nameWithType: MessageSearch.SetQuery
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetQuery
      VB:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetQuery*
        name: SetQuery
        nameWithType: MessageSearch.SetQuery
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetQuery
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.MessageSearch.SetQuery
  JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent*
        name: SetCorrespondent
        nameWithType: MessageSearch.SetCorrespondent
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent
      VB:
      - id: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent*
        name: SetCorrespondent
        nameWithType: MessageSearch.SetCorrespondent
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.MessageSearch.SetCorrespondent
  JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread*
        name: ShowOnlyLatestMessagePerThread
        nameWithType: MessageSearch.ShowOnlyLatestMessagePerThread
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread
      VB:
      - id: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread*
        name: ShowOnlyLatestMessagePerThread
        nameWithType: MessageSearch.ShowOnlyLatestMessagePerThread
        qualifiedName: JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.MessageSearch.ShowOnlyLatestMessagePerThread
  System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.License,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationSearch.License
        name: ObservationSearch.License
        nameWithType: ObservationSearch.License
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.License
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationSearch.License
        name: ObservationSearch.License
        nameWithType: ObservationSearch.License
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.License
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.License,System.String}
  System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
        name: ObservationSearch.Geoprivacy
        nameWithType: ObservationSearch.Geoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
        name: ObservationSearch.Geoprivacy
        nameWithType: ObservationSearch.Geoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy,System.String}
  System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
        name: ObservationSearch.IdentificationAgreement
        nameWithType: ObservationSearch.IdentificationAgreement
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
        name: ObservationSearch.IdentificationAgreement
        nameWithType: ObservationSearch.IdentificationAgreement
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{JoshAaronMiller.INaturalist.ObservationSearch.IdentificationAgreement,System.String}
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds*
        name: IncludeIds
        nameWithType: ObservationSearch.IncludeIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds*
        name: IncludeIds
        nameWithType: ObservationSearch.IncludeIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeIds
  JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds*
        name: ExcludeIds
        nameWithType: ObservationSearch.ExcludeIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds*
        name: ExcludeIds
        nameWithType: ObservationSearch.ExcludeIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeIds
  JoshAaronMiller.INaturalist.ObservationSearch.License:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.License
        name: ObservationSearch.License
        nameWithType: ObservationSearch.License
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.License
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.License
        name: ObservationSearch.License
        nameWithType: ObservationSearch.License
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.License
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.License
  JoshAaronMiller.INaturalist.ObservationSearch.SetLicense*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense*
        name: SetLicense
        nameWithType: ObservationSearch.SetLicense
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense*
        name: SetLicense
        nameWithType: ObservationSearch.SetLicense
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetLicense
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetLicense
  JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType*
        name: SetOfvDataType
        nameWithType: ObservationSearch.SetOfvDataType
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType*
        name: SetOfvDataType
        nameWithType: ObservationSearch.SetOfvDataType
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetOfvDataType
  JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense*
        name: SetPhotoLicense
        nameWithType: ObservationSearch.SetPhotoLicense
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense*
        name: SetPhotoLicense
        nameWithType: ObservationSearch.SetPhotoLicense
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetPhotoLicense
  JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds*
        name: IncludePlaceIds
        nameWithType: ObservationSearch.IncludePlaceIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds*
        name: IncludePlaceIds
        nameWithType: ObservationSearch.IncludePlaceIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludePlaceIds
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds*
        name: IncludeProjectIds
        nameWithType: ObservationSearch.IncludeProjectIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds*
        name: IncludeProjectIds
        nameWithType: ObservationSearch.IncludeProjectIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeProjectIds
  JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank*
        name: SetTaxonRank
        nameWithType: ObservationSearch.SetTaxonRank
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank*
        name: SetTaxonRank
        nameWithType: ObservationSearch.SetTaxonRank
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRank
  JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId*
        name: SetSiteId
        nameWithType: ObservationSearch.SetSiteId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId*
        name: SetSiteId
        nameWithType: ObservationSearch.SetSiteId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetSiteId
  JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense*
        name: SetSoundLicense
        nameWithType: ObservationSearch.SetSoundLicense
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense*
        name: SetSoundLicense
        nameWithType: ObservationSearch.SetSoundLicense
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetSoundLicense
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds*
        name: IncludeTaxonIds
        nameWithType: ObservationSearch.IncludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds*
        name: IncludeTaxonIds
        nameWithType: ObservationSearch.IncludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonIds
  JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds*
        name: ExcludeTaxonIds
        nameWithType: ObservationSearch.ExcludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds*
        name: ExcludeTaxonIds
        nameWithType: ObservationSearch.ExcludeTaxonIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeTaxonIds
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames*
        name: IncludeTaxonNames
        nameWithType: ObservationSearch.IncludeTaxonNames
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames*
        name: IncludeTaxonNames
        nameWithType: ObservationSearch.IncludeTaxonNames
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonNames
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds*
        name: IncludeUserIds
        nameWithType: ObservationSearch.IncludeUserIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds*
        name: IncludeUserIds
        nameWithType: ObservationSearch.IncludeUserIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserIds
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins*
        name: IncludeUserLogins
        nameWithType: ObservationSearch.IncludeUserLogins
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins*
        name: IncludeUserLogins
        nameWithType: ObservationSearch.IncludeUserLogins
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeUserLogins
  JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId*
        name: SetIdentifiedByUserId
        nameWithType: ObservationSearch.SetIdentifiedByUserId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId*
        name: SetIdentifiedByUserId
        nameWithType: ObservationSearch.SetIdentifiedByUserId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetIdentifiedByUserId
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays*
        name: IncludeDays
        nameWithType: ObservationSearch.IncludeDays
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays*
        name: IncludeDays
        nameWithType: ObservationSearch.IncludeDays
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeDays
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths*
        name: IncludeMonths
        nameWithType: ObservationSearch.IncludeMonths
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths*
        name: IncludeMonths
        nameWithType: ObservationSearch.IncludeMonths
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeMonths
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears*
        name: IncludeYears
        nameWithType: ObservationSearch.IncludeYears
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears*
        name: IncludeYears
        nameWithType: ObservationSearch.IncludeYears
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeYears
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds*
        name: IncludeTermIds
        nameWithType: ObservationSearch.IncludeTermIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds*
        name: IncludeTermIds
        nameWithType: ObservationSearch.IncludeTermIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermIds
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds*
        name: IncludeTermValueIds
        nameWithType: ObservationSearch.IncludeTermValueIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds*
        name: IncludeTermValueIds
        nameWithType: ObservationSearch.IncludeTermValueIds
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTermValueIds
  JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum*
        name: SetAccuracyMinimum
        nameWithType: ObservationSearch.SetAccuracyMinimum
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum*
        name: SetAccuracyMinimum
        nameWithType: ObservationSearch.SetAccuracyMinimum
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMinimum
  JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum*
        name: SetAccuracyMaximum
        nameWithType: ObservationSearch.SetAccuracyMaximum
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum*
        name: SetAccuracyMaximum
        nameWithType: ObservationSearch.SetAccuracyMaximum
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetAccuracyMaximum
  JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits*
        name: SetObservedOnDateLimits
        nameWithType: ObservationSearch.SetObservedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits*
        name: SetObservedOnDateLimits
        nameWithType: ObservationSearch.SetObservedOnDateLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetObservedOnDateLimits
  JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits*
        name: SetCreatedOnDateTimeLimits
        nameWithType: ObservationSearch.SetCreatedOnDateTimeLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits*
        name: SetCreatedOnDateTimeLimits
        nameWithType: ObservationSearch.SetCreatedOnDateTimeLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetCreatedOnDateTimeLimits
  JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId*
        name: SetUnobservedByUserId
        nameWithType: ObservationSearch.SetUnobservedByUserId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId*
        name: SetUnobservedByUserId
        nameWithType: ObservationSearch.SetUnobservedByUserId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetUnobservedByUserId
  JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor*
        name: ApplyProjectRulesFor
        nameWithType: ObservationSearch.ApplyProjectRulesFor
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor*
        name: ApplyProjectRulesFor
        nameWithType: ObservationSearch.ApplyProjectRulesFor
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.ApplyProjectRulesFor
  JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode*
        name: SetConservationStatusCode
        nameWithType: ObservationSearch.SetConservationStatusCode
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode*
        name: SetConservationStatusCode
        nameWithType: ObservationSearch.SetConservationStatusCode
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusCode
  JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority*
        name: SetConservationStatusAuthority
        nameWithType: ObservationSearch.SetConservationStatusAuthority
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority*
        name: SetConservationStatusAuthority
        nameWithType: ObservationSearch.SetConservationStatusAuthority
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetConservationStatusAuthority
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
        name: ObservationSearch.IucnConservationStatus
        nameWithType: ObservationSearch.IucnConservationStatus
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
        name: ObservationSearch.IucnConservationStatus
        nameWithType: ObservationSearch.IucnConservationStatus
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus}
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses*
        name: IncludeIUCNConservationStatuses
        nameWithType: ObservationSearch.IncludeIUCNConservationStatuses
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses*
        name: IncludeIUCNConservationStatuses
        nameWithType: ObservationSearch.IncludeIUCNConservationStatuses
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeIUCNConservationStatuses
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
        name: ObservationSearch.Geoprivacy
        nameWithType: ObservationSearch.Geoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
        name: ObservationSearch.Geoprivacy
        nameWithType: ObservationSearch.Geoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy}
  JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy*
        name: SetGeoprivacy
        nameWithType: ObservationSearch.SetGeoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy*
        name: SetGeoprivacy
        nameWithType: ObservationSearch.SetGeoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetGeoprivacy
  JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy*
        name: IncludeTaxonGeoprivacy
        nameWithType: ObservationSearch.IncludeTaxonGeoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy*
        name: IncludeTaxonGeoprivacy
        nameWithType: ObservationSearch.IncludeTaxonGeoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.IncludeTaxonGeoprivacy
  JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits*
        name: SetTaxonRankLimits
        nameWithType: ObservationSearch.SetTaxonRankLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits*
        name: SetTaxonRankLimits
        nameWithType: ObservationSearch.SetTaxonRankLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetTaxonRankLimits
  System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
        name: ObservationSearch.IconicTaxon
        nameWithType: ObservationSearch.IconicTaxon
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
        name: ObservationSearch.IconicTaxon
        nameWithType: ObservationSearch.IconicTaxon
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon}
  JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa*
        name: SetIconicTaxa
        nameWithType: ObservationSearch.SetIconicTaxa
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa*
        name: SetIconicTaxa
        nameWithType: ObservationSearch.SetIconicTaxa
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetIconicTaxa
  JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits*
        name: SetObservationIdLimits
        nameWithType: ObservationSearch.SetObservationIdLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits*
        name: SetObservationIdLimits
        nameWithType: ObservationSearch.SetObservationIdLimits
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetObservationIdLimits
  JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement*
        name: SetIdentificationAgreement
        nameWithType: ObservationSearch.SetIdentificationAgreement
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement*
        name: SetIdentificationAgreement
        nameWithType: ObservationSearch.SetIdentificationAgreement
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetIdentificationAgreement
  JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle*
        name: SetBoundingCircle
        nameWithType: ObservationSearch.SetBoundingCircle
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle*
        name: SetBoundingCircle
        nameWithType: ObservationSearch.SetBoundingCircle
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingCircle
  JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox*
        name: SetBoundingBox
        nameWithType: ObservationSearch.SetBoundingBox
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox*
        name: SetBoundingBox
        nameWithType: ObservationSearch.SetBoundingBox
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetBoundingBox
  JoshAaronMiller.INaturalist.ObservationSearch.SetListId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetListId*
        name: SetListId
        nameWithType: ObservationSearch.SetListId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetListId
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetListId*
        name: SetListId
        nameWithType: ObservationSearch.SetListId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetListId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetListId
  JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId*
        name: ExcludeProjectId
        nameWithType: ObservationSearch.ExcludeProjectId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId*
        name: ExcludeProjectId
        nameWithType: ObservationSearch.ExcludeProjectId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectId
  JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor*
        name: ExcludeProjectRulesFor
        nameWithType: ObservationSearch.ExcludeProjectRulesFor
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor*
        name: ExcludeProjectRulesFor
        nameWithType: ObservationSearch.ExcludeProjectRulesFor
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.ExcludeProjectRulesFor
  JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
        name: ObservationSearch.SearchProperty
        nameWithType: ObservationSearch.SearchProperty
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
        name: ObservationSearch.SearchProperty
        nameWithType: ObservationSearch.SearchProperty
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.SearchProperty
  JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties*
        name: SearchOnProperties
        nameWithType: ObservationSearch.SearchOnProperties
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties*
        name: SearchOnProperties
        nameWithType: ObservationSearch.SearchOnProperties
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SearchOnProperties
  JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade*
        name: SetQualityGrade
        nameWithType: ObservationSearch.SetQualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade*
        name: SetQualityGrade
        nameWithType: ObservationSearch.SetQualityGrade
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetQualityGrade
  JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince*
        name: SetUpdatedSince
        nameWithType: ObservationSearch.SetUpdatedSince
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince*
        name: SetUpdatedSince
        nameWithType: ObservationSearch.SetUpdatedSince
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetUpdatedSince
  JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser*
        name: SetReviewedByUser
        nameWithType: ObservationSearch.SetReviewedByUser
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser*
        name: SetReviewedByUser
        nameWithType: ObservationSearch.SetReviewedByUser
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetReviewedByUser
  JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference*
        name: SetLocalePreference
        nameWithType: ObservationSearch.SetLocalePreference
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference*
        name: SetLocalePreference
        nameWithType: ObservationSearch.SetLocalePreference
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetLocalePreference
  JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId*
        name: SetPreferredPlaceId
        nameWithType: ObservationSearch.SetPreferredPlaceId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId*
        name: SetPreferredPlaceId
        nameWithType: ObservationSearch.SetPreferredPlaceId
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetPreferredPlaceId
  JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl*
        name: SetCacheControl
        nameWithType: ObservationSearch.SetCacheControl
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl*
        name: SetCacheControl
        nameWithType: ObservationSearch.SetCacheControl
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetCacheControl
  JoshAaronMiller.INaturalist.ObservationSearch.SetPagination*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination*
        name: SetPagination
        nameWithType: ObservationSearch.SetPagination
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination*
        name: SetPagination
        nameWithType: ObservationSearch.SetPagination
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetPagination
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetPagination
  JoshAaronMiller.INaturalist.ObservationSearch.SetOrder*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder*
        name: SetOrder
        nameWithType: ObservationSearch.SetOrder
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder*
        name: SetOrder
        nameWithType: ObservationSearch.SetOrder
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.SetOrder
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.ObservationSearch.SetOrder
  JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
        name: ObservationSearch.IucnConservationStatus
        nameWithType: ObservationSearch.IucnConservationStatus
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
        name: ObservationSearch.IucnConservationStatus
        nameWithType: ObservationSearch.IucnConservationStatus
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.IucnConservationStatus
  JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
        name: ObservationSearch.Geoprivacy
        nameWithType: ObservationSearch.Geoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
        name: ObservationSearch.Geoprivacy
        nameWithType: ObservationSearch.Geoprivacy
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.Geoprivacy
  JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
        name: ObservationSearch.IconicTaxon
        nameWithType: ObservationSearch.IconicTaxon
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
      VB:
      - id: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
        name: ObservationSearch.IconicTaxon
        nameWithType: ObservationSearch.IconicTaxon
        qualifiedName: JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.ObservationSearch.IconicTaxon
  System.Collections.Generic.Dictionary{System.String,System.Boolean}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Boolean}
  System.Collections.Generic.Dictionary{System.String,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  JoshAaronMiller.INaturalist.SearchObject.BooleanParameter:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
        name: SearchObject.BooleanParameter
        nameWithType: SearchObject.BooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
        name: SearchObject.BooleanParameter
        nameWithType: SearchObject.BooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.SearchObject.BooleanParameter
  JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter*
        name: SetBooleanParameter
        nameWithType: SearchObject.SetBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter*
        name: SetBooleanParameter
        nameWithType: SearchObject.SetBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.SearchObject.SetBooleanParameter
  JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter*
        name: RemoveBooleanParameter
        nameWithType: SearchObject.RemoveBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter*
        name: RemoveBooleanParameter
        nameWithType: SearchObject.RemoveBooleanParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.SearchObject.RemoveBooleanParameter
  JoshAaronMiller.INaturalist.SearchObject.StringParameter:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter
        name: SearchObject.StringParameter
        nameWithType: SearchObject.StringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.StringParameter
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.StringParameter
        name: SearchObject.StringParameter
        nameWithType: SearchObject.StringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.StringParameter
    isDefinition: true
    parent: JoshAaronMiller.INaturalist
    commentId: T:JoshAaronMiller.INaturalist.SearchObject.StringParameter
  JoshAaronMiller.INaturalist.SearchObject.SetStringParameter*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter*
        name: SetStringParameter
        nameWithType: SearchObject.SetStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter*
        name: SetStringParameter
        nameWithType: SearchObject.SetStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.SetStringParameter
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.SearchObject.SetStringParameter
  JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter*
        name: RemoveStringParameter
        nameWithType: SearchObject.RemoveStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter*
        name: RemoveStringParameter
        nameWithType: SearchObject.RemoveStringParameter
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.SearchObject.RemoveStringParameter
  JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters*
        name: ToUrlParameters
        nameWithType: SearchObject.ToUrlParameters
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
      VB:
      - id: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters*
        name: ToUrlParameters
        nameWithType: SearchObject.ToUrlParameters
        qualifiedName: JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.SearchObject.ToUrlParameters
  JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith*
        name: SetNameBeginsWith
        nameWithType: TaxonSearch.SetNameBeginsWith
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith*
        name: SetNameBeginsWith
        nameWithType: TaxonSearch.SetNameBeginsWith
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.SetNameBeginsWith
  JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds*
        name: IncludeIds
        nameWithType: TaxonSearch.IncludeIds
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds*
        name: IncludeIds
        nameWithType: TaxonSearch.IncludeIds
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.IncludeIds
  JoshAaronMiller.INaturalist.TaxonSearch.SetParentId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId*
        name: SetParentId
        nameWithType: TaxonSearch.SetParentId
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId*
        name: SetParentId
        nameWithType: TaxonSearch.SetParentId
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetParentId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.SetParentId
  JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks*
        name: IncludeTaxonRanks
        nameWithType: TaxonSearch.IncludeTaxonRanks
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks*
        name: IncludeTaxonRanks
        nameWithType: TaxonSearch.IncludeTaxonRanks
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.IncludeTaxonRanks
  JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel*
        name: SetTaxonRankLevel
        nameWithType: TaxonSearch.SetTaxonRankLevel
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel*
        name: SetTaxonRankLevel
        nameWithType: TaxonSearch.SetTaxonRankLevel
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonRankLevel
  JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits*
        name: SetTaxonIdLimits
        nameWithType: TaxonSearch.SetTaxonIdLimits
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits*
        name: SetTaxonIdLimits
        nameWithType: TaxonSearch.SetTaxonIdLimits
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.SetTaxonIdLimits
  JoshAaronMiller.INaturalist.TaxonSearch.SetPagination*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination*
        name: SetPagination
        nameWithType: TaxonSearch.SetPagination
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination*
        name: SetPagination
        nameWithType: TaxonSearch.SetPagination
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetPagination
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.SetPagination
  JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference*
        name: SetLocalePreference
        nameWithType: TaxonSearch.SetLocalePreference
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference*
        name: SetLocalePreference
        nameWithType: TaxonSearch.SetLocalePreference
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.SetLocalePreference
  JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId*:
    name:
      CSharp:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId*
        name: SetPreferredPlaceId
        nameWithType: TaxonSearch.SetPreferredPlaceId
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId
      VB:
      - id: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId*
        name: SetPreferredPlaceId
        nameWithType: TaxonSearch.SetPreferredPlaceId
        qualifiedName: JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId
    isDefinition: true
    commentId: Overload:JoshAaronMiller.INaturalist.TaxonSearch.SetPreferredPlaceId
